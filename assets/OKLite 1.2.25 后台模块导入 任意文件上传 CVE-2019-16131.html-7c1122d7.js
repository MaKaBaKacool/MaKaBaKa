import{_ as p}from"./plugin-vue_export-helper-c27b6911.js";import{r as e,o,c as i,a as n,b as s,d as c,e as a}from"./app-58e4a7d6.js";const l={},r=a(`<h2 id="漏洞描述" tabindex="-1"><a class="header-anchor" href="#漏洞描述" aria-hidden="true">#</a> 漏洞描述</h2><p>OKLite v1.2.25 后台模块导入过滤不完善导致可以上传恶意木马文件</p><h2 id="漏洞影响" tabindex="-1"><a class="header-anchor" href="#漏洞影响" aria-hidden="true">#</a> 漏洞影响</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>OKLite 1.2.25
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="漏洞复现" tabindex="-1"><a class="header-anchor" href="#漏洞复现" aria-hidden="true">#</a> 漏洞复现</h2><p>首先要先清楚它的执行流程</p><p>查看文件 <strong>framework/init.php</strong></p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202162314774.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>在往下面看可以看到执行函数的逻辑</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202162314458.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>`,10),u={href:"http://127.0.0.1/admin.php?c=ABC&f=EFG",target:"_blank",rel:"noopener noreferrer"},k=a(`<p>则是调用 <strong>framework\\admin\\ABC_control.php</strong>中的<strong>EFG_f</strong>方法</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202162314431.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>看到在后台有一个 ZIP 文件上传的函数，找一下上传ZIP文件的位置</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202162314537.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><strong>模块管理 --&gt; 模块导入</strong></p><p>回头看下函数方法的调用</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">zipfile</span><span class="token punctuation">(</span><span class="token variable">$input</span><span class="token punctuation">,</span><span class="token variable">$folder</span><span class="token operator">=</span><span class="token string single-quoted-string">&#39;&#39;</span><span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$input</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
			<span class="token keyword">return</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;status&#39;</span><span class="token operator">=&gt;</span><span class="token string single-quoted-string">&#39;error&#39;</span><span class="token punctuation">,</span><span class="token string single-quoted-string">&#39;content&#39;</span><span class="token operator">=&gt;</span><span class="token function">P_Lang</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;未指定表单名称&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token comment">//如果未指定存储文件夹，则使用</span>
		<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$folder</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
			<span class="token variable">$folder</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;data/cache/&#39;</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">cateid</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
		<span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">set_dir</span><span class="token punctuation">(</span><span class="token variable">$folder</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">set_type</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;zip&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">cate</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;id&#39;</span><span class="token operator">=&gt;</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token string single-quoted-string">&#39;filemax&#39;</span><span class="token operator">=&gt;</span><span class="token number">104857600</span><span class="token punctuation">,</span><span class="token string single-quoted-string">&#39;root&#39;</span><span class="token operator">=&gt;</span><span class="token variable">$folder</span><span class="token punctuation">,</span><span class="token string single-quoted-string">&#39;folder&#39;</span><span class="token operator">=&gt;</span><span class="token string single-quoted-string">&#39;/&#39;</span><span class="token punctuation">,</span><span class="token string single-quoted-string">&#39;filetypes&#39;</span><span class="token operator">=&gt;</span><span class="token string single-quoted-string">&#39;zip&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token variable">$input</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
			<span class="token variable">$rs</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">_upload</span><span class="token punctuation">(</span><span class="token variable">$input</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
			<span class="token variable">$rs</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">_save</span><span class="token punctuation">(</span><span class="token variable">$input</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$rs</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;status&#39;</span><span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token string single-quoted-string">&#39;ok&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
			<span class="token keyword">return</span> <span class="token variable">$rs</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token variable">$rs</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;cate&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">cate</span><span class="token punctuation">;</span>
		<span class="token keyword">return</span> <span class="token variable">$rs</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这里的 上传目录默认为 <strong>data/cache</strong> 这个目录，并调用了两个方法 <em><strong>upload 和</strong></em> <strong>save</strong></p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202162314392.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>可以看到这里其实对上传的zip并没有对里面的文件有什么过滤,任意上传一个ZIP文件抓包</p><p><strong>test.php</strong>文件内容 如下，打包为 <strong>test.zip</strong> 上传</p><div class="language-plain line-numbers-mode" data-ext="plain"><pre class="language-plain"><code>&lt;?php phpinfo();?&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202162315603.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>可以看到这里调用的方法是 <strong>upload_control中的 zip 方法</strong></p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202162315050.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>这里放包后发现调用了另一个方法，跟踪下代码 <strong>framework/admin/module_control.php 中的 import_f方法</strong></p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202162315144.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>这里的方法为解压方法，说明ZIP文件上传的逻辑为</p><p><strong>模块上传 --&gt; ZIP文件写入 data/cache --&gt; 解压刚刚的ZIP文件到 data/cache 目录</strong></p><p>所以这里的流程完全是没有过滤危险文件的，将一个木马文件打包为ZIP文件上传访问即可</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202162315263.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>`,21);function d(g,b){const t=e("ExternalLinkIcon");return o(),i("div",null,[r,n("p",null,[s("例如 "),n("a",u,[s("http://127.0.0.1/admin.php?c=ABC&f=EFG"),c(t)])]),k])}const f=p(l,[["render",d],["__file","OKLite 1.2.25 后台模块导入 任意文件上传 CVE-2019-16131.html.vue"]]);export{f as default};
