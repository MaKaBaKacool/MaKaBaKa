import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{o as e,c as l,e as n,a as i,b as s}from"./app-58e4a7d6.js";const t={},r=n(`<h2 id="漏洞描述" tabindex="-1"><a class="header-anchor" href="#漏洞描述" aria-hidden="true">#</a> 漏洞描述</h2><p>TerraMaster TOS 存在信息泄漏漏洞，攻击者通过漏洞可以获取服务器上的敏感信息，配合 CVE-2022-24989漏洞可以获取服务器权限</p><h2 id="漏洞影响" tabindex="-1"><a class="header-anchor" href="#漏洞影响" aria-hidden="true">#</a> 漏洞影响</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>TerraMaster TOS &lt; 4.2.31
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="网络测绘" tabindex="-1"><a class="header-anchor" href="#网络测绘" aria-hidden="true">#</a> 网络测绘</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&quot;TerraMaster&quot; &amp;&amp; header=&quot;TOS&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="漏洞复现" tabindex="-1"><a class="header-anchor" href="#漏洞复现" aria-hidden="true">#</a> 漏洞复现</h2><p>登录页面</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202205241546495.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>根据POC我们看到 api.php 文件</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202205241547016.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code># 例如下列的Url调用那么$class将是 class，并且$function 是 func。
/module/api.php?class/func
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>我们注意看这几个位置，这里首先定义了一个方法数组, 然后再通过判断调用的方法是否存在这个数组里来定义 REQUEST_MODE参数的值</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>$GLOBALS[&#39;NO_LOGIN_CHECK&#39;] = array(&quot;webNasIPS&quot;, &quot;getDiskList&quot;, &quot;createRaid&quot;, &quot;getInstallStat&quot;, &quot;getIsConfigAdmin&quot;, &quot;setAdminConfig&quot;, &quot;isConnected&quot;);

if (!in_array($function, $GLOBALS[&#39;NO_LOGIN_CHECK&#39;])) {
    define(&#39;REQUEST_MODE&#39;, 1);
    //加载原始session
    if (isset($in[&#39;PHPSESSID&#39;]) &amp;&amp; !empty($in[&#39;PHPSESSID&#39;])) {
        session_id($in[&#39;PHPSESSID&#39;]);
        $GLOBALS[&#39;sessionid&#39;] = $in[&#39;PHPSESSID&#39;];
    }
    @session_start();
    @session_write_close();
    //初始化阵列
    $raid = new raid();
    $base_md = $raid-&gt;_main_disk();
    if (!empty($base_md)) {
        define(&#39;DATA_BASE&#39;, &quot;$base_md/&quot;);
    } else {
        define(&#39;DATA_BASE&#39;, null);
    }
    define(&#39;USER_PATH&#39;, DATA_BASE . &quot;User/&quot;); //用户目录
    define(&#39;PUBLIC_PATH&#39;, DATA_BASE . &quot;public/&quot;); //公共目录
    define(&#39;DATA_THUMB&#39;, DATA_BASE . &#39;@system/thumb/&#39;);//缩略图生成存放
} else {
    define(&#39;REQUEST_MODE&#39;, 0);
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202205241548050.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>`,15),d=i("p",null,[s("走完判断代码后就会实例化 所声明的类"),i("span",{class:"katex"},[i("span",{class:"katex-mathml"},[i("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[i("semantics",null,[i("mrow",null,[i("mi",null,"c"),i("mi",null,"l"),i("mi",null,"a"),i("mi",null,"s"),i("mi",null,"s"),i("mtext",null,"并调用所声明的方法")]),i("annotation",{encoding:"application/x-tex"},"class并调用所声明的方法")])])]),i("span",{class:"katex-html","aria-hidden":"true"},[i("span",{class:"base"},[i("span",{class:"strut",style:{height:"0.6944em"}}),i("span",{class:"mord mathnormal"},"c"),i("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),i("span",{class:"mord mathnormal"},"a"),i("span",{class:"mord mathnormal"},"ss"),i("span",{class:"mord cjk_fallback"},"并调用所声明的方法")])])]),s("function。")],-1),m=n(`<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>$instance = new $class();
if (!in_array($function, $class::$notHeader)) {
    #防止请求重放验证...
    if (tos_encrypt_str($_SERVER[&#39;HTTP_TIMESTAMP&#39;]) != $_SERVER[&#39;HTTP_SIGNATURE&#39;] || $_SERVER[&#39;REQUEST_TIME&#39;] - $_SERVER[&#39;HTTP_TIMESTAMP&#39;] &gt; 300) {
        $instance-&gt;output(&quot;Illegal request, timeout!&quot;, 0);
    }
}
$instance-&gt;$function();
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们再来到漏洞出现的文件 <code>include/class/mobile.class.php</code></p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202205241548043.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>构造函数中有几个关键的判断</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>function __construct()
    {
        parent::__construct();
        $this-&gt;start = $this-&gt;mtime();

        if ($_SERVER[&#39;HTTP_USER_DEVICE&#39;] == &quot;TNAS&quot;){
            $_SERVER[&#39;HTTP_USER_AGENT&#39;] = &quot;TNAS&quot;;
        }
        if (!in_array(Action, self::$notHeader)) {
            if (!strstr($_SERVER[&#39;HTTP_USER_AGENT&#39;], &quot;TNAS&quot;) || !isset($_SERVER[&#39;HTTP_AUTHORIZATION&#39;])) {
                if($this-&gt;REQUESTCODE != $_SERVER[&#39;HTTP_AUTHORIZATION&#39;] &amp;&amp; hash(&quot;sha256&quot;, $this-&gt;REQUESTCODE) != $_SERVER[&#39;HTTP_AUTHORIZATION&#39;]) {
                    $this-&gt;output(&quot;Illegal request, please use genuine software!&quot;, false);
                }
            }
        }
        if (REQUEST_MODE) {
            if (DATA_BASE == null) {
                $this-&gt;output(&quot;main raid not exists&quot;, false);
            }
            //避免session不可写导致循环跳转
            if (!isset($_SESSION)) {
                $this-&gt;output(&quot;session write error!&quot;, false);
            } else {
                $this-&gt;user = &amp;$_SESSION[&#39;kod_user&#39;];
            }
            if (isset($this-&gt;in[&#39;PHPSESSID&#39;])) {
                $this-&gt;sessionid = $this-&gt;in[&#39;PHPSESSID&#39;];
            }
            #管理员接口
            if (in_array(Action, $this-&gt;noPermission)) {
                if ($this-&gt;user[&#39;role&#39;] != &quot;root&quot;) {
                    $this-&gt;output(&quot;User [{$this-&gt;user[&#39;name&#39;]}] does not have permission!&quot;, false);
                }
            }
        }
        if (!in_array(Action, self::$notCheck)) {
            if (!$this-&gt;loginCheck()) {
                $this-&gt;output(&quot;login is timeout&quot;, 0);
            }
        }
        //初始化
        if (self::$U == null) self::$U = new person();
        if (self::$U-&gt;deamon()) {
            $this-&gt;output(&quot;user hasn&#39;t permission!&quot;, true, 0);
        }
    }
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),c=i("p",null,[s("第一个判断了调用的方法名称是否在"),i("span",{class:"katex"},[i("span",{class:"katex-mathml"},[i("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[i("semantics",null,[i("mrow",null,[i("mi",null,"n"),i("mi",null,"o"),i("mi",null,"t"),i("mi",null,"H"),i("mi",null,"e"),i("mi",null,"a"),i("mi",null,"d"),i("mi",null,"e"),i("mi",null,"r"),i("mtext",null,"数组中，它会测试用户代理"),i("mi",null,"h"),i("mi",null,"t"),i("mi",null,"t"),i("mi",null,"p"),i("mtext",null,"标头是否"),i("msup",null,[i("mtext",null,"为"),i("mo",{mathvariant:"normal",lspace:"0em",rspace:"0em"},"′")]),i("mi",null,"T"),i("mi",null,"N"),i("mi",null,"A"),i("msup",null,[i("mi",null,"S"),i("mo",{mathvariant:"normal",lspace:"0em",rspace:"0em"},"′")]),i("mtext",null,"并且"),i("mi",null,"A"),i("mi",null,"U"),i("mi",null,"T"),i("mi",null,"H"),i("mi",null,"O"),i("mi",null,"R"),i("mi",null,"I"),i("mi",null,"Z"),i("mi",null,"A"),i("mi",null,"T"),i("mi",null,"I"),i("mi",null,"O"),i("mi",null,"N"),i("mtext",null,"标头是否等于")]),i("annotation",{encoding:"application/x-tex"},"notHeader数组中，它会测试用户代理 http 标头是否为 'TNAS' 并且 AUTHORIZATION 标头是否等于")])])]),i("span",{class:"katex-html","aria-hidden":"true"},[i("span",{class:"base"},[i("span",{class:"strut",style:{height:"0.9463em","vertical-align":"-0.1944em"}}),i("span",{class:"mord mathnormal"},"n"),i("span",{class:"mord mathnormal"},"o"),i("span",{class:"mord mathnormal"},"t"),i("span",{class:"mord mathnormal"},"He"),i("span",{class:"mord mathnormal"},"a"),i("span",{class:"mord mathnormal"},"d"),i("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"er"),i("span",{class:"mord cjk_fallback"},"数组中，它会测试用户代理"),i("span",{class:"mord mathnormal"},"h"),i("span",{class:"mord mathnormal"},"ttp"),i("span",{class:"mord cjk_fallback"},"标头是否"),i("span",{class:"mord"},[i("span",{class:"mord cjk_fallback"},"为"),i("span",{class:"msupsub"},[i("span",{class:"vlist-t"},[i("span",{class:"vlist-r"},[i("span",{class:"vlist",style:{height:"0.7519em"}},[i("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[i("span",{class:"pstrut",style:{height:"2.7em"}}),i("span",{class:"sizing reset-size6 size3 mtight"},[i("span",{class:"mord mtight"},[i("span",{class:"mord mtight"},"′")])])])])])])])]),i("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"TN"),i("span",{class:"mord mathnormal"},"A"),i("span",{class:"mord"},[i("span",{class:"mord mathnormal",style:{"margin-right":"0.05764em"}},"S"),i("span",{class:"msupsub"},[i("span",{class:"vlist-t"},[i("span",{class:"vlist-r"},[i("span",{class:"vlist",style:{height:"0.7519em"}},[i("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[i("span",{class:"pstrut",style:{height:"2.7em"}}),i("span",{class:"sizing reset-size6 size3 mtight"},[i("span",{class:"mord mtight"},[i("span",{class:"mord mtight"},"′")])])])])])])])]),i("span",{class:"mord cjk_fallback"},"并且"),i("span",{class:"mord mathnormal"},"A"),i("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"U"),i("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"T"),i("span",{class:"mord mathnormal",style:{"margin-right":"0.08125em"}},"H"),i("span",{class:"mord mathnormal",style:{"margin-right":"0.00773em"}},"OR"),i("span",{class:"mord mathnormal",style:{"margin-right":"0.07847em"}},"I"),i("span",{class:"mord mathnormal",style:{"margin-right":"0.07153em"}},"Z"),i("span",{class:"mord mathnormal"},"A"),i("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"T"),i("span",{class:"mord mathnormal",style:{"margin-right":"0.07847em"}},"I"),i("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"ON"),i("span",{class:"mord cjk_fallback"},"标头是否等于")])])]),s("this->REQUESTCODE。否则它会退出并显示错误消息")],-1),u=n(`<figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202205241548384.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>第二个判断了调用的方法是否存在于不需要登录的方法</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>if (!in_array(Action, self::$notCheck)) {
            if (!$this-&gt;loginCheck()) {
                $this-&gt;output(&quot;login is timeout&quot;, 0);
            }
        }
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>接着看下 webNasIPS 调用的定义</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202205241548977.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202205241549498.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>可以发现这个方法均存在于这些判断数组中，我们跟踪到这个方法</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202205241549735.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>可以发现这个方法的调用只需要添加 <code>User-Agent: TNAS,</code> 我们就可以调用这个方法来获取服务器中敏感信息</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>/module/api.php?mobile/webNasIPS
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202205241549014.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>`,11),o=[r,d,m,c,u];function v(p,g){return e(),l("div",null,o)}const f=a(t,[["render",v],["__file","TerraMaster TOS 信息泄漏漏洞 CVE-2022-24990.html.vue"]]);export{f as default};
