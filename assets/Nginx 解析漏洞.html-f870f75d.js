import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{o as a,c as i,e as p}from"./app-58e4a7d6.js";const t={},o=p(`<h2 id="漏洞描述" tabindex="-1"><a class="header-anchor" href="#漏洞描述" aria-hidden="true">#</a> 漏洞描述</h2><p>Nginx解析漏洞复现。</p><p>版本信息：</p><ul><li>Nginx 1.x 最新版</li><li>PHP 7.x最新版</li></ul><p>由此可知，该漏洞与Nginx、php版本无关，属于用户配置不当造成的解析漏洞。</p><h2 id="环境搭建" tabindex="-1"><a class="header-anchor" href="#环境搭建" aria-hidden="true">#</a> 环境搭建</h2><p>Vulhub直接执行<code>docker-compose up -d</code>启动容器，无需编译。</p><p>访问<code>http://your-ip/uploadfiles/nginx.png</code>和<code>http://your-ip/uploadfiles/nginx.png/.php</code>即可查看效果。</p><h2 id="漏洞复现" tabindex="-1"><a class="header-anchor" href="#漏洞复现" aria-hidden="true">#</a> 漏洞复现</h2><p>正常显示：</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202281019435.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>增加<code>/.php</code>后缀，被解析成PHP文件：</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202281020083.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>访问<code>http://your-ip/index.php</code>可以测试上传功能，上传代码不存在漏洞，但利用解析漏洞即可getshell。</p><p>图片马生成命令：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>copy 1.jpg/b+1.php/a 2.jpg
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Vulhub镜像上传图片之前需要赋予<code>/var/www/html</code>目录写入权限。</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202281032796.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>访问<code>http://your-ip/uploadfiles/fb5c81ed3a220004b71069645f112867.png/.php</code>即可触发解析漏洞。</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202281035883.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>`,20),n=[o];function c(d,r){return a(),i("div",null,n)}const g=e(t,[["render",c],["__file","Nginx 解析漏洞.html.vue"]]);export{g as default};
