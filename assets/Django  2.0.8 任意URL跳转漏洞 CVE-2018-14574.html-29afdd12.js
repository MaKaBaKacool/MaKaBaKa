import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{o as a,c as o,e as d}from"./app-58e4a7d6.js";const c={},i=d(`<h2 id="漏洞描述" tabindex="-1"><a class="header-anchor" href="#漏洞描述" aria-hidden="true">#</a> 漏洞描述</h2><p>Django 默认配置下，如果匹配上的 URL 路由中最后一位是/，而用户访问的时候没加/，Django 默认会跳转到带/的请求中。（由配置项中的 <code>django.middleware.common.CommonMiddleware</code>、<code>APPEND_SLASH</code> 来决定）。</p><p>在 path 开头为 <code>//example.com</code> 的情况下，Django 没做处理，导致浏览器认为目的地址是绝对路径，最终造成任意 URL 跳转漏洞。</p><p>该漏洞利用条件是目标 <code>URLCONF</code> 中存在能匹配上 <code>//example.com</code> 的规则。</p><h2 id="环境搭建" tabindex="-1"><a class="header-anchor" href="#环境搭建" aria-hidden="true">#</a> 环境搭建</h2><p>Vulhub 运行如下环境编译及运行一个基于 django 2.0.7 的网站：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker-compose build
docker-compose up -d
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>环境启动后，访问 <code>http://your-ip:8000</code> 即可查看网站首页。</p><h2 id="漏洞复现" tabindex="-1"><a class="header-anchor" href="#漏洞复现" aria-hidden="true">#</a> 漏洞复现</h2><p>访问 <code>http://your-ip:8000//www.example.com</code>，即可返回是 301 跳转到 <code>//www.example.com/</code>：</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202202221627404.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>`,11),n=[i];function t(r,p){return a(),o("div",null,n)}const h=e(c,[["render",t],["__file","Django  2.0.8 任意URL跳转漏洞 CVE-2018-14574.html.vue"]]);export{h as default};
